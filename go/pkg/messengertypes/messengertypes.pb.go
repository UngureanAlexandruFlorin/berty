// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: messengertypes.proto

package messengertypes

import (
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"

	protocoltypes "berty.tech/berty/v2/go/pkg/protocoltypes"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type BertyLink_Kind int32

const (
	BertyLink_UnknownKind         BertyLink_Kind = 0
	BertyLink_ContactInviteV1Kind BertyLink_Kind = 1
	BertyLink_GroupV1Kind         BertyLink_Kind = 2
	BertyLink_EncryptedV1Kind     BertyLink_Kind = 3
)

var BertyLink_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "ContactInviteV1Kind",
	2: "GroupV1Kind",
	3: "EncryptedV1Kind",
}

var BertyLink_Kind_value = map[string]int32{
	"UnknownKind":         0,
	"ContactInviteV1Kind": 1,
	"GroupV1Kind":         2,
	"EncryptedV1Kind":     3,
}

func (x BertyLink_Kind) String() string {
	return proto.EnumName(BertyLink_Kind_name, int32(x))
}

func (BertyLink_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{8, 0}
}

type AppMessage_Type int32

const (
	AppMessage_Undefined           AppMessage_Type = 0
	AppMessage_TypeUserMessage     AppMessage_Type = 1
	AppMessage_TypeUserReaction    AppMessage_Type = 2
	AppMessage_TypeGroupInvitation AppMessage_Type = 3
	AppMessage_TypeSetGroupInfo    AppMessage_Type = 4
	AppMessage_TypeSetUserInfo     AppMessage_Type = 5
	AppMessage_TypeAcknowledge     AppMessage_Type = 6
	AppMessage_TypeReplyOptions    AppMessage_Type = 7
	// these shouldn't be sent on the network
	AppMessage_TypeMonitorMetadata AppMessage_Type = 100
)

var AppMessage_Type_name = map[int32]string{
	0:   "Undefined",
	1:   "TypeUserMessage",
	2:   "TypeUserReaction",
	3:   "TypeGroupInvitation",
	4:   "TypeSetGroupInfo",
	5:   "TypeSetUserInfo",
	6:   "TypeAcknowledge",
	7:   "TypeReplyOptions",
	100: "TypeMonitorMetadata",
}

var AppMessage_Type_value = map[string]int32{
	"Undefined":           0,
	"TypeUserMessage":     1,
	"TypeUserReaction":    2,
	"TypeGroupInvitation": 3,
	"TypeSetGroupInfo":    4,
	"TypeSetUserInfo":     5,
	"TypeAcknowledge":     6,
	"TypeReplyOptions":    7,
	"TypeMonitorMetadata": 100,
}

func (x AppMessage_Type) String() string {
	return proto.EnumName(AppMessage_Type_name, int32(x))
}

func (AppMessage_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 0}
}

type Media_State int32

const (
	Media_StateUnknown Media_State = 0
	// specific to media received
	Media_StateNeverDownloaded     Media_State = 1
	Media_StatePartiallyDownloaded Media_State = 2
	Media_StateDownloaded          Media_State = 3
	Media_StateInCache             Media_State = 4
	Media_StateInvalidCrypto       Media_State = 5
	// specific to media sent
	Media_StatePrepared Media_State = 100
	Media_StateAttached Media_State = 101
)

var Media_State_name = map[int32]string{
	0:   "StateUnknown",
	1:   "StateNeverDownloaded",
	2:   "StatePartiallyDownloaded",
	3:   "StateDownloaded",
	4:   "StateInCache",
	5:   "StateInvalidCrypto",
	100: "StatePrepared",
	101: "StateAttached",
}

var Media_State_value = map[string]int32{
	"StateUnknown":             0,
	"StateNeverDownloaded":     1,
	"StatePartiallyDownloaded": 2,
	"StateDownloaded":          3,
	"StateInCache":             4,
	"StateInvalidCrypto":       5,
	"StatePrepared":            100,
	"StateAttached":            101,
}

func (x Media_State) String() string {
	return proto.EnumName(Media_State_name, int32(x))
}

func (Media_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{22, 0}
}

type Contact_State int32

const (
	Contact_Undefined               Contact_State = 0
	Contact_IncomingRequest         Contact_State = 1
	Contact_OutgoingRequestEnqueued Contact_State = 2
	Contact_OutgoingRequestSent     Contact_State = 3
	Contact_Accepted                Contact_State = 4
)

var Contact_State_name = map[int32]string{
	0: "Undefined",
	1: "IncomingRequest",
	2: "OutgoingRequestEnqueued",
	3: "OutgoingRequestSent",
	4: "Accepted",
}

var Contact_State_value = map[string]int32{
	"Undefined":               0,
	"IncomingRequest":         1,
	"OutgoingRequestEnqueued": 2,
	"OutgoingRequestSent":     3,
	"Accepted":                4,
}

func (x Contact_State) String() string {
	return proto.EnumName(Contact_State_name, int32(x))
}

func (Contact_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{23, 0}
}

type Conversation_Type int32

const (
	Conversation_Undefined       Conversation_Type = 0
	Conversation_AccountType     Conversation_Type = 1
	Conversation_ContactType     Conversation_Type = 2
	Conversation_MultiMemberType Conversation_Type = 3
)

var Conversation_Type_name = map[int32]string{
	0: "Undefined",
	1: "AccountType",
	2: "ContactType",
	3: "MultiMemberType",
}

var Conversation_Type_value = map[string]int32{
	"Undefined":       0,
	"AccountType":     1,
	"ContactType":     2,
	"MultiMemberType": 3,
}

func (x Conversation_Type) String() string {
	return proto.EnumName(Conversation_Type_name, int32(x))
}

func (Conversation_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{24, 0}
}

type StreamEvent_Type int32

const (
	StreamEvent_Undefined               StreamEvent_Type = 0
	StreamEvent_TypeListEnded           StreamEvent_Type = 1
	StreamEvent_TypeConversationUpdated StreamEvent_Type = 2
	StreamEvent_TypeConversationDeleted StreamEvent_Type = 3
	StreamEvent_TypeInteractionUpdated  StreamEvent_Type = 4
	StreamEvent_TypeInteractionDeleted  StreamEvent_Type = 5
	StreamEvent_TypeContactUpdated      StreamEvent_Type = 6
	StreamEvent_TypeAccountUpdated      StreamEvent_Type = 7
	StreamEvent_TypeMemberUpdated       StreamEvent_Type = 8
	StreamEvent_TypeDeviceUpdated       StreamEvent_Type = 9
	StreamEvent_TypeNotified            StreamEvent_Type = 10
	StreamEvent_TypeMediaUpdated        StreamEvent_Type = 11
)

var StreamEvent_Type_name = map[int32]string{
	0:  "Undefined",
	1:  "TypeListEnded",
	2:  "TypeConversationUpdated",
	3:  "TypeConversationDeleted",
	4:  "TypeInteractionUpdated",
	5:  "TypeInteractionDeleted",
	6:  "TypeContactUpdated",
	7:  "TypeAccountUpdated",
	8:  "TypeMemberUpdated",
	9:  "TypeDeviceUpdated",
	10: "TypeNotified",
	11: "TypeMediaUpdated",
}

var StreamEvent_Type_value = map[string]int32{
	"Undefined":               0,
	"TypeListEnded":           1,
	"TypeConversationUpdated": 2,
	"TypeConversationDeleted": 3,
	"TypeInteractionUpdated":  4,
	"TypeInteractionDeleted":  5,
	"TypeContactUpdated":      6,
	"TypeAccountUpdated":      7,
	"TypeMemberUpdated":       8,
	"TypeDeviceUpdated":       9,
	"TypeNotified":            10,
	"TypeMediaUpdated":        11,
}

func (x StreamEvent_Type) String() string {
	return proto.EnumName(StreamEvent_Type_name, int32(x))
}

func (StreamEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 0}
}

type StreamEvent_Notified_Type int32

const (
	StreamEvent_Notified_Unknown                    StreamEvent_Notified_Type = 0
	StreamEvent_Notified_TypeBasic                  StreamEvent_Notified_Type = 1
	StreamEvent_Notified_TypeMessageReceived        StreamEvent_Notified_Type = 2
	StreamEvent_Notified_TypeContactRequestSent     StreamEvent_Notified_Type = 3
	StreamEvent_Notified_TypeContactRequestReceived StreamEvent_Notified_Type = 4
)

var StreamEvent_Notified_Type_name = map[int32]string{
	0: "Unknown",
	1: "TypeBasic",
	2: "TypeMessageReceived",
	3: "TypeContactRequestSent",
	4: "TypeContactRequestReceived",
}

var StreamEvent_Notified_Type_value = map[string]int32{
	"Unknown":                    0,
	"TypeBasic":                  1,
	"TypeMessageReceived":        2,
	"TypeContactRequestSent":     3,
	"TypeContactRequestReceived": 4,
}

func (x StreamEvent_Notified_Type) String() string {
	return proto.EnumName(StreamEvent_Notified_Type_name, int32(x))
}

func (StreamEvent_Notified_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10, 0}
}

type ConversationOpen struct {
}

func (m *ConversationOpen) Reset()         { *m = ConversationOpen{} }
func (m *ConversationOpen) String() string { return proto.CompactTextString(m) }
func (*ConversationOpen) ProtoMessage()    {}
func (*ConversationOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{0}
}

func (m *ConversationOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationOpen.Unmarshal(m, b)
}

func (m *ConversationOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationOpen.Marshal(b, m, deterministic)
}

func (m *ConversationOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationOpen.Merge(m, src)
}

func (m *ConversationOpen) XXX_Size() int {
	return xxx_messageInfo_ConversationOpen.Size(m)
}

func (m *ConversationOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationOpen.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationOpen proto.InternalMessageInfo

type ConversationOpen_Request struct {
	GroupPK string `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
}

func (m *ConversationOpen_Request) Reset()         { *m = ConversationOpen_Request{} }
func (m *ConversationOpen_Request) String() string { return proto.CompactTextString(m) }
func (*ConversationOpen_Request) ProtoMessage()    {}
func (*ConversationOpen_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{0, 0}
}

func (m *ConversationOpen_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationOpen_Request.Unmarshal(m, b)
}

func (m *ConversationOpen_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationOpen_Request.Marshal(b, m, deterministic)
}

func (m *ConversationOpen_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationOpen_Request.Merge(m, src)
}

func (m *ConversationOpen_Request) XXX_Size() int {
	return xxx_messageInfo_ConversationOpen_Request.Size(m)
}

func (m *ConversationOpen_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationOpen_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationOpen_Request proto.InternalMessageInfo

func (m *ConversationOpen_Request) GetGroupPK() string {
	if m != nil {
		return m.GroupPK
	}
	return ""
}

type ConversationOpen_Reply struct {
}

func (m *ConversationOpen_Reply) Reset()         { *m = ConversationOpen_Reply{} }
func (m *ConversationOpen_Reply) String() string { return proto.CompactTextString(m) }
func (*ConversationOpen_Reply) ProtoMessage()    {}
func (*ConversationOpen_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{0, 1}
}

func (m *ConversationOpen_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationOpen_Reply.Unmarshal(m, b)
}

func (m *ConversationOpen_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationOpen_Reply.Marshal(b, m, deterministic)
}

func (m *ConversationOpen_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationOpen_Reply.Merge(m, src)
}

func (m *ConversationOpen_Reply) XXX_Size() int {
	return xxx_messageInfo_ConversationOpen_Reply.Size(m)
}

func (m *ConversationOpen_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationOpen_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationOpen_Reply proto.InternalMessageInfo

type ConversationClose struct {
}

func (m *ConversationClose) Reset()         { *m = ConversationClose{} }
func (m *ConversationClose) String() string { return proto.CompactTextString(m) }
func (*ConversationClose) ProtoMessage()    {}
func (*ConversationClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{1}
}

func (m *ConversationClose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationClose.Unmarshal(m, b)
}

func (m *ConversationClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationClose.Marshal(b, m, deterministic)
}

func (m *ConversationClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationClose.Merge(m, src)
}

func (m *ConversationClose) XXX_Size() int {
	return xxx_messageInfo_ConversationClose.Size(m)
}

func (m *ConversationClose) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationClose.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationClose proto.InternalMessageInfo

type ConversationClose_Request struct {
	GroupPK string `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
}

func (m *ConversationClose_Request) Reset()         { *m = ConversationClose_Request{} }
func (m *ConversationClose_Request) String() string { return proto.CompactTextString(m) }
func (*ConversationClose_Request) ProtoMessage()    {}
func (*ConversationClose_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{1, 0}
}

func (m *ConversationClose_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationClose_Request.Unmarshal(m, b)
}

func (m *ConversationClose_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationClose_Request.Marshal(b, m, deterministic)
}

func (m *ConversationClose_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationClose_Request.Merge(m, src)
}

func (m *ConversationClose_Request) XXX_Size() int {
	return xxx_messageInfo_ConversationClose_Request.Size(m)
}

func (m *ConversationClose_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationClose_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationClose_Request proto.InternalMessageInfo

func (m *ConversationClose_Request) GetGroupPK() string {
	if m != nil {
		return m.GroupPK
	}
	return ""
}

type ConversationClose_Reply struct {
}

func (m *ConversationClose_Reply) Reset()         { *m = ConversationClose_Reply{} }
func (m *ConversationClose_Reply) String() string { return proto.CompactTextString(m) }
func (*ConversationClose_Reply) ProtoMessage()    {}
func (*ConversationClose_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{1, 1}
}

func (m *ConversationClose_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationClose_Reply.Unmarshal(m, b)
}

func (m *ConversationClose_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationClose_Reply.Marshal(b, m, deterministic)
}

func (m *ConversationClose_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationClose_Reply.Merge(m, src)
}

func (m *ConversationClose_Reply) XXX_Size() int {
	return xxx_messageInfo_ConversationClose_Reply.Size(m)
}

func (m *ConversationClose_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationClose_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationClose_Reply proto.InternalMessageInfo

type EchoTest struct {
}

func (m *EchoTest) Reset()         { *m = EchoTest{} }
func (m *EchoTest) String() string { return proto.CompactTextString(m) }
func (*EchoTest) ProtoMessage()    {}
func (*EchoTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{2}
}

func (m *EchoTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest.Unmarshal(m, b)
}

func (m *EchoTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest.Marshal(b, m, deterministic)
}

func (m *EchoTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest.Merge(m, src)
}

func (m *EchoTest) XXX_Size() int {
	return xxx_messageInfo_EchoTest.Size(m)
}

func (m *EchoTest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest proto.InternalMessageInfo

type EchoTest_Request struct {
	Delay        uint64 `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Echo         string `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError bool   `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
}

func (m *EchoTest_Request) Reset()         { *m = EchoTest_Request{} }
func (m *EchoTest_Request) String() string { return proto.CompactTextString(m) }
func (*EchoTest_Request) ProtoMessage()    {}
func (*EchoTest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{2, 0}
}

func (m *EchoTest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest_Request.Unmarshal(m, b)
}

func (m *EchoTest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest_Request.Marshal(b, m, deterministic)
}

func (m *EchoTest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest_Request.Merge(m, src)
}

func (m *EchoTest_Request) XXX_Size() int {
	return xxx_messageInfo_EchoTest_Request.Size(m)
}

func (m *EchoTest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest_Request proto.InternalMessageInfo

func (m *EchoTest_Request) GetDelay() uint64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *EchoTest_Request) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *EchoTest_Request) GetTriggerError() bool {
	if m != nil {
		return m.TriggerError
	}
	return false
}

type EchoTest_Reply struct {
	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (m *EchoTest_Reply) Reset()         { *m = EchoTest_Reply{} }
func (m *EchoTest_Reply) String() string { return proto.CompactTextString(m) }
func (*EchoTest_Reply) ProtoMessage()    {}
func (*EchoTest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{2, 1}
}

func (m *EchoTest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest_Reply.Unmarshal(m, b)
}

func (m *EchoTest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest_Reply.Marshal(b, m, deterministic)
}

func (m *EchoTest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest_Reply.Merge(m, src)
}

func (m *EchoTest_Reply) XXX_Size() int {
	return xxx_messageInfo_EchoTest_Reply.Size(m)
}

func (m *EchoTest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest_Reply proto.InternalMessageInfo

func (m *EchoTest_Reply) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type EchoDuplexTest struct {
}

func (m *EchoDuplexTest) Reset()         { *m = EchoDuplexTest{} }
func (m *EchoDuplexTest) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest) ProtoMessage()    {}
func (*EchoDuplexTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{3}
}

func (m *EchoDuplexTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest.Unmarshal(m, b)
}

func (m *EchoDuplexTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest.Marshal(b, m, deterministic)
}

func (m *EchoDuplexTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest.Merge(m, src)
}

func (m *EchoDuplexTest) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest.Size(m)
}

func (m *EchoDuplexTest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest proto.InternalMessageInfo

type EchoDuplexTest_Request struct {
	Echo         string `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError bool   `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
}

func (m *EchoDuplexTest_Request) Reset()         { *m = EchoDuplexTest_Request{} }
func (m *EchoDuplexTest_Request) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest_Request) ProtoMessage()    {}
func (*EchoDuplexTest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{3, 0}
}

func (m *EchoDuplexTest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest_Request.Unmarshal(m, b)
}

func (m *EchoDuplexTest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest_Request.Marshal(b, m, deterministic)
}

func (m *EchoDuplexTest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest_Request.Merge(m, src)
}

func (m *EchoDuplexTest_Request) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest_Request.Size(m)
}

func (m *EchoDuplexTest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest_Request proto.InternalMessageInfo

func (m *EchoDuplexTest_Request) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *EchoDuplexTest_Request) GetTriggerError() bool {
	if m != nil {
		return m.TriggerError
	}
	return false
}

type EchoDuplexTest_Reply struct {
	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (m *EchoDuplexTest_Reply) Reset()         { *m = EchoDuplexTest_Reply{} }
func (m *EchoDuplexTest_Reply) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest_Reply) ProtoMessage()    {}
func (*EchoDuplexTest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{3, 1}
}

func (m *EchoDuplexTest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest_Reply.Unmarshal(m, b)
}

func (m *EchoDuplexTest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest_Reply.Marshal(b, m, deterministic)
}

func (m *EchoDuplexTest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest_Reply.Merge(m, src)
}

func (m *EchoDuplexTest_Reply) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest_Reply.Size(m)
}

func (m *EchoDuplexTest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest_Reply proto.InternalMessageInfo

func (m *EchoDuplexTest_Reply) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type InstanceShareableBertyID struct {
}

func (m *InstanceShareableBertyID) Reset()         { *m = InstanceShareableBertyID{} }
func (m *InstanceShareableBertyID) String() string { return proto.CompactTextString(m) }
func (*InstanceShareableBertyID) ProtoMessage()    {}
func (*InstanceShareableBertyID) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{4}
}

func (m *InstanceShareableBertyID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceShareableBertyID.Unmarshal(m, b)
}

func (m *InstanceShareableBertyID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceShareableBertyID.Marshal(b, m, deterministic)
}

func (m *InstanceShareableBertyID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceShareableBertyID.Merge(m, src)
}

func (m *InstanceShareableBertyID) XXX_Size() int {
	return xxx_messageInfo_InstanceShareableBertyID.Size(m)
}

func (m *InstanceShareableBertyID) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceShareableBertyID.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceShareableBertyID proto.InternalMessageInfo

type InstanceShareableBertyID_Request struct {
	// reset will regenerate a new link
	Reset_      bool   `protobuf:"varint,1,opt,name=reset,proto3" json:"reset,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// optional passphase to encrypt the link
	Passphrase []byte `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *InstanceShareableBertyID_Request) Reset()         { *m = InstanceShareableBertyID_Request{} }
func (m *InstanceShareableBertyID_Request) String() string { return proto.CompactTextString(m) }
func (*InstanceShareableBertyID_Request) ProtoMessage()    {}
func (*InstanceShareableBertyID_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{4, 0}
}

func (m *InstanceShareableBertyID_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceShareableBertyID_Request.Unmarshal(m, b)
}

func (m *InstanceShareableBertyID_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceShareableBertyID_Request.Marshal(b, m, deterministic)
}

func (m *InstanceShareableBertyID_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceShareableBertyID_Request.Merge(m, src)
}

func (m *InstanceShareableBertyID_Request) XXX_Size() int {
	return xxx_messageInfo_InstanceShareableBertyID_Request.Size(m)
}

func (m *InstanceShareableBertyID_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceShareableBertyID_Request.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceShareableBertyID_Request proto.InternalMessageInfo

func (m *InstanceShareableBertyID_Request) GetReset_() bool {
	if m != nil {
		return m.Reset_
	}
	return false
}

func (m *InstanceShareableBertyID_Request) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *InstanceShareableBertyID_Request) GetPassphrase() []byte {
	if m != nil {
		return m.Passphrase
	}
	return nil
}

type InstanceShareableBertyID_Reply struct {
	Link        *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	InternalURL string     `protobuf:"bytes,2,opt,name=internal_url,json=internalUrl,proto3" json:"internal_url,omitempty"`
	WebURL      string     `protobuf:"bytes,3,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (m *InstanceShareableBertyID_Reply) Reset()         { *m = InstanceShareableBertyID_Reply{} }
func (m *InstanceShareableBertyID_Reply) String() string { return proto.CompactTextString(m) }
func (*InstanceShareableBertyID_Reply) ProtoMessage()    {}
func (*InstanceShareableBertyID_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{4, 1}
}

func (m *InstanceShareableBertyID_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceShareableBertyID_Reply.Unmarshal(m, b)
}

func (m *InstanceShareableBertyID_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceShareableBertyID_Reply.Marshal(b, m, deterministic)
}

func (m *InstanceShareableBertyID_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceShareableBertyID_Reply.Merge(m, src)
}

func (m *InstanceShareableBertyID_Reply) XXX_Size() int {
	return xxx_messageInfo_InstanceShareableBertyID_Reply.Size(m)
}

func (m *InstanceShareableBertyID_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceShareableBertyID_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceShareableBertyID_Reply proto.InternalMessageInfo

func (m *InstanceShareableBertyID_Reply) GetLink() *BertyLink {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *InstanceShareableBertyID_Reply) GetInternalURL() string {
	if m != nil {
		return m.InternalURL
	}
	return ""
}

func (m *InstanceShareableBertyID_Reply) GetWebURL() string {
	if m != nil {
		return m.WebURL
	}
	return ""
}

type ShareableBertyGroup struct {
}

func (m *ShareableBertyGroup) Reset()         { *m = ShareableBertyGroup{} }
func (m *ShareableBertyGroup) String() string { return proto.CompactTextString(m) }
func (*ShareableBertyGroup) ProtoMessage()    {}
func (*ShareableBertyGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{5}
}

func (m *ShareableBertyGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareableBertyGroup.Unmarshal(m, b)
}

func (m *ShareableBertyGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareableBertyGroup.Marshal(b, m, deterministic)
}

func (m *ShareableBertyGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareableBertyGroup.Merge(m, src)
}

func (m *ShareableBertyGroup) XXX_Size() int {
	return xxx_messageInfo_ShareableBertyGroup.Size(m)
}

func (m *ShareableBertyGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareableBertyGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ShareableBertyGroup proto.InternalMessageInfo

type ShareableBertyGroup_Request struct {
	GroupPK   []byte `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (m *ShareableBertyGroup_Request) Reset()         { *m = ShareableBertyGroup_Request{} }
func (m *ShareableBertyGroup_Request) String() string { return proto.CompactTextString(m) }
func (*ShareableBertyGroup_Request) ProtoMessage()    {}
func (*ShareableBertyGroup_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{5, 0}
}

func (m *ShareableBertyGroup_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareableBertyGroup_Request.Unmarshal(m, b)
}

func (m *ShareableBertyGroup_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareableBertyGroup_Request.Marshal(b, m, deterministic)
}

func (m *ShareableBertyGroup_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareableBertyGroup_Request.Merge(m, src)
}

func (m *ShareableBertyGroup_Request) XXX_Size() int {
	return xxx_messageInfo_ShareableBertyGroup_Request.Size(m)
}

func (m *ShareableBertyGroup_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareableBertyGroup_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ShareableBertyGroup_Request proto.InternalMessageInfo

func (m *ShareableBertyGroup_Request) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *ShareableBertyGroup_Request) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type ShareableBertyGroup_Reply struct {
	Link        *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	InternalURL string     `protobuf:"bytes,2,opt,name=internal_url,json=internalUrl,proto3" json:"internal_url,omitempty"`
	WebURL      string     `protobuf:"bytes,3,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (m *ShareableBertyGroup_Reply) Reset()         { *m = ShareableBertyGroup_Reply{} }
func (m *ShareableBertyGroup_Reply) String() string { return proto.CompactTextString(m) }
func (*ShareableBertyGroup_Reply) ProtoMessage()    {}
func (*ShareableBertyGroup_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{5, 1}
}

func (m *ShareableBertyGroup_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareableBertyGroup_Reply.Unmarshal(m, b)
}

func (m *ShareableBertyGroup_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareableBertyGroup_Reply.Marshal(b, m, deterministic)
}

func (m *ShareableBertyGroup_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareableBertyGroup_Reply.Merge(m, src)
}

func (m *ShareableBertyGroup_Reply) XXX_Size() int {
	return xxx_messageInfo_ShareableBertyGroup_Reply.Size(m)
}

func (m *ShareableBertyGroup_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareableBertyGroup_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ShareableBertyGroup_Reply proto.InternalMessageInfo

func (m *ShareableBertyGroup_Reply) GetLink() *BertyLink {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *ShareableBertyGroup_Reply) GetInternalURL() string {
	if m != nil {
		return m.InternalURL
	}
	return ""
}

func (m *ShareableBertyGroup_Reply) GetWebURL() string {
	if m != nil {
		return m.WebURL
	}
	return ""
}

type DevShareInstanceBertyID struct {
}

func (m *DevShareInstanceBertyID) Reset()         { *m = DevShareInstanceBertyID{} }
func (m *DevShareInstanceBertyID) String() string { return proto.CompactTextString(m) }
func (*DevShareInstanceBertyID) ProtoMessage()    {}
func (*DevShareInstanceBertyID) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{6}
}

func (m *DevShareInstanceBertyID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevShareInstanceBertyID.Unmarshal(m, b)
}

func (m *DevShareInstanceBertyID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevShareInstanceBertyID.Marshal(b, m, deterministic)
}

func (m *DevShareInstanceBertyID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevShareInstanceBertyID.Merge(m, src)
}

func (m *DevShareInstanceBertyID) XXX_Size() int {
	return xxx_messageInfo_DevShareInstanceBertyID.Size(m)
}

func (m *DevShareInstanceBertyID) XXX_DiscardUnknown() {
	xxx_messageInfo_DevShareInstanceBertyID.DiscardUnknown(m)
}

var xxx_messageInfo_DevShareInstanceBertyID proto.InternalMessageInfo

type DevShareInstanceBertyID_Request struct {
	// reset will regenerate a new link
	Reset_      bool   `protobuf:"varint,1,opt,name=reset,proto3" json:"reset,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (m *DevShareInstanceBertyID_Request) Reset()         { *m = DevShareInstanceBertyID_Request{} }
func (m *DevShareInstanceBertyID_Request) String() string { return proto.CompactTextString(m) }
func (*DevShareInstanceBertyID_Request) ProtoMessage()    {}
func (*DevShareInstanceBertyID_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{6, 0}
}

func (m *DevShareInstanceBertyID_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevShareInstanceBertyID_Request.Unmarshal(m, b)
}

func (m *DevShareInstanceBertyID_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevShareInstanceBertyID_Request.Marshal(b, m, deterministic)
}

func (m *DevShareInstanceBertyID_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevShareInstanceBertyID_Request.Merge(m, src)
}

func (m *DevShareInstanceBertyID_Request) XXX_Size() int {
	return xxx_messageInfo_DevShareInstanceBertyID_Request.Size(m)
}

func (m *DevShareInstanceBertyID_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_DevShareInstanceBertyID_Request.DiscardUnknown(m)
}

var xxx_messageInfo_DevShareInstanceBertyID_Request proto.InternalMessageInfo

func (m *DevShareInstanceBertyID_Request) GetReset_() bool {
	if m != nil {
		return m.Reset_
	}
	return false
}

func (m *DevShareInstanceBertyID_Request) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type DevShareInstanceBertyID_Reply struct {
}

func (m *DevShareInstanceBertyID_Reply) Reset()         { *m = DevShareInstanceBertyID_Reply{} }
func (m *DevShareInstanceBertyID_Reply) String() string { return proto.CompactTextString(m) }
func (*DevShareInstanceBertyID_Reply) ProtoMessage()    {}
func (*DevShareInstanceBertyID_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{6, 1}
}

func (m *DevShareInstanceBertyID_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevShareInstanceBertyID_Reply.Unmarshal(m, b)
}

func (m *DevShareInstanceBertyID_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevShareInstanceBertyID_Reply.Marshal(b, m, deterministic)
}

func (m *DevShareInstanceBertyID_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevShareInstanceBertyID_Reply.Merge(m, src)
}

func (m *DevShareInstanceBertyID_Reply) XXX_Size() int {
	return xxx_messageInfo_DevShareInstanceBertyID_Reply.Size(m)
}

func (m *DevShareInstanceBertyID_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_DevShareInstanceBertyID_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_DevShareInstanceBertyID_Reply proto.InternalMessageInfo

type ParseDeepLink struct {
}

func (m *ParseDeepLink) Reset()         { *m = ParseDeepLink{} }
func (m *ParseDeepLink) String() string { return proto.CompactTextString(m) }
func (*ParseDeepLink) ProtoMessage()    {}
func (*ParseDeepLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{7}
}

func (m *ParseDeepLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseDeepLink.Unmarshal(m, b)
}

func (m *ParseDeepLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseDeepLink.Marshal(b, m, deterministic)
}

func (m *ParseDeepLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseDeepLink.Merge(m, src)
}

func (m *ParseDeepLink) XXX_Size() int {
	return xxx_messageInfo_ParseDeepLink.Size(m)
}

func (m *ParseDeepLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseDeepLink.DiscardUnknown(m)
}

var xxx_messageInfo_ParseDeepLink proto.InternalMessageInfo

type ParseDeepLink_Request struct {
	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *ParseDeepLink_Request) Reset()         { *m = ParseDeepLink_Request{} }
func (m *ParseDeepLink_Request) String() string { return proto.CompactTextString(m) }
func (*ParseDeepLink_Request) ProtoMessage()    {}
func (*ParseDeepLink_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{7, 0}
}

func (m *ParseDeepLink_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseDeepLink_Request.Unmarshal(m, b)
}

func (m *ParseDeepLink_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseDeepLink_Request.Marshal(b, m, deterministic)
}

func (m *ParseDeepLink_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseDeepLink_Request.Merge(m, src)
}

func (m *ParseDeepLink_Request) XXX_Size() int {
	return xxx_messageInfo_ParseDeepLink_Request.Size(m)
}

func (m *ParseDeepLink_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseDeepLink_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ParseDeepLink_Request proto.InternalMessageInfo

func (m *ParseDeepLink_Request) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ParseDeepLink_Request) GetPassphrase() []byte {
	if m != nil {
		return m.Passphrase
	}
	return nil
}

type ParseDeepLink_Reply struct {
	Link *BertyLink `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
}

func (m *ParseDeepLink_Reply) Reset()         { *m = ParseDeepLink_Reply{} }
func (m *ParseDeepLink_Reply) String() string { return proto.CompactTextString(m) }
func (*ParseDeepLink_Reply) ProtoMessage()    {}
func (*ParseDeepLink_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{7, 1}
}

func (m *ParseDeepLink_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseDeepLink_Reply.Unmarshal(m, b)
}

func (m *ParseDeepLink_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseDeepLink_Reply.Marshal(b, m, deterministic)
}

func (m *ParseDeepLink_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseDeepLink_Reply.Merge(m, src)
}

func (m *ParseDeepLink_Reply) XXX_Size() int {
	return xxx_messageInfo_ParseDeepLink_Reply.Size(m)
}

func (m *ParseDeepLink_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseDeepLink_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ParseDeepLink_Reply proto.InternalMessageInfo

func (m *ParseDeepLink_Reply) GetLink() *BertyLink {
	if m != nil {
		return m.Link
	}
	return nil
}

type BertyLink struct {
	Kind       BertyLink_Kind       `protobuf:"varint,1,opt,name=kind,proto3,enum=berty.messenger.v1.BertyLink_Kind" json:"kind,omitempty"`
	BertyID    *BertyID             `protobuf:"bytes,2,opt,name=berty_id,json=bertyId,proto3" json:"berty_id,omitempty"`
	BertyGroup *BertyGroup          `protobuf:"bytes,3,opt,name=berty_group,json=bertyGroup,proto3" json:"berty_group,omitempty"`
	Encrypted  *BertyLink_Encrypted `protobuf:"bytes,4,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
}

func (m *BertyLink) Reset()         { *m = BertyLink{} }
func (m *BertyLink) String() string { return proto.CompactTextString(m) }
func (*BertyLink) ProtoMessage()    {}
func (*BertyLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{8}
}

func (m *BertyLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BertyLink.Unmarshal(m, b)
}

func (m *BertyLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BertyLink.Marshal(b, m, deterministic)
}

func (m *BertyLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BertyLink.Merge(m, src)
}

func (m *BertyLink) XXX_Size() int {
	return xxx_messageInfo_BertyLink.Size(m)
}

func (m *BertyLink) XXX_DiscardUnknown() {
	xxx_messageInfo_BertyLink.DiscardUnknown(m)
}

var xxx_messageInfo_BertyLink proto.InternalMessageInfo

func (m *BertyLink) GetKind() BertyLink_Kind {
	if m != nil {
		return m.Kind
	}
	return BertyLink_UnknownKind
}

func (m *BertyLink) GetBertyID() *BertyID {
	if m != nil {
		return m.BertyID
	}
	return nil
}

func (m *BertyLink) GetBertyGroup() *BertyGroup {
	if m != nil {
		return m.BertyGroup
	}
	return nil
}

func (m *BertyLink) GetEncrypted() *BertyLink_Encrypted {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

// Encrypted is a clear structure containing clear and encrypted fields.
//
// We prefer to use a clear struct with encrypted fields instead of a simple
// encrypted struct, to improves chances of having a valid structure even
// with an invalid passphase. This will force an attacker to have more resources
// to test more false-positive guesses.
type BertyLink_Encrypted struct {
	// kind is a clear representation of the unencrypted link type.
	Kind BertyLink_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=berty.messenger.v1.BertyLink_Kind" json:"kind,omitempty"`
	// nonce is a clear field used by scrypt as "salt" to derive the passphrase and
	// also used by cipher.NewCTR as "iv" to initialize a stream cipher.
	Nonce []byte `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// display_name is an optional clear representation of the display name.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// checksum is an optional field used to check if the decryption was successful.
	// the length is customizable (SHAKE256). a longer checksum means less conflicts.
	// having more conflicts may be bad in term of UX, but make it easier for an attacker
	// to run an offline bruteforce.
	Checksum                    []byte                  `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	ContactPublicRendezvousSeed []byte                  `protobuf:"bytes,10,opt,name=contact_public_rendezvous_seed,json=contactPublicRendezvousSeed,proto3" json:"contact_public_rendezvous_seed,omitempty"`
	ContactAccountPK            []byte                  `protobuf:"bytes,11,opt,name=contact_account_pk,json=contactAccountPk,proto3" json:"contact_account_pk,omitempty"`
	GroupPublicKey              []byte                  `protobuf:"bytes,20,opt,name=group_public_key,json=groupPublicKey,proto3" json:"group_public_key,omitempty"`
	GroupSecret                 []byte                  `protobuf:"bytes,21,opt,name=group_secret,json=groupSecret,proto3" json:"group_secret,omitempty"`
	GroupSecretSig              []byte                  `protobuf:"bytes,22,opt,name=group_secret_sig,json=groupSecretSig,proto3" json:"group_secret_sig,omitempty"`
	GroupType                   protocoltypes.GroupType `protobuf:"varint,23,opt,name=group_type,json=groupType,proto3,enum=berty.protocol.v1.GroupType" json:"group_type,omitempty"`
	GroupSignPub                []byte                  `protobuf:"bytes,24,opt,name=group_sign_pub,json=groupSignPub,proto3" json:"group_sign_pub,omitempty"`
}

func (m *BertyLink_Encrypted) Reset()         { *m = BertyLink_Encrypted{} }
func (m *BertyLink_Encrypted) String() string { return proto.CompactTextString(m) }
func (*BertyLink_Encrypted) ProtoMessage()    {}
func (*BertyLink_Encrypted) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{8, 0}
}

func (m *BertyLink_Encrypted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BertyLink_Encrypted.Unmarshal(m, b)
}

func (m *BertyLink_Encrypted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BertyLink_Encrypted.Marshal(b, m, deterministic)
}

func (m *BertyLink_Encrypted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BertyLink_Encrypted.Merge(m, src)
}

func (m *BertyLink_Encrypted) XXX_Size() int {
	return xxx_messageInfo_BertyLink_Encrypted.Size(m)
}

func (m *BertyLink_Encrypted) XXX_DiscardUnknown() {
	xxx_messageInfo_BertyLink_Encrypted.DiscardUnknown(m)
}

var xxx_messageInfo_BertyLink_Encrypted proto.InternalMessageInfo

func (m *BertyLink_Encrypted) GetKind() BertyLink_Kind {
	if m != nil {
		return m.Kind
	}
	return BertyLink_UnknownKind
}

func (m *BertyLink_Encrypted) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *BertyLink_Encrypted) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *BertyLink_Encrypted) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *BertyLink_Encrypted) GetContactPublicRendezvousSeed() []byte {
	if m != nil {
		return m.ContactPublicRendezvousSeed
	}
	return nil
}

func (m *BertyLink_Encrypted) GetContactAccountPK() []byte {
	if m != nil {
		return m.ContactAccountPK
	}
	return nil
}

func (m *BertyLink_Encrypted) GetGroupPublicKey() []byte {
	if m != nil {
		return m.GroupPublicKey
	}
	return nil
}

func (m *BertyLink_Encrypted) GetGroupSecret() []byte {
	if m != nil {
		return m.GroupSecret
	}
	return nil
}

func (m *BertyLink_Encrypted) GetGroupSecretSig() []byte {
	if m != nil {
		return m.GroupSecretSig
	}
	return nil
}

func (m *BertyLink_Encrypted) GetGroupType() protocoltypes.GroupType {
	if m != nil {
		return m.GroupType
	}
	return protocoltypes.GroupTypeUndefined
}

func (m *BertyLink_Encrypted) GetGroupSignPub() []byte {
	if m != nil {
		return m.GroupSignPub
	}
	return nil
}

type SendContactRequest struct {
}

func (m *SendContactRequest) Reset()         { *m = SendContactRequest{} }
func (m *SendContactRequest) String() string { return proto.CompactTextString(m) }
func (*SendContactRequest) ProtoMessage()    {}
func (*SendContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{9}
}

func (m *SendContactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendContactRequest.Unmarshal(m, b)
}

func (m *SendContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendContactRequest.Marshal(b, m, deterministic)
}

func (m *SendContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendContactRequest.Merge(m, src)
}

func (m *SendContactRequest) XXX_Size() int {
	return xxx_messageInfo_SendContactRequest.Size(m)
}

func (m *SendContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendContactRequest proto.InternalMessageInfo

type SendContactRequest_Request struct {
	BertyID     *BertyID `protobuf:"bytes,1,opt,name=berty_id,json=bertyId,proto3" json:"berty_id,omitempty"`
	Metadata    []byte   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	OwnMetadata []byte   `protobuf:"bytes,3,opt,name=own_metadata,json=ownMetadata,proto3" json:"own_metadata,omitempty"`
}

func (m *SendContactRequest_Request) Reset()         { *m = SendContactRequest_Request{} }
func (m *SendContactRequest_Request) String() string { return proto.CompactTextString(m) }
func (*SendContactRequest_Request) ProtoMessage()    {}
func (*SendContactRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{9, 0}
}

func (m *SendContactRequest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendContactRequest_Request.Unmarshal(m, b)
}

func (m *SendContactRequest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendContactRequest_Request.Marshal(b, m, deterministic)
}

func (m *SendContactRequest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendContactRequest_Request.Merge(m, src)
}

func (m *SendContactRequest_Request) XXX_Size() int {
	return xxx_messageInfo_SendContactRequest_Request.Size(m)
}

func (m *SendContactRequest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SendContactRequest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SendContactRequest_Request proto.InternalMessageInfo

func (m *SendContactRequest_Request) GetBertyID() *BertyID {
	if m != nil {
		return m.BertyID
	}
	return nil
}

func (m *SendContactRequest_Request) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SendContactRequest_Request) GetOwnMetadata() []byte {
	if m != nil {
		return m.OwnMetadata
	}
	return nil
}

type SendContactRequest_Reply struct {
}

func (m *SendContactRequest_Reply) Reset()         { *m = SendContactRequest_Reply{} }
func (m *SendContactRequest_Reply) String() string { return proto.CompactTextString(m) }
func (*SendContactRequest_Reply) ProtoMessage()    {}
func (*SendContactRequest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{9, 1}
}

func (m *SendContactRequest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendContactRequest_Reply.Unmarshal(m, b)
}

func (m *SendContactRequest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendContactRequest_Reply.Marshal(b, m, deterministic)
}

func (m *SendContactRequest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendContactRequest_Reply.Merge(m, src)
}

func (m *SendContactRequest_Reply) XXX_Size() int {
	return xxx_messageInfo_SendContactRequest_Reply.Size(m)
}

func (m *SendContactRequest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendContactRequest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_SendContactRequest_Reply proto.InternalMessageInfo

type SendAck struct {
}

func (m *SendAck) Reset()         { *m = SendAck{} }
func (m *SendAck) String() string { return proto.CompactTextString(m) }
func (*SendAck) ProtoMessage()    {}
func (*SendAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{10}
}

func (m *SendAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendAck.Unmarshal(m, b)
}

func (m *SendAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendAck.Marshal(b, m, deterministic)
}

func (m *SendAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendAck.Merge(m, src)
}

func (m *SendAck) XXX_Size() int {
	return xxx_messageInfo_SendAck.Size(m)
}

func (m *SendAck) XXX_DiscardUnknown() {
	xxx_messageInfo_SendAck.DiscardUnknown(m)
}

var xxx_messageInfo_SendAck proto.InternalMessageInfo

type SendAck_Request struct {
	GroupPK   []byte `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	MessageID []byte `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (m *SendAck_Request) Reset()         { *m = SendAck_Request{} }
func (m *SendAck_Request) String() string { return proto.CompactTextString(m) }
func (*SendAck_Request) ProtoMessage()    {}
func (*SendAck_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{10, 0}
}

func (m *SendAck_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendAck_Request.Unmarshal(m, b)
}

func (m *SendAck_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendAck_Request.Marshal(b, m, deterministic)
}

func (m *SendAck_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendAck_Request.Merge(m, src)
}

func (m *SendAck_Request) XXX_Size() int {
	return xxx_messageInfo_SendAck_Request.Size(m)
}

func (m *SendAck_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SendAck_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SendAck_Request proto.InternalMessageInfo

func (m *SendAck_Request) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *SendAck_Request) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

type SendAck_Reply struct {
}

func (m *SendAck_Reply) Reset()         { *m = SendAck_Reply{} }
func (m *SendAck_Reply) String() string { return proto.CompactTextString(m) }
func (*SendAck_Reply) ProtoMessage()    {}
func (*SendAck_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{10, 1}
}

func (m *SendAck_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendAck_Reply.Unmarshal(m, b)
}

func (m *SendAck_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendAck_Reply.Marshal(b, m, deterministic)
}

func (m *SendAck_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendAck_Reply.Merge(m, src)
}

func (m *SendAck_Reply) XXX_Size() int {
	return xxx_messageInfo_SendAck_Reply.Size(m)
}

func (m *SendAck_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendAck_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_SendAck_Reply proto.InternalMessageInfo

type SendMessage struct {
}

func (m *SendMessage) Reset()         { *m = SendMessage{} }
func (m *SendMessage) String() string { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()    {}
func (*SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{11}
}

func (m *SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage.Unmarshal(m, b)
}

func (m *SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage.Marshal(b, m, deterministic)
}

func (m *SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage.Merge(m, src)
}

func (m *SendMessage) XXX_Size() int {
	return xxx_messageInfo_SendMessage.Size(m)
}

func (m *SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage proto.InternalMessageInfo

type SendMessage_Request struct {
	GroupPK []byte `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *SendMessage_Request) Reset()         { *m = SendMessage_Request{} }
func (m *SendMessage_Request) String() string { return proto.CompactTextString(m) }
func (*SendMessage_Request) ProtoMessage()    {}
func (*SendMessage_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{11, 0}
}

func (m *SendMessage_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage_Request.Unmarshal(m, b)
}

func (m *SendMessage_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage_Request.Marshal(b, m, deterministic)
}

func (m *SendMessage_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage_Request.Merge(m, src)
}

func (m *SendMessage_Request) XXX_Size() int {
	return xxx_messageInfo_SendMessage_Request.Size(m)
}

func (m *SendMessage_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage_Request proto.InternalMessageInfo

func (m *SendMessage_Request) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *SendMessage_Request) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SendMessage_Reply struct {
}

func (m *SendMessage_Reply) Reset()         { *m = SendMessage_Reply{} }
func (m *SendMessage_Reply) String() string { return proto.CompactTextString(m) }
func (*SendMessage_Reply) ProtoMessage()    {}
func (*SendMessage_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{11, 1}
}

func (m *SendMessage_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessage_Reply.Unmarshal(m, b)
}

func (m *SendMessage_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessage_Reply.Marshal(b, m, deterministic)
}

func (m *SendMessage_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessage_Reply.Merge(m, src)
}

func (m *SendMessage_Reply) XXX_Size() int {
	return xxx_messageInfo_SendMessage_Reply.Size(m)
}

func (m *SendMessage_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessage_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessage_Reply proto.InternalMessageInfo

type SendReplyOptions struct {
}

func (m *SendReplyOptions) Reset()         { *m = SendReplyOptions{} }
func (m *SendReplyOptions) String() string { return proto.CompactTextString(m) }
func (*SendReplyOptions) ProtoMessage()    {}
func (*SendReplyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{12}
}

func (m *SendReplyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReplyOptions.Unmarshal(m, b)
}

func (m *SendReplyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReplyOptions.Marshal(b, m, deterministic)
}

func (m *SendReplyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReplyOptions.Merge(m, src)
}

func (m *SendReplyOptions) XXX_Size() int {
	return xxx_messageInfo_SendReplyOptions.Size(m)
}

func (m *SendReplyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReplyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SendReplyOptions proto.InternalMessageInfo

type SendReplyOptions_Request struct {
	GroupPK []byte                   `protobuf:"bytes,1,opt,name=group_pk,json=groupPk,proto3" json:"group_pk,omitempty"`
	Options *AppMessage_ReplyOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (m *SendReplyOptions_Request) Reset()         { *m = SendReplyOptions_Request{} }
func (m *SendReplyOptions_Request) String() string { return proto.CompactTextString(m) }
func (*SendReplyOptions_Request) ProtoMessage()    {}
func (*SendReplyOptions_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{12, 0}
}

func (m *SendReplyOptions_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReplyOptions_Request.Unmarshal(m, b)
}

func (m *SendReplyOptions_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReplyOptions_Request.Marshal(b, m, deterministic)
}

func (m *SendReplyOptions_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReplyOptions_Request.Merge(m, src)
}

func (m *SendReplyOptions_Request) XXX_Size() int {
	return xxx_messageInfo_SendReplyOptions_Request.Size(m)
}

func (m *SendReplyOptions_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReplyOptions_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SendReplyOptions_Request proto.InternalMessageInfo

func (m *SendReplyOptions_Request) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *SendReplyOptions_Request) GetOptions() *AppMessage_ReplyOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type SendReplyOptions_Reply struct {
}

func (m *SendReplyOptions_Reply) Reset()         { *m = SendReplyOptions_Reply{} }
func (m *SendReplyOptions_Reply) String() string { return proto.CompactTextString(m) }
func (*SendReplyOptions_Reply) ProtoMessage()    {}
func (*SendReplyOptions_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{12, 1}
}

func (m *SendReplyOptions_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReplyOptions_Reply.Unmarshal(m, b)
}

func (m *SendReplyOptions_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReplyOptions_Reply.Marshal(b, m, deterministic)
}

func (m *SendReplyOptions_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReplyOptions_Reply.Merge(m, src)
}

func (m *SendReplyOptions_Reply) XXX_Size() int {
	return xxx_messageInfo_SendReplyOptions_Reply.Size(m)
}

func (m *SendReplyOptions_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReplyOptions_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_SendReplyOptions_Reply proto.InternalMessageInfo

type BertyID struct {
	PublicRendezvousSeed []byte `protobuf:"bytes,1,opt,name=public_rendezvous_seed,json=publicRendezvousSeed,proto3" json:"public_rendezvous_seed,omitempty"`
	AccountPK            []byte `protobuf:"bytes,2,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	DisplayName          string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (m *BertyID) Reset()         { *m = BertyID{} }
func (m *BertyID) String() string { return proto.CompactTextString(m) }
func (*BertyID) ProtoMessage()    {}
func (*BertyID) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{13}
}

func (m *BertyID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BertyID.Unmarshal(m, b)
}

func (m *BertyID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BertyID.Marshal(b, m, deterministic)
}

func (m *BertyID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BertyID.Merge(m, src)
}

func (m *BertyID) XXX_Size() int {
	return xxx_messageInfo_BertyID.Size(m)
}

func (m *BertyID) XXX_DiscardUnknown() {
	xxx_messageInfo_BertyID.DiscardUnknown(m)
}

var xxx_messageInfo_BertyID proto.InternalMessageInfo

func (m *BertyID) GetPublicRendezvousSeed() []byte {
	if m != nil {
		return m.PublicRendezvousSeed
	}
	return nil
}

func (m *BertyID) GetAccountPK() []byte {
	if m != nil {
		return m.AccountPK
	}
	return nil
}

func (m *BertyID) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type BertyGroup struct {
	Group       *protocoltypes.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	DisplayName string               `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (m *BertyGroup) Reset()         { *m = BertyGroup{} }
func (m *BertyGroup) String() string { return proto.CompactTextString(m) }
func (*BertyGroup) ProtoMessage()    {}
func (*BertyGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{14}
}

func (m *BertyGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BertyGroup.Unmarshal(m, b)
}

func (m *BertyGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BertyGroup.Marshal(b, m, deterministic)
}

func (m *BertyGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BertyGroup.Merge(m, src)
}

func (m *BertyGroup) XXX_Size() int {
	return xxx_messageInfo_BertyGroup.Size(m)
}

func (m *BertyGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_BertyGroup.DiscardUnknown(m)
}

var xxx_messageInfo_BertyGroup proto.InternalMessageInfo

func (m *BertyGroup) GetGroup() *protocoltypes.Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *BertyGroup) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

// AppMessage is the app layer format
type AppMessage struct {
	Type     AppMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty"`
	Payload  []byte          `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	SentDate int64           `protobuf:"varint,3,opt,name=sent_date,json=sentDate,proto3" json:"sentDate"`
	Medias   []*Media        `protobuf:"bytes,4,rep,name=medias,proto3" json:"medias,omitempty"`
}

func (m *AppMessage) Reset()         { *m = AppMessage{} }
func (m *AppMessage) String() string { return proto.CompactTextString(m) }
func (*AppMessage) ProtoMessage()    {}
func (*AppMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15}
}

func (m *AppMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage.Unmarshal(m, b)
}

func (m *AppMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage.Marshal(b, m, deterministic)
}

func (m *AppMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage.Merge(m, src)
}

func (m *AppMessage) XXX_Size() int {
	return xxx_messageInfo_AppMessage.Size(m)
}

func (m *AppMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage proto.InternalMessageInfo

func (m *AppMessage) GetType() AppMessage_Type {
	if m != nil {
		return m.Type
	}
	return AppMessage_Undefined
}

func (m *AppMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *AppMessage) GetSentDate() int64 {
	if m != nil {
		return m.SentDate
	}
	return 0
}

func (m *AppMessage) GetMedias() []*Media {
	if m != nil {
		return m.Medias
	}
	return nil
}

type AppMessage_UserMessage struct {
	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *AppMessage_UserMessage) Reset()         { *m = AppMessage_UserMessage{} }
func (m *AppMessage_UserMessage) String() string { return proto.CompactTextString(m) }
func (*AppMessage_UserMessage) ProtoMessage()    {}
func (*AppMessage_UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 0}
}

func (m *AppMessage_UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_UserMessage.Unmarshal(m, b)
}

func (m *AppMessage_UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_UserMessage.Marshal(b, m, deterministic)
}

func (m *AppMessage_UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_UserMessage.Merge(m, src)
}

func (m *AppMessage_UserMessage) XXX_Size() int {
	return xxx_messageInfo_AppMessage_UserMessage.Size(m)
}

func (m *AppMessage_UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_UserMessage proto.InternalMessageInfo

func (m *AppMessage_UserMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type AppMessage_UserReaction struct {
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Emoji  string `protobuf:"bytes,2,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (m *AppMessage_UserReaction) Reset()         { *m = AppMessage_UserReaction{} }
func (m *AppMessage_UserReaction) String() string { return proto.CompactTextString(m) }
func (*AppMessage_UserReaction) ProtoMessage()    {}
func (*AppMessage_UserReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 1}
}

func (m *AppMessage_UserReaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_UserReaction.Unmarshal(m, b)
}

func (m *AppMessage_UserReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_UserReaction.Marshal(b, m, deterministic)
}

func (m *AppMessage_UserReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_UserReaction.Merge(m, src)
}

func (m *AppMessage_UserReaction) XXX_Size() int {
	return xxx_messageInfo_AppMessage_UserReaction.Size(m)
}

func (m *AppMessage_UserReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_UserReaction.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_UserReaction proto.InternalMessageInfo

func (m *AppMessage_UserReaction) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *AppMessage_UserReaction) GetEmoji() string {
	if m != nil {
		return m.Emoji
	}
	return ""
}

type AppMessage_GroupInvitation struct {
	Link string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (m *AppMessage_GroupInvitation) Reset()         { *m = AppMessage_GroupInvitation{} }
func (m *AppMessage_GroupInvitation) String() string { return proto.CompactTextString(m) }
func (*AppMessage_GroupInvitation) ProtoMessage()    {}
func (*AppMessage_GroupInvitation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 2}
}

func (m *AppMessage_GroupInvitation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_GroupInvitation.Unmarshal(m, b)
}

func (m *AppMessage_GroupInvitation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_GroupInvitation.Marshal(b, m, deterministic)
}

func (m *AppMessage_GroupInvitation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_GroupInvitation.Merge(m, src)
}

func (m *AppMessage_GroupInvitation) XXX_Size() int {
	return xxx_messageInfo_AppMessage_GroupInvitation.Size(m)
}

func (m *AppMessage_GroupInvitation) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_GroupInvitation.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_GroupInvitation proto.InternalMessageInfo

func (m *AppMessage_GroupInvitation) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type AppMessage_SetGroupInfo struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCid   string `protobuf:"bytes,2,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty"`
}

func (m *AppMessage_SetGroupInfo) Reset()         { *m = AppMessage_SetGroupInfo{} }
func (m *AppMessage_SetGroupInfo) String() string { return proto.CompactTextString(m) }
func (*AppMessage_SetGroupInfo) ProtoMessage()    {}
func (*AppMessage_SetGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 3}
}

func (m *AppMessage_SetGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_SetGroupInfo.Unmarshal(m, b)
}

func (m *AppMessage_SetGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_SetGroupInfo.Marshal(b, m, deterministic)
}

func (m *AppMessage_SetGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_SetGroupInfo.Merge(m, src)
}

func (m *AppMessage_SetGroupInfo) XXX_Size() int {
	return xxx_messageInfo_AppMessage_SetGroupInfo.Size(m)
}

func (m *AppMessage_SetGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_SetGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_SetGroupInfo proto.InternalMessageInfo

func (m *AppMessage_SetGroupInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AppMessage_SetGroupInfo) GetAvatarCid() string {
	if m != nil {
		return m.AvatarCid
	}
	return ""
}

type AppMessage_SetUserInfo struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID   string `protobuf:"bytes,2,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty"`
}

func (m *AppMessage_SetUserInfo) Reset()         { *m = AppMessage_SetUserInfo{} }
func (m *AppMessage_SetUserInfo) String() string { return proto.CompactTextString(m) }
func (*AppMessage_SetUserInfo) ProtoMessage()    {}
func (*AppMessage_SetUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 4}
}

func (m *AppMessage_SetUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_SetUserInfo.Unmarshal(m, b)
}

func (m *AppMessage_SetUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_SetUserInfo.Marshal(b, m, deterministic)
}

func (m *AppMessage_SetUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_SetUserInfo.Merge(m, src)
}

func (m *AppMessage_SetUserInfo) XXX_Size() int {
	return xxx_messageInfo_AppMessage_SetUserInfo.Size(m)
}

func (m *AppMessage_SetUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_SetUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_SetUserInfo proto.InternalMessageInfo

func (m *AppMessage_SetUserInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AppMessage_SetUserInfo) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

type AppMessage_Acknowledge struct {
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (m *AppMessage_Acknowledge) Reset()         { *m = AppMessage_Acknowledge{} }
func (m *AppMessage_Acknowledge) String() string { return proto.CompactTextString(m) }
func (*AppMessage_Acknowledge) ProtoMessage()    {}
func (*AppMessage_Acknowledge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 5}
}

func (m *AppMessage_Acknowledge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_Acknowledge.Unmarshal(m, b)
}

func (m *AppMessage_Acknowledge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_Acknowledge.Marshal(b, m, deterministic)
}

func (m *AppMessage_Acknowledge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_Acknowledge.Merge(m, src)
}

func (m *AppMessage_Acknowledge) XXX_Size() int {
	return xxx_messageInfo_AppMessage_Acknowledge.Size(m)
}

func (m *AppMessage_Acknowledge) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_Acknowledge.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_Acknowledge proto.InternalMessageInfo

func (m *AppMessage_Acknowledge) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type AppMessage_ReplyOptions struct {
	Options []*ReplyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (m *AppMessage_ReplyOptions) Reset()         { *m = AppMessage_ReplyOptions{} }
func (m *AppMessage_ReplyOptions) String() string { return proto.CompactTextString(m) }
func (*AppMessage_ReplyOptions) ProtoMessage()    {}
func (*AppMessage_ReplyOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 6}
}

func (m *AppMessage_ReplyOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_ReplyOptions.Unmarshal(m, b)
}

func (m *AppMessage_ReplyOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_ReplyOptions.Marshal(b, m, deterministic)
}

func (m *AppMessage_ReplyOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_ReplyOptions.Merge(m, src)
}

func (m *AppMessage_ReplyOptions) XXX_Size() int {
	return xxx_messageInfo_AppMessage_ReplyOptions.Size(m)
}

func (m *AppMessage_ReplyOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_ReplyOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_ReplyOptions proto.InternalMessageInfo

func (m *AppMessage_ReplyOptions) GetOptions() []*ReplyOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type AppMessage_MonitorMetadata struct {
	Event *protocoltypes.MonitorGroup_EventMonitor `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (m *AppMessage_MonitorMetadata) Reset()         { *m = AppMessage_MonitorMetadata{} }
func (m *AppMessage_MonitorMetadata) String() string { return proto.CompactTextString(m) }
func (*AppMessage_MonitorMetadata) ProtoMessage()    {}
func (*AppMessage_MonitorMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{15, 7}
}

func (m *AppMessage_MonitorMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMessage_MonitorMetadata.Unmarshal(m, b)
}

func (m *AppMessage_MonitorMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMessage_MonitorMetadata.Marshal(b, m, deterministic)
}

func (m *AppMessage_MonitorMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMessage_MonitorMetadata.Merge(m, src)
}

func (m *AppMessage_MonitorMetadata) XXX_Size() int {
	return xxx_messageInfo_AppMessage_MonitorMetadata.Size(m)
}

func (m *AppMessage_MonitorMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMessage_MonitorMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AppMessage_MonitorMetadata proto.InternalMessageInfo

func (m *AppMessage_MonitorMetadata) GetEvent() *protocoltypes.MonitorGroup_EventMonitor {
	if m != nil {
		return m.Event
	}
	return nil
}

type ReplyOption struct {
	Display string `protobuf:"bytes,1,opt,name=display,proto3" json:"display,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *ReplyOption) Reset()         { *m = ReplyOption{} }
func (m *ReplyOption) String() string { return proto.CompactTextString(m) }
func (*ReplyOption) ProtoMessage()    {}
func (*ReplyOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{16}
}

func (m *ReplyOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyOption.Unmarshal(m, b)
}

func (m *ReplyOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyOption.Marshal(b, m, deterministic)
}

func (m *ReplyOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyOption.Merge(m, src)
}

func (m *ReplyOption) XXX_Size() int {
	return xxx_messageInfo_ReplyOption.Size(m)
}

func (m *ReplyOption) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyOption.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyOption proto.InternalMessageInfo

func (m *ReplyOption) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *ReplyOption) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type SystemInfo struct {
}

func (m *SystemInfo) Reset()         { *m = SystemInfo{} }
func (m *SystemInfo) String() string { return proto.CompactTextString(m) }
func (*SystemInfo) ProtoMessage()    {}
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{17}
}

func (m *SystemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfo.Unmarshal(m, b)
}

func (m *SystemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfo.Marshal(b, m, deterministic)
}

func (m *SystemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo.Merge(m, src)
}

func (m *SystemInfo) XXX_Size() int {
	return xxx_messageInfo_SystemInfo.Size(m)
}

func (m *SystemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo proto.InternalMessageInfo

type SystemInfo_Request struct {
}

func (m *SystemInfo_Request) Reset()         { *m = SystemInfo_Request{} }
func (m *SystemInfo_Request) String() string { return proto.CompactTextString(m) }
func (*SystemInfo_Request) ProtoMessage()    {}
func (*SystemInfo_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{17, 0}
}

func (m *SystemInfo_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfo_Request.Unmarshal(m, b)
}

func (m *SystemInfo_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfo_Request.Marshal(b, m, deterministic)
}

func (m *SystemInfo_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo_Request.Merge(m, src)
}

func (m *SystemInfo_Request) XXX_Size() int {
	return xxx_messageInfo_SystemInfo_Request.Size(m)
}

func (m *SystemInfo_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo_Request proto.InternalMessageInfo

type SystemInfo_Reply struct {
	Protocol  *protocoltypes.SystemInfo_Reply `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Messenger *SystemInfo_Messenger           `protobuf:"bytes,2,opt,name=messenger,proto3" json:"messenger,omitempty"`
}

func (m *SystemInfo_Reply) Reset()         { *m = SystemInfo_Reply{} }
func (m *SystemInfo_Reply) String() string { return proto.CompactTextString(m) }
func (*SystemInfo_Reply) ProtoMessage()    {}
func (*SystemInfo_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{17, 1}
}

func (m *SystemInfo_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfo_Reply.Unmarshal(m, b)
}

func (m *SystemInfo_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfo_Reply.Marshal(b, m, deterministic)
}

func (m *SystemInfo_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo_Reply.Merge(m, src)
}

func (m *SystemInfo_Reply) XXX_Size() int {
	return xxx_messageInfo_SystemInfo_Reply.Size(m)
}

func (m *SystemInfo_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo_Reply proto.InternalMessageInfo

func (m *SystemInfo_Reply) GetProtocol() *protocoltypes.SystemInfo_Reply {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *SystemInfo_Reply) GetMessenger() *SystemInfo_Messenger {
	if m != nil {
		return m.Messenger
	}
	return nil
}

type SystemInfo_Messenger struct {
	Process               *protocoltypes.SystemInfo_Process `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Warns                 []string                          `protobuf:"bytes,2,rep,name=warns,proto3" json:"warns,omitempty"`
	ProtocolInSameProcess bool                              `protobuf:"varint,3,opt,name=protocol_in_same_process,json=protocolInSameProcess,proto3" json:"protocol_in_same_process,omitempty"`
	DB                    *SystemInfo_DB                    `protobuf:"bytes,4,opt,name=db,proto3" json:"db,omitempty"`
}

func (m *SystemInfo_Messenger) Reset()         { *m = SystemInfo_Messenger{} }
func (m *SystemInfo_Messenger) String() string { return proto.CompactTextString(m) }
func (*SystemInfo_Messenger) ProtoMessage()    {}
func (*SystemInfo_Messenger) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{17, 2}
}

func (m *SystemInfo_Messenger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfo_Messenger.Unmarshal(m, b)
}

func (m *SystemInfo_Messenger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfo_Messenger.Marshal(b, m, deterministic)
}

func (m *SystemInfo_Messenger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo_Messenger.Merge(m, src)
}

func (m *SystemInfo_Messenger) XXX_Size() int {
	return xxx_messageInfo_SystemInfo_Messenger.Size(m)
}

func (m *SystemInfo_Messenger) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo_Messenger.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo_Messenger proto.InternalMessageInfo

func (m *SystemInfo_Messenger) GetProcess() *protocoltypes.SystemInfo_Process {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *SystemInfo_Messenger) GetWarns() []string {
	if m != nil {
		return m.Warns
	}
	return nil
}

func (m *SystemInfo_Messenger) GetProtocolInSameProcess() bool {
	if m != nil {
		return m.ProtocolInSameProcess
	}
	return false
}

func (m *SystemInfo_Messenger) GetDB() *SystemInfo_DB {
	if m != nil {
		return m.DB
	}
	return nil
}

type SystemInfo_DB struct {
	Accounts                    int64 `protobuf:"varint,1,opt,name=accounts,proto3" json:"accounts,omitempty"`
	Contacts                    int64 `protobuf:"varint,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Conversations               int64 `protobuf:"varint,3,opt,name=conversations,proto3" json:"conversations,omitempty"`
	Interactions                int64 `protobuf:"varint,4,opt,name=interactions,proto3" json:"interactions,omitempty"`
	Members                     int64 `protobuf:"varint,5,opt,name=members,proto3" json:"members,omitempty"`
	Devices                     int64 `protobuf:"varint,6,opt,name=devices,proto3" json:"devices,omitempty"`
	ServiceTokens               int64 `protobuf:"varint,7,opt,name=service_tokens,json=serviceTokens,proto3" json:"service_tokens,omitempty"`
	ConversationReplicationInfo int64 `protobuf:"varint,8,opt,name=conversation_replication_info,json=conversationReplicationInfo,proto3" json:"conversation_replication_info,omitempty"`
}

func (m *SystemInfo_DB) Reset()         { *m = SystemInfo_DB{} }
func (m *SystemInfo_DB) String() string { return proto.CompactTextString(m) }
func (*SystemInfo_DB) ProtoMessage()    {}
func (*SystemInfo_DB) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{17, 3}
}

func (m *SystemInfo_DB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfo_DB.Unmarshal(m, b)
}

func (m *SystemInfo_DB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfo_DB.Marshal(b, m, deterministic)
}

func (m *SystemInfo_DB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo_DB.Merge(m, src)
}

func (m *SystemInfo_DB) XXX_Size() int {
	return xxx_messageInfo_SystemInfo_DB.Size(m)
}

func (m *SystemInfo_DB) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo_DB.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo_DB proto.InternalMessageInfo

func (m *SystemInfo_DB) GetAccounts() int64 {
	if m != nil {
		return m.Accounts
	}
	return 0
}

func (m *SystemInfo_DB) GetContacts() int64 {
	if m != nil {
		return m.Contacts
	}
	return 0
}

func (m *SystemInfo_DB) GetConversations() int64 {
	if m != nil {
		return m.Conversations
	}
	return 0
}

func (m *SystemInfo_DB) GetInteractions() int64 {
	if m != nil {
		return m.Interactions
	}
	return 0
}

func (m *SystemInfo_DB) GetMembers() int64 {
	if m != nil {
		return m.Members
	}
	return 0
}

func (m *SystemInfo_DB) GetDevices() int64 {
	if m != nil {
		return m.Devices
	}
	return 0
}

func (m *SystemInfo_DB) GetServiceTokens() int64 {
	if m != nil {
		return m.ServiceTokens
	}
	return 0
}

func (m *SystemInfo_DB) GetConversationReplicationInfo() int64 {
	if m != nil {
		return m.ConversationReplicationInfo
	}
	return 0
}

type ConversationJoin struct {
}

func (m *ConversationJoin) Reset()         { *m = ConversationJoin{} }
func (m *ConversationJoin) String() string { return proto.CompactTextString(m) }
func (*ConversationJoin) ProtoMessage()    {}
func (*ConversationJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{18}
}

func (m *ConversationJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationJoin.Unmarshal(m, b)
}

func (m *ConversationJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationJoin.Marshal(b, m, deterministic)
}

func (m *ConversationJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationJoin.Merge(m, src)
}

func (m *ConversationJoin) XXX_Size() int {
	return xxx_messageInfo_ConversationJoin.Size(m)
}

func (m *ConversationJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationJoin proto.InternalMessageInfo

type ConversationJoin_Request struct {
	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *ConversationJoin_Request) Reset()         { *m = ConversationJoin_Request{} }
func (m *ConversationJoin_Request) String() string { return proto.CompactTextString(m) }
func (*ConversationJoin_Request) ProtoMessage()    {}
func (*ConversationJoin_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{18, 0}
}

func (m *ConversationJoin_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationJoin_Request.Unmarshal(m, b)
}

func (m *ConversationJoin_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationJoin_Request.Marshal(b, m, deterministic)
}

func (m *ConversationJoin_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationJoin_Request.Merge(m, src)
}

func (m *ConversationJoin_Request) XXX_Size() int {
	return xxx_messageInfo_ConversationJoin_Request.Size(m)
}

func (m *ConversationJoin_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationJoin_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationJoin_Request proto.InternalMessageInfo

func (m *ConversationJoin_Request) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ConversationJoin_Request) GetPassphrase() []byte {
	if m != nil {
		return m.Passphrase
	}
	return nil
}

type ConversationJoin_Reply struct {
}

func (m *ConversationJoin_Reply) Reset()         { *m = ConversationJoin_Reply{} }
func (m *ConversationJoin_Reply) String() string { return proto.CompactTextString(m) }
func (*ConversationJoin_Reply) ProtoMessage()    {}
func (*ConversationJoin_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{18, 1}
}

func (m *ConversationJoin_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationJoin_Reply.Unmarshal(m, b)
}

func (m *ConversationJoin_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationJoin_Reply.Marshal(b, m, deterministic)
}

func (m *ConversationJoin_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationJoin_Reply.Merge(m, src)
}

func (m *ConversationJoin_Reply) XXX_Size() int {
	return xxx_messageInfo_ConversationJoin_Reply.Size(m)
}

func (m *ConversationJoin_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationJoin_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationJoin_Reply proto.InternalMessageInfo

type Account struct {
	PublicKey                       string          `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	DisplayName                     string          `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID                       string          `protobuf:"bytes,7,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty" gorm:"column:avatar_cid"`
	Link                            string          `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	ServiceTokens                   []*ServiceToken `protobuf:"bytes,5,rep,name=service_tokens,json=serviceTokens,proto3" json:"service_tokens,omitempty" gorm:"foreignKey:AccountPK"`
	ReplicateNewGroupsAutomatically bool            `protobuf:"varint,6,opt,name=replicate_new_groups_automatically,json=replicateNewGroupsAutomatically,proto3" json:"replicate_new_groups_automatically,omitempty" gorm:"default:true"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{19}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}

func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}

func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}

func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}

func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Account) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Account) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

func (m *Account) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Account) GetServiceTokens() []*ServiceToken {
	if m != nil {
		return m.ServiceTokens
	}
	return nil
}

func (m *Account) GetReplicateNewGroupsAutomatically() bool {
	if m != nil {
		return m.ReplicateNewGroupsAutomatically
	}
	return false
}

type ServiceToken struct {
	AccountPK         string `protobuf:"bytes,1,opt,name=account_pk,json=accountPk,proto3" json:"account_pk,omitempty"`
	TokenID           string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" gorm:"primaryKey"`
	ServiceType       string `protobuf:"bytes,3,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty" gorm:"primaryKey"`
	AuthenticationURL string `protobuf:"bytes,4,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
	Expiration        int64  `protobuf:"varint,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (m *ServiceToken) Reset()         { *m = ServiceToken{} }
func (m *ServiceToken) String() string { return proto.CompactTextString(m) }
func (*ServiceToken) ProtoMessage()    {}
func (*ServiceToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{20}
}

func (m *ServiceToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceToken.Unmarshal(m, b)
}

func (m *ServiceToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceToken.Marshal(b, m, deterministic)
}

func (m *ServiceToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceToken.Merge(m, src)
}

func (m *ServiceToken) XXX_Size() int {
	return xxx_messageInfo_ServiceToken.Size(m)
}

func (m *ServiceToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceToken.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceToken proto.InternalMessageInfo

func (m *ServiceToken) GetAccountPK() string {
	if m != nil {
		return m.AccountPK
	}
	return ""
}

func (m *ServiceToken) GetTokenID() string {
	if m != nil {
		return m.TokenID
	}
	return ""
}

func (m *ServiceToken) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *ServiceToken) GetAuthenticationURL() string {
	if m != nil {
		return m.AuthenticationURL
	}
	return ""
}

func (m *ServiceToken) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

type Interaction struct {
	CID                   string          `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	Type                  AppMessage_Type `protobuf:"varint,2,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty" gorm:"index"`
	MemberPublicKey       string          `protobuf:"bytes,7,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty"`
	DevicePublicKey       string          `protobuf:"bytes,12,opt,name=device_public_key,json=devicePublicKey,proto3" json:"device_public_key,omitempty"`
	Member                *Member         `protobuf:"bytes,8,opt,name=member,proto3" json:"member,omitempty" gorm:"foreignKey:PublicKey;references:MemberPublicKey"`
	ConversationPublicKey string          `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"index"`
	Conversation          *Conversation   `protobuf:"bytes,4,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Payload               []byte          `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	IsMine                bool            `protobuf:"varint,6,opt,name=is_mine,json=isMine,proto3" json:"is_mine,omitempty"`
	SentDate              int64           `protobuf:"varint,9,opt,name=sent_date,json=sentDate,proto3" json:"sent_date,omitempty"`
	Acknowledged          bool            `protobuf:"varint,10,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	TargetCID             string          `protobuf:"bytes,13,opt,name=target_cid,json=targetCid,proto3" json:"target_cid,omitempty" gorm:"index;column:target_cid"`
	Medias                []*Media        `protobuf:"bytes,15,rep,name=medias,proto3" json:"medias,omitempty"`
}

func (m *Interaction) Reset()         { *m = Interaction{} }
func (m *Interaction) String() string { return proto.CompactTextString(m) }
func (*Interaction) ProtoMessage()    {}
func (*Interaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{21}
}

func (m *Interaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction.Unmarshal(m, b)
}

func (m *Interaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction.Marshal(b, m, deterministic)
}

func (m *Interaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction.Merge(m, src)
}

func (m *Interaction) XXX_Size() int {
	return xxx_messageInfo_Interaction.Size(m)
}

func (m *Interaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction proto.InternalMessageInfo

func (m *Interaction) GetCID() string {
	if m != nil {
		return m.CID
	}
	return ""
}

func (m *Interaction) GetType() AppMessage_Type {
	if m != nil {
		return m.Type
	}
	return AppMessage_Undefined
}

func (m *Interaction) GetMemberPublicKey() string {
	if m != nil {
		return m.MemberPublicKey
	}
	return ""
}

func (m *Interaction) GetDevicePublicKey() string {
	if m != nil {
		return m.DevicePublicKey
	}
	return ""
}

func (m *Interaction) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *Interaction) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

func (m *Interaction) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Interaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Interaction) GetIsMine() bool {
	if m != nil {
		return m.IsMine
	}
	return false
}

func (m *Interaction) GetSentDate() int64 {
	if m != nil {
		return m.SentDate
	}
	return 0
}

func (m *Interaction) GetAcknowledged() bool {
	if m != nil {
		return m.Acknowledged
	}
	return false
}

func (m *Interaction) GetTargetCID() string {
	if m != nil {
		return m.TargetCID
	}
	return ""
}

func (m *Interaction) GetMedias() []*Media {
	if m != nil {
		return m.Medias
	}
	return nil
}

type Media struct {
	CID         string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	MimeType    string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Filename    string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// these should not be sent on the bertyprotocol layer
	InteractionCID string      `protobuf:"bytes,100,opt,name=interaction_cid,json=interactionCid,proto3" json:"interaction_cid,omitempty" gorm:"index;column:interaction_cid"`
	State          Media_State `protobuf:"varint,103,opt,name=state,proto3,enum=berty.messenger.v1.Media_State" json:"state,omitempty"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{22}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}

func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}

func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}

func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}

func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetCID() string {
	if m != nil {
		return m.CID
	}
	return ""
}

func (m *Media) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Media) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Media) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Media) GetInteractionCID() string {
	if m != nil {
		return m.InteractionCID
	}
	return ""
}

func (m *Media) GetState() Media_State {
	if m != nil {
		return m.State
	}
	return Media_StateUnknown
}

type Contact struct {
	PublicKey             string        `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	ConversationPublicKey string        `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	Conversation          *Conversation `protobuf:"bytes,3,opt,name=conversation,proto3" json:"conversation,omitempty"`
	State                 Contact_State `protobuf:"varint,4,opt,name=state,proto3,enum=berty.messenger.v1.Contact_State" json:"state,omitempty"`
	DisplayName           string        `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID             string        `protobuf:"bytes,9,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty" gorm:"column:avatar_cid"`
	CreatedDate           int64         `protobuf:"varint,7,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	// specific to outgoing requests
	SentDate int64     `protobuf:"varint,8,opt,name=sent_date,json=sentDate,proto3" json:"sent_date,omitempty"`
	Devices  []*Device `protobuf:"bytes,6,rep,name=devices,proto3" json:"devices,omitempty" gorm:"foreignKey:MemberPublicKey"`
	InfoDate int64     `protobuf:"varint,10,opt,name=info_date,json=infoDate,proto3" json:"info_date,omitempty"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{23}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}

func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}

func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}

func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}

func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Contact) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

func (m *Contact) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Contact) GetState() Contact_State {
	if m != nil {
		return m.State
	}
	return Contact_Undefined
}

func (m *Contact) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Contact) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

func (m *Contact) GetCreatedDate() int64 {
	if m != nil {
		return m.CreatedDate
	}
	return 0
}

func (m *Contact) GetSentDate() int64 {
	if m != nil {
		return m.SentDate
	}
	return 0
}

func (m *Contact) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *Contact) GetInfoDate() int64 {
	if m != nil {
		return m.InfoDate
	}
	return 0
}

type Conversation struct {
	PublicKey   string            `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	Type        Conversation_Type `protobuf:"varint,2,opt,name=type,proto3,enum=berty.messenger.v1.Conversation_Type" json:"type,omitempty"`
	IsOpen      bool              `protobuf:"varint,3,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	DisplayName string            `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID   string            `protobuf:"bytes,17,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty" gorm:"column:avatar_cid"`
	Link        string            `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	UnreadCount int32             `protobuf:"varint,6,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// last_update is used to sort conversations, it should be updated for each "visible" event
	LastUpdate int64 `protobuf:"varint,7,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	// specific to ContactType conversations
	ContactPublicKey string `protobuf:"bytes,8,opt,name=contact_public_key,json=contactPublicKey,proto3" json:"contact_public_key,omitempty"`
	// specific to ContactType conversations
	Contact *Contact `protobuf:"bytes,9,opt,name=contact,proto3" json:"contact,omitempty"`
	// specific to MultiMemberType conversations
	Members                []*Member                      `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	AccountMemberPublicKey string                         `protobuf:"bytes,11,opt,name=account_member_public_key,json=accountMemberPublicKey,proto3" json:"account_member_public_key,omitempty"`
	LocalDevicePublicKey   string                         `protobuf:"bytes,12,opt,name=local_device_public_key,json=localDevicePublicKey,proto3" json:"local_device_public_key,omitempty"`
	CreatedDate            int64                          `protobuf:"varint,13,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	ReplyOptionsCID        string                         `protobuf:"bytes,14,opt,name=reply_options_cid,json=replyOptionsCid,proto3" json:"reply_options_cid,omitempty" gorm:"column:reply_options_cid"`
	ReplyOptions           *Interaction                   `protobuf:"bytes,15,opt,name=reply_options,json=replyOptions,proto3" json:"reply_options,omitempty"`
	ReplicationInfo        []*ConversationReplicationInfo `protobuf:"bytes,16,rep,name=replication_info,json=replicationInfo,proto3" json:"replication_info,omitempty" gorm:"foreignKey:ConversationPublicKey"`
}

func (m *Conversation) Reset()         { *m = Conversation{} }
func (m *Conversation) String() string { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()    {}
func (*Conversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{24}
}

func (m *Conversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversation.Unmarshal(m, b)
}

func (m *Conversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversation.Marshal(b, m, deterministic)
}

func (m *Conversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversation.Merge(m, src)
}

func (m *Conversation) XXX_Size() int {
	return xxx_messageInfo_Conversation.Size(m)
}

func (m *Conversation) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversation.DiscardUnknown(m)
}

var xxx_messageInfo_Conversation proto.InternalMessageInfo

func (m *Conversation) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Conversation) GetType() Conversation_Type {
	if m != nil {
		return m.Type
	}
	return Conversation_Undefined
}

func (m *Conversation) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *Conversation) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Conversation) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

func (m *Conversation) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Conversation) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *Conversation) GetLastUpdate() int64 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

func (m *Conversation) GetContactPublicKey() string {
	if m != nil {
		return m.ContactPublicKey
	}
	return ""
}

func (m *Conversation) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Conversation) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Conversation) GetAccountMemberPublicKey() string {
	if m != nil {
		return m.AccountMemberPublicKey
	}
	return ""
}

func (m *Conversation) GetLocalDevicePublicKey() string {
	if m != nil {
		return m.LocalDevicePublicKey
	}
	return ""
}

func (m *Conversation) GetCreatedDate() int64 {
	if m != nil {
		return m.CreatedDate
	}
	return 0
}

func (m *Conversation) GetReplyOptionsCID() string {
	if m != nil {
		return m.ReplyOptionsCID
	}
	return ""
}

func (m *Conversation) GetReplyOptions() *Interaction {
	if m != nil {
		return m.ReplyOptions
	}
	return nil
}

func (m *Conversation) GetReplicationInfo() []*ConversationReplicationInfo {
	if m != nil {
		return m.ReplicationInfo
	}
	return nil
}

type ConversationReplicationInfo struct {
	CID                   string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty" gorm:"primaryKey;column:cid"`
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	MemberPublicKey       string `protobuf:"bytes,3,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty"`
	AuthenticationURL     string `protobuf:"bytes,4,opt,name=authentication_url,json=authenticationUrl,proto3" json:"authentication_url,omitempty"`
	ReplicationServer     string `protobuf:"bytes,5,opt,name=replication_server,json=replicationServer,proto3" json:"replication_server,omitempty"`
}

func (m *ConversationReplicationInfo) Reset()         { *m = ConversationReplicationInfo{} }
func (m *ConversationReplicationInfo) String() string { return proto.CompactTextString(m) }
func (*ConversationReplicationInfo) ProtoMessage()    {}
func (*ConversationReplicationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{25}
}

func (m *ConversationReplicationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationReplicationInfo.Unmarshal(m, b)
}

func (m *ConversationReplicationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationReplicationInfo.Marshal(b, m, deterministic)
}

func (m *ConversationReplicationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationReplicationInfo.Merge(m, src)
}

func (m *ConversationReplicationInfo) XXX_Size() int {
	return xxx_messageInfo_ConversationReplicationInfo.Size(m)
}

func (m *ConversationReplicationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationReplicationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationReplicationInfo proto.InternalMessageInfo

func (m *ConversationReplicationInfo) GetCID() string {
	if m != nil {
		return m.CID
	}
	return ""
}

func (m *ConversationReplicationInfo) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

func (m *ConversationReplicationInfo) GetMemberPublicKey() string {
	if m != nil {
		return m.MemberPublicKey
	}
	return ""
}

func (m *ConversationReplicationInfo) GetAuthenticationURL() string {
	if m != nil {
		return m.AuthenticationURL
	}
	return ""
}

func (m *ConversationReplicationInfo) GetReplicationServer() string {
	if m != nil {
		return m.ReplicationServer
	}
	return ""
}

type Member struct {
	PublicKey             string        `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	DisplayName           string        `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID             string        `protobuf:"bytes,6,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty" gorm:"column:avatar_cid"`
	ConversationPublicKey string        `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty" gorm:"primaryKey"`
	IsMe                  bool          `protobuf:"varint,9,opt,name=is_me,json=isMe,proto3" json:"is_me,omitempty"`
	IsCreator             bool          `protobuf:"varint,8,opt,name=is_creator,json=isCreator,proto3" json:"is_creator,omitempty"`
	InfoDate              int64         `protobuf:"varint,7,opt,name=info_date,json=infoDate,proto3" json:"info_date,omitempty"`
	Conversation          *Conversation `protobuf:"bytes,4,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Devices               []*Device     `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty" gorm:"foreignKey:MemberPublicKey;references:PublicKey"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{26}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}

func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}

func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}

func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}

func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Member) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Member) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

func (m *Member) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

func (m *Member) GetIsMe() bool {
	if m != nil {
		return m.IsMe
	}
	return false
}

func (m *Member) GetIsCreator() bool {
	if m != nil {
		return m.IsCreator
	}
	return false
}

func (m *Member) GetInfoDate() int64 {
	if m != nil {
		return m.InfoDate
	}
	return 0
}

func (m *Member) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Member) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Device struct {
	PublicKey       string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" gorm:"primaryKey"`
	MemberPublicKey string `protobuf:"bytes,2,opt,name=member_public_key,json=memberPublicKey,proto3" json:"member_public_key,omitempty" gorm:"index"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{27}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}

func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}

func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}

func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}

func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Device) GetMemberPublicKey() string {
	if m != nil {
		return m.MemberPublicKey
	}
	return ""
}

type ContactMetadata struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (m *ContactMetadata) Reset()         { *m = ContactMetadata{} }
func (m *ContactMetadata) String() string { return proto.CompactTextString(m) }
func (*ContactMetadata) ProtoMessage()    {}
func (*ContactMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{28}
}

func (m *ContactMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactMetadata.Unmarshal(m, b)
}

func (m *ContactMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactMetadata.Marshal(b, m, deterministic)
}

func (m *ContactMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactMetadata.Merge(m, src)
}

func (m *ContactMetadata) XXX_Size() int {
	return xxx_messageInfo_ContactMetadata.Size(m)
}

func (m *ContactMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ContactMetadata proto.InternalMessageInfo

func (m *ContactMetadata) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type StreamEvent struct {
	Type    StreamEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.StreamEvent_Type" json:"type,omitempty"`
	Payload []byte           `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// specific to "*Updated" events
	IsNew bool `protobuf:"varint,3,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (m *StreamEvent) Reset()         { *m = StreamEvent{} }
func (m *StreamEvent) String() string { return proto.CompactTextString(m) }
func (*StreamEvent) ProtoMessage()    {}
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29}
}

func (m *StreamEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent.Unmarshal(m, b)
}

func (m *StreamEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent.Marshal(b, m, deterministic)
}

func (m *StreamEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent.Merge(m, src)
}

func (m *StreamEvent) XXX_Size() int {
	return xxx_messageInfo_StreamEvent.Size(m)
}

func (m *StreamEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent proto.InternalMessageInfo

func (m *StreamEvent) GetType() StreamEvent_Type {
	if m != nil {
		return m.Type
	}
	return StreamEvent_Undefined
}

func (m *StreamEvent) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *StreamEvent) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

type StreamEvent_ConversationUpdated struct {
	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (m *StreamEvent_ConversationUpdated) Reset()         { *m = StreamEvent_ConversationUpdated{} }
func (m *StreamEvent_ConversationUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_ConversationUpdated) ProtoMessage()    {}
func (*StreamEvent_ConversationUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 0}
}

func (m *StreamEvent_ConversationUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_ConversationUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_ConversationUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_ConversationUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_ConversationUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_ConversationUpdated.Merge(m, src)
}

func (m *StreamEvent_ConversationUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_ConversationUpdated.Size(m)
}

func (m *StreamEvent_ConversationUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_ConversationUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_ConversationUpdated proto.InternalMessageInfo

func (m *StreamEvent_ConversationUpdated) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type StreamEvent_ConversationDeleted struct {
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (m *StreamEvent_ConversationDeleted) Reset()         { *m = StreamEvent_ConversationDeleted{} }
func (m *StreamEvent_ConversationDeleted) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_ConversationDeleted) ProtoMessage()    {}
func (*StreamEvent_ConversationDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 1}
}

func (m *StreamEvent_ConversationDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_ConversationDeleted.Unmarshal(m, b)
}

func (m *StreamEvent_ConversationDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_ConversationDeleted.Marshal(b, m, deterministic)
}

func (m *StreamEvent_ConversationDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_ConversationDeleted.Merge(m, src)
}

func (m *StreamEvent_ConversationDeleted) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_ConversationDeleted.Size(m)
}

func (m *StreamEvent_ConversationDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_ConversationDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_ConversationDeleted proto.InternalMessageInfo

func (m *StreamEvent_ConversationDeleted) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type StreamEvent_InteractionUpdated struct {
	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (m *StreamEvent_InteractionUpdated) Reset()         { *m = StreamEvent_InteractionUpdated{} }
func (m *StreamEvent_InteractionUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_InteractionUpdated) ProtoMessage()    {}
func (*StreamEvent_InteractionUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 2}
}

func (m *StreamEvent_InteractionUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_InteractionUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_InteractionUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_InteractionUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_InteractionUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_InteractionUpdated.Merge(m, src)
}

func (m *StreamEvent_InteractionUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_InteractionUpdated.Size(m)
}

func (m *StreamEvent_InteractionUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_InteractionUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_InteractionUpdated proto.InternalMessageInfo

func (m *StreamEvent_InteractionUpdated) GetInteraction() *Interaction {
	if m != nil {
		return m.Interaction
	}
	return nil
}

type StreamEvent_InteractionDeleted struct {
	CID string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (m *StreamEvent_InteractionDeleted) Reset()         { *m = StreamEvent_InteractionDeleted{} }
func (m *StreamEvent_InteractionDeleted) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_InteractionDeleted) ProtoMessage()    {}
func (*StreamEvent_InteractionDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 3}
}

func (m *StreamEvent_InteractionDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_InteractionDeleted.Unmarshal(m, b)
}

func (m *StreamEvent_InteractionDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_InteractionDeleted.Marshal(b, m, deterministic)
}

func (m *StreamEvent_InteractionDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_InteractionDeleted.Merge(m, src)
}

func (m *StreamEvent_InteractionDeleted) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_InteractionDeleted.Size(m)
}

func (m *StreamEvent_InteractionDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_InteractionDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_InteractionDeleted proto.InternalMessageInfo

func (m *StreamEvent_InteractionDeleted) GetCID() string {
	if m != nil {
		return m.CID
	}
	return ""
}

type StreamEvent_ContactUpdated struct {
	Contact *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (m *StreamEvent_ContactUpdated) Reset()         { *m = StreamEvent_ContactUpdated{} }
func (m *StreamEvent_ContactUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_ContactUpdated) ProtoMessage()    {}
func (*StreamEvent_ContactUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 4}
}

func (m *StreamEvent_ContactUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_ContactUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_ContactUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_ContactUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_ContactUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_ContactUpdated.Merge(m, src)
}

func (m *StreamEvent_ContactUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_ContactUpdated.Size(m)
}

func (m *StreamEvent_ContactUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_ContactUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_ContactUpdated proto.InternalMessageInfo

func (m *StreamEvent_ContactUpdated) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type StreamEvent_AccountUpdated struct {
	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *StreamEvent_AccountUpdated) Reset()         { *m = StreamEvent_AccountUpdated{} }
func (m *StreamEvent_AccountUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_AccountUpdated) ProtoMessage()    {}
func (*StreamEvent_AccountUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 5}
}

func (m *StreamEvent_AccountUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_AccountUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_AccountUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_AccountUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_AccountUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_AccountUpdated.Merge(m, src)
}

func (m *StreamEvent_AccountUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_AccountUpdated.Size(m)
}

func (m *StreamEvent_AccountUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_AccountUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_AccountUpdated proto.InternalMessageInfo

func (m *StreamEvent_AccountUpdated) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type StreamEvent_MemberUpdated struct {
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (m *StreamEvent_MemberUpdated) Reset()         { *m = StreamEvent_MemberUpdated{} }
func (m *StreamEvent_MemberUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_MemberUpdated) ProtoMessage()    {}
func (*StreamEvent_MemberUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 6}
}

func (m *StreamEvent_MemberUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_MemberUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_MemberUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_MemberUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_MemberUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_MemberUpdated.Merge(m, src)
}

func (m *StreamEvent_MemberUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_MemberUpdated.Size(m)
}

func (m *StreamEvent_MemberUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_MemberUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_MemberUpdated proto.InternalMessageInfo

func (m *StreamEvent_MemberUpdated) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

type StreamEvent_DeviceUpdated struct {
	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (m *StreamEvent_DeviceUpdated) Reset()         { *m = StreamEvent_DeviceUpdated{} }
func (m *StreamEvent_DeviceUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_DeviceUpdated) ProtoMessage()    {}
func (*StreamEvent_DeviceUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 7}
}

func (m *StreamEvent_DeviceUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_DeviceUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_DeviceUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_DeviceUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_DeviceUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_DeviceUpdated.Merge(m, src)
}

func (m *StreamEvent_DeviceUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_DeviceUpdated.Size(m)
}

func (m *StreamEvent_DeviceUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_DeviceUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_DeviceUpdated proto.InternalMessageInfo

func (m *StreamEvent_DeviceUpdated) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type StreamEvent_ListEnded struct {
}

func (m *StreamEvent_ListEnded) Reset()         { *m = StreamEvent_ListEnded{} }
func (m *StreamEvent_ListEnded) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_ListEnded) ProtoMessage()    {}
func (*StreamEvent_ListEnded) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 8}
}

func (m *StreamEvent_ListEnded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_ListEnded.Unmarshal(m, b)
}

func (m *StreamEvent_ListEnded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_ListEnded.Marshal(b, m, deterministic)
}

func (m *StreamEvent_ListEnded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_ListEnded.Merge(m, src)
}

func (m *StreamEvent_ListEnded) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_ListEnded.Size(m)
}

func (m *StreamEvent_ListEnded) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_ListEnded.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_ListEnded proto.InternalMessageInfo

type StreamEvent_MediaUpdated struct {
	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (m *StreamEvent_MediaUpdated) Reset()         { *m = StreamEvent_MediaUpdated{} }
func (m *StreamEvent_MediaUpdated) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_MediaUpdated) ProtoMessage()    {}
func (*StreamEvent_MediaUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 9}
}

func (m *StreamEvent_MediaUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_MediaUpdated.Unmarshal(m, b)
}

func (m *StreamEvent_MediaUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_MediaUpdated.Marshal(b, m, deterministic)
}

func (m *StreamEvent_MediaUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_MediaUpdated.Merge(m, src)
}

func (m *StreamEvent_MediaUpdated) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_MediaUpdated.Size(m)
}

func (m *StreamEvent_MediaUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_MediaUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_MediaUpdated proto.InternalMessageInfo

func (m *StreamEvent_MediaUpdated) GetMedia() *Media {
	if m != nil {
		return m.Media
	}
	return nil
}

type StreamEvent_Notified struct {
	Type    StreamEvent_Notified_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.StreamEvent_Notified_Type" json:"type,omitempty"`
	Title   string                    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Body    string                    `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Payload []byte                    `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *StreamEvent_Notified) Reset()         { *m = StreamEvent_Notified{} }
func (m *StreamEvent_Notified) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_Notified) ProtoMessage()    {}
func (*StreamEvent_Notified) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10}
}

func (m *StreamEvent_Notified) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_Notified.Unmarshal(m, b)
}

func (m *StreamEvent_Notified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_Notified.Marshal(b, m, deterministic)
}

func (m *StreamEvent_Notified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_Notified.Merge(m, src)
}

func (m *StreamEvent_Notified) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_Notified.Size(m)
}

func (m *StreamEvent_Notified) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_Notified.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_Notified proto.InternalMessageInfo

func (m *StreamEvent_Notified) GetType() StreamEvent_Notified_Type {
	if m != nil {
		return m.Type
	}
	return StreamEvent_Notified_Unknown
}

func (m *StreamEvent_Notified) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StreamEvent_Notified) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *StreamEvent_Notified) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type StreamEvent_Notified_Basic struct {
}

func (m *StreamEvent_Notified_Basic) Reset()         { *m = StreamEvent_Notified_Basic{} }
func (m *StreamEvent_Notified_Basic) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_Notified_Basic) ProtoMessage()    {}
func (*StreamEvent_Notified_Basic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10, 0}
}

func (m *StreamEvent_Notified_Basic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_Notified_Basic.Unmarshal(m, b)
}

func (m *StreamEvent_Notified_Basic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_Notified_Basic.Marshal(b, m, deterministic)
}

func (m *StreamEvent_Notified_Basic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_Notified_Basic.Merge(m, src)
}

func (m *StreamEvent_Notified_Basic) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_Notified_Basic.Size(m)
}

func (m *StreamEvent_Notified_Basic) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_Notified_Basic.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_Notified_Basic proto.InternalMessageInfo

type StreamEvent_Notified_MessageReceived struct {
	Interaction  *Interaction  `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Conversation *Conversation `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Contact      *Contact      `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (m *StreamEvent_Notified_MessageReceived) Reset()         { *m = StreamEvent_Notified_MessageReceived{} }
func (m *StreamEvent_Notified_MessageReceived) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_Notified_MessageReceived) ProtoMessage()    {}
func (*StreamEvent_Notified_MessageReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10, 1}
}

func (m *StreamEvent_Notified_MessageReceived) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_Notified_MessageReceived.Unmarshal(m, b)
}

func (m *StreamEvent_Notified_MessageReceived) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_Notified_MessageReceived.Marshal(b, m, deterministic)
}

func (m *StreamEvent_Notified_MessageReceived) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_Notified_MessageReceived.Merge(m, src)
}

func (m *StreamEvent_Notified_MessageReceived) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_Notified_MessageReceived.Size(m)
}

func (m *StreamEvent_Notified_MessageReceived) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_Notified_MessageReceived.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_Notified_MessageReceived proto.InternalMessageInfo

func (m *StreamEvent_Notified_MessageReceived) GetInteraction() *Interaction {
	if m != nil {
		return m.Interaction
	}
	return nil
}

func (m *StreamEvent_Notified_MessageReceived) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *StreamEvent_Notified_MessageReceived) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type StreamEvent_Notified_ContactRequestSent struct {
	Contact *Contact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (m *StreamEvent_Notified_ContactRequestSent) Reset() {
	*m = StreamEvent_Notified_ContactRequestSent{}
}
func (m *StreamEvent_Notified_ContactRequestSent) String() string { return proto.CompactTextString(m) }
func (*StreamEvent_Notified_ContactRequestSent) ProtoMessage()    {}
func (*StreamEvent_Notified_ContactRequestSent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10, 2}
}

func (m *StreamEvent_Notified_ContactRequestSent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestSent.Unmarshal(m, b)
}

func (m *StreamEvent_Notified_ContactRequestSent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestSent.Marshal(b, m, deterministic)
}

func (m *StreamEvent_Notified_ContactRequestSent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_Notified_ContactRequestSent.Merge(m, src)
}

func (m *StreamEvent_Notified_ContactRequestSent) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestSent.Size(m)
}

func (m *StreamEvent_Notified_ContactRequestSent) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_Notified_ContactRequestSent.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_Notified_ContactRequestSent proto.InternalMessageInfo

func (m *StreamEvent_Notified_ContactRequestSent) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type StreamEvent_Notified_ContactRequestReceived struct {
	Contact *Contact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (m *StreamEvent_Notified_ContactRequestReceived) Reset() {
	*m = StreamEvent_Notified_ContactRequestReceived{}
}

func (m *StreamEvent_Notified_ContactRequestReceived) String() string {
	return proto.CompactTextString(m)
}
func (*StreamEvent_Notified_ContactRequestReceived) ProtoMessage() {}
func (*StreamEvent_Notified_ContactRequestReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{29, 10, 3}
}

func (m *StreamEvent_Notified_ContactRequestReceived) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived.Unmarshal(m, b)
}

func (m *StreamEvent_Notified_ContactRequestReceived) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived.Marshal(b, m, deterministic)
}

func (m *StreamEvent_Notified_ContactRequestReceived) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived.Merge(m, src)
}

func (m *StreamEvent_Notified_ContactRequestReceived) XXX_Size() int {
	return xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived.Size(m)
}

func (m *StreamEvent_Notified_ContactRequestReceived) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent_Notified_ContactRequestReceived proto.InternalMessageInfo

func (m *StreamEvent_Notified_ContactRequestReceived) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ConversationStream struct {
}

func (m *ConversationStream) Reset()         { *m = ConversationStream{} }
func (m *ConversationStream) String() string { return proto.CompactTextString(m) }
func (*ConversationStream) ProtoMessage()    {}
func (*ConversationStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{30}
}

func (m *ConversationStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationStream.Unmarshal(m, b)
}

func (m *ConversationStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationStream.Marshal(b, m, deterministic)
}

func (m *ConversationStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationStream.Merge(m, src)
}

func (m *ConversationStream) XXX_Size() int {
	return xxx_messageInfo_ConversationStream.Size(m)
}

func (m *ConversationStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationStream.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationStream proto.InternalMessageInfo

type ConversationStream_Request struct {
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (m *ConversationStream_Request) Reset()         { *m = ConversationStream_Request{} }
func (m *ConversationStream_Request) String() string { return proto.CompactTextString(m) }
func (*ConversationStream_Request) ProtoMessage()    {}
func (*ConversationStream_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{30, 0}
}

func (m *ConversationStream_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationStream_Request.Unmarshal(m, b)
}

func (m *ConversationStream_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationStream_Request.Marshal(b, m, deterministic)
}

func (m *ConversationStream_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationStream_Request.Merge(m, src)
}

func (m *ConversationStream_Request) XXX_Size() int {
	return xxx_messageInfo_ConversationStream_Request.Size(m)
}

func (m *ConversationStream_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationStream_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationStream_Request proto.InternalMessageInfo

func (m *ConversationStream_Request) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ConversationStream_Request) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ConversationStream_Reply struct {
	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (m *ConversationStream_Reply) Reset()         { *m = ConversationStream_Reply{} }
func (m *ConversationStream_Reply) String() string { return proto.CompactTextString(m) }
func (*ConversationStream_Reply) ProtoMessage()    {}
func (*ConversationStream_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{30, 1}
}

func (m *ConversationStream_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationStream_Reply.Unmarshal(m, b)
}

func (m *ConversationStream_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationStream_Reply.Marshal(b, m, deterministic)
}

func (m *ConversationStream_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationStream_Reply.Merge(m, src)
}

func (m *ConversationStream_Reply) XXX_Size() int {
	return xxx_messageInfo_ConversationStream_Reply.Size(m)
}

func (m *ConversationStream_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationStream_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationStream_Reply proto.InternalMessageInfo

func (m *ConversationStream_Reply) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationCreate struct {
}

func (m *ConversationCreate) Reset()         { *m = ConversationCreate{} }
func (m *ConversationCreate) String() string { return proto.CompactTextString(m) }
func (*ConversationCreate) ProtoMessage()    {}
func (*ConversationCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{31}
}

func (m *ConversationCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationCreate.Unmarshal(m, b)
}

func (m *ConversationCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationCreate.Marshal(b, m, deterministic)
}

func (m *ConversationCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationCreate.Merge(m, src)
}

func (m *ConversationCreate) XXX_Size() int {
	return xxx_messageInfo_ConversationCreate.Size(m)
}

func (m *ConversationCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationCreate.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationCreate proto.InternalMessageInfo

type ConversationCreate_Request struct {
	DisplayName      string   `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ContactsToInvite []string `protobuf:"bytes,2,rep,name=contacts_to_invite,json=contactsToInvite,proto3" json:"contacts_to_invite,omitempty"`
}

func (m *ConversationCreate_Request) Reset()         { *m = ConversationCreate_Request{} }
func (m *ConversationCreate_Request) String() string { return proto.CompactTextString(m) }
func (*ConversationCreate_Request) ProtoMessage()    {}
func (*ConversationCreate_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{31, 0}
}

func (m *ConversationCreate_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationCreate_Request.Unmarshal(m, b)
}

func (m *ConversationCreate_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationCreate_Request.Marshal(b, m, deterministic)
}

func (m *ConversationCreate_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationCreate_Request.Merge(m, src)
}

func (m *ConversationCreate_Request) XXX_Size() int {
	return xxx_messageInfo_ConversationCreate_Request.Size(m)
}

func (m *ConversationCreate_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationCreate_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationCreate_Request proto.InternalMessageInfo

func (m *ConversationCreate_Request) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ConversationCreate_Request) GetContactsToInvite() []string {
	if m != nil {
		return m.ContactsToInvite
	}
	return nil
}

type ConversationCreate_Reply struct {
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (m *ConversationCreate_Reply) Reset()         { *m = ConversationCreate_Reply{} }
func (m *ConversationCreate_Reply) String() string { return proto.CompactTextString(m) }
func (*ConversationCreate_Reply) ProtoMessage()    {}
func (*ConversationCreate_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{31, 1}
}

func (m *ConversationCreate_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversationCreate_Reply.Unmarshal(m, b)
}

func (m *ConversationCreate_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversationCreate_Reply.Marshal(b, m, deterministic)
}

func (m *ConversationCreate_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversationCreate_Reply.Merge(m, src)
}

func (m *ConversationCreate_Reply) XXX_Size() int {
	return xxx_messageInfo_ConversationCreate_Reply.Size(m)
}

func (m *ConversationCreate_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversationCreate_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ConversationCreate_Reply proto.InternalMessageInfo

func (m *ConversationCreate_Reply) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type AccountGet struct {
}

func (m *AccountGet) Reset()         { *m = AccountGet{} }
func (m *AccountGet) String() string { return proto.CompactTextString(m) }
func (*AccountGet) ProtoMessage()    {}
func (*AccountGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{32}
}

func (m *AccountGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGet.Unmarshal(m, b)
}

func (m *AccountGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGet.Marshal(b, m, deterministic)
}

func (m *AccountGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGet.Merge(m, src)
}

func (m *AccountGet) XXX_Size() int {
	return xxx_messageInfo_AccountGet.Size(m)
}

func (m *AccountGet) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGet.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGet proto.InternalMessageInfo

type AccountGet_Request struct {
}

func (m *AccountGet_Request) Reset()         { *m = AccountGet_Request{} }
func (m *AccountGet_Request) String() string { return proto.CompactTextString(m) }
func (*AccountGet_Request) ProtoMessage()    {}
func (*AccountGet_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{32, 0}
}

func (m *AccountGet_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGet_Request.Unmarshal(m, b)
}

func (m *AccountGet_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGet_Request.Marshal(b, m, deterministic)
}

func (m *AccountGet_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGet_Request.Merge(m, src)
}

func (m *AccountGet_Request) XXX_Size() int {
	return xxx_messageInfo_AccountGet_Request.Size(m)
}

func (m *AccountGet_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGet_Request.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGet_Request proto.InternalMessageInfo

type AccountGet_Reply struct {
	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *AccountGet_Reply) Reset()         { *m = AccountGet_Reply{} }
func (m *AccountGet_Reply) String() string { return proto.CompactTextString(m) }
func (*AccountGet_Reply) ProtoMessage()    {}
func (*AccountGet_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{32, 1}
}

func (m *AccountGet_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGet_Reply.Unmarshal(m, b)
}

func (m *AccountGet_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGet_Reply.Marshal(b, m, deterministic)
}

func (m *AccountGet_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGet_Reply.Merge(m, src)
}

func (m *AccountGet_Reply) XXX_Size() int {
	return xxx_messageInfo_AccountGet_Reply.Size(m)
}

func (m *AccountGet_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGet_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGet_Reply proto.InternalMessageInfo

func (m *AccountGet_Reply) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type EventStream struct {
}

func (m *EventStream) Reset()         { *m = EventStream{} }
func (m *EventStream) String() string { return proto.CompactTextString(m) }
func (*EventStream) ProtoMessage()    {}
func (*EventStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{33}
}

func (m *EventStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventStream.Unmarshal(m, b)
}

func (m *EventStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventStream.Marshal(b, m, deterministic)
}

func (m *EventStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStream.Merge(m, src)
}

func (m *EventStream) XXX_Size() int {
	return xxx_messageInfo_EventStream.Size(m)
}

func (m *EventStream) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStream.DiscardUnknown(m)
}

var xxx_messageInfo_EventStream proto.InternalMessageInfo

type EventStream_Request struct {
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (m *EventStream_Request) Reset()         { *m = EventStream_Request{} }
func (m *EventStream_Request) String() string { return proto.CompactTextString(m) }
func (*EventStream_Request) ProtoMessage()    {}
func (*EventStream_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{33, 0}
}

func (m *EventStream_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventStream_Request.Unmarshal(m, b)
}

func (m *EventStream_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventStream_Request.Marshal(b, m, deterministic)
}

func (m *EventStream_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStream_Request.Merge(m, src)
}

func (m *EventStream_Request) XXX_Size() int {
	return xxx_messageInfo_EventStream_Request.Size(m)
}

func (m *EventStream_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStream_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EventStream_Request proto.InternalMessageInfo

func (m *EventStream_Request) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *EventStream_Request) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type EventStream_Reply struct {
	Event *StreamEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (m *EventStream_Reply) Reset()         { *m = EventStream_Reply{} }
func (m *EventStream_Reply) String() string { return proto.CompactTextString(m) }
func (*EventStream_Reply) ProtoMessage()    {}
func (*EventStream_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{33, 1}
}

func (m *EventStream_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventStream_Reply.Unmarshal(m, b)
}

func (m *EventStream_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventStream_Reply.Marshal(b, m, deterministic)
}

func (m *EventStream_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStream_Reply.Merge(m, src)
}

func (m *EventStream_Reply) XXX_Size() int {
	return xxx_messageInfo_EventStream_Reply.Size(m)
}

func (m *EventStream_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStream_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EventStream_Reply proto.InternalMessageInfo

func (m *EventStream_Reply) GetEvent() *StreamEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type AccountUpdate struct {
}

func (m *AccountUpdate) Reset()         { *m = AccountUpdate{} }
func (m *AccountUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate) ProtoMessage()    {}
func (*AccountUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{34}
}

func (m *AccountUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountUpdate.Unmarshal(m, b)
}

func (m *AccountUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountUpdate.Marshal(b, m, deterministic)
}

func (m *AccountUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdate.Merge(m, src)
}

func (m *AccountUpdate) XXX_Size() int {
	return xxx_messageInfo_AccountUpdate.Size(m)
}

func (m *AccountUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdate proto.InternalMessageInfo

type AccountUpdate_Request struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarCID   string `protobuf:"bytes,2,opt,name=avatar_cid,json=avatarCid,proto3" json:"avatar_cid,omitempty" gorm:"column:avatar_cid"`
}

func (m *AccountUpdate_Request) Reset()         { *m = AccountUpdate_Request{} }
func (m *AccountUpdate_Request) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_Request) ProtoMessage()    {}
func (*AccountUpdate_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{34, 0}
}

func (m *AccountUpdate_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountUpdate_Request.Unmarshal(m, b)
}

func (m *AccountUpdate_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountUpdate_Request.Marshal(b, m, deterministic)
}

func (m *AccountUpdate_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdate_Request.Merge(m, src)
}

func (m *AccountUpdate_Request) XXX_Size() int {
	return xxx_messageInfo_AccountUpdate_Request.Size(m)
}

func (m *AccountUpdate_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdate_Request.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdate_Request proto.InternalMessageInfo

func (m *AccountUpdate_Request) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AccountUpdate_Request) GetAvatarCID() string {
	if m != nil {
		return m.AvatarCID
	}
	return ""
}

type AccountUpdate_Reply struct {
}

func (m *AccountUpdate_Reply) Reset()         { *m = AccountUpdate_Reply{} }
func (m *AccountUpdate_Reply) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_Reply) ProtoMessage()    {}
func (*AccountUpdate_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{34, 1}
}

func (m *AccountUpdate_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountUpdate_Reply.Unmarshal(m, b)
}

func (m *AccountUpdate_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountUpdate_Reply.Marshal(b, m, deterministic)
}

func (m *AccountUpdate_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdate_Reply.Merge(m, src)
}

func (m *AccountUpdate_Reply) XXX_Size() int {
	return xxx_messageInfo_AccountUpdate_Reply.Size(m)
}

func (m *AccountUpdate_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdate_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdate_Reply proto.InternalMessageInfo

type ContactRequest struct {
}

func (m *ContactRequest) Reset()         { *m = ContactRequest{} }
func (m *ContactRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequest) ProtoMessage()    {}
func (*ContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{35}
}

func (m *ContactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactRequest.Unmarshal(m, b)
}

func (m *ContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactRequest.Marshal(b, m, deterministic)
}

func (m *ContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequest.Merge(m, src)
}

func (m *ContactRequest) XXX_Size() int {
	return xxx_messageInfo_ContactRequest.Size(m)
}

func (m *ContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequest proto.InternalMessageInfo

type ContactRequest_Request struct {
	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// optional passphase to decrypt the link
	Passphrase []byte `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (m *ContactRequest_Request) Reset()         { *m = ContactRequest_Request{} }
func (m *ContactRequest_Request) String() string { return proto.CompactTextString(m) }
func (*ContactRequest_Request) ProtoMessage()    {}
func (*ContactRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{35, 0}
}

func (m *ContactRequest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactRequest_Request.Unmarshal(m, b)
}

func (m *ContactRequest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactRequest_Request.Marshal(b, m, deterministic)
}

func (m *ContactRequest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequest_Request.Merge(m, src)
}

func (m *ContactRequest_Request) XXX_Size() int {
	return xxx_messageInfo_ContactRequest_Request.Size(m)
}

func (m *ContactRequest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequest_Request proto.InternalMessageInfo

func (m *ContactRequest_Request) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ContactRequest_Request) GetPassphrase() []byte {
	if m != nil {
		return m.Passphrase
	}
	return nil
}

type ContactRequest_Reply struct {
}

func (m *ContactRequest_Reply) Reset()         { *m = ContactRequest_Reply{} }
func (m *ContactRequest_Reply) String() string { return proto.CompactTextString(m) }
func (*ContactRequest_Reply) ProtoMessage()    {}
func (*ContactRequest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{35, 1}
}

func (m *ContactRequest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactRequest_Reply.Unmarshal(m, b)
}

func (m *ContactRequest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactRequest_Reply.Marshal(b, m, deterministic)
}

func (m *ContactRequest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactRequest_Reply.Merge(m, src)
}

func (m *ContactRequest_Reply) XXX_Size() int {
	return xxx_messageInfo_ContactRequest_Reply.Size(m)
}

func (m *ContactRequest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactRequest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactRequest_Reply proto.InternalMessageInfo

type ContactAccept struct {
}

func (m *ContactAccept) Reset()         { *m = ContactAccept{} }
func (m *ContactAccept) String() string { return proto.CompactTextString(m) }
func (*ContactAccept) ProtoMessage()    {}
func (*ContactAccept) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{36}
}

func (m *ContactAccept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactAccept.Unmarshal(m, b)
}

func (m *ContactAccept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactAccept.Marshal(b, m, deterministic)
}

func (m *ContactAccept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactAccept.Merge(m, src)
}

func (m *ContactAccept) XXX_Size() int {
	return xxx_messageInfo_ContactAccept.Size(m)
}

func (m *ContactAccept) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactAccept.DiscardUnknown(m)
}

var xxx_messageInfo_ContactAccept proto.InternalMessageInfo

type ContactAccept_Request struct {
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (m *ContactAccept_Request) Reset()         { *m = ContactAccept_Request{} }
func (m *ContactAccept_Request) String() string { return proto.CompactTextString(m) }
func (*ContactAccept_Request) ProtoMessage()    {}
func (*ContactAccept_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{36, 0}
}

func (m *ContactAccept_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactAccept_Request.Unmarshal(m, b)
}

func (m *ContactAccept_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactAccept_Request.Marshal(b, m, deterministic)
}

func (m *ContactAccept_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactAccept_Request.Merge(m, src)
}

func (m *ContactAccept_Request) XXX_Size() int {
	return xxx_messageInfo_ContactAccept_Request.Size(m)
}

func (m *ContactAccept_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactAccept_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ContactAccept_Request proto.InternalMessageInfo

func (m *ContactAccept_Request) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type ContactAccept_Reply struct {
}

func (m *ContactAccept_Reply) Reset()         { *m = ContactAccept_Reply{} }
func (m *ContactAccept_Reply) String() string { return proto.CompactTextString(m) }
func (*ContactAccept_Reply) ProtoMessage()    {}
func (*ContactAccept_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{36, 1}
}

func (m *ContactAccept_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactAccept_Reply.Unmarshal(m, b)
}

func (m *ContactAccept_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactAccept_Reply.Marshal(b, m, deterministic)
}

func (m *ContactAccept_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactAccept_Reply.Merge(m, src)
}

func (m *ContactAccept_Reply) XXX_Size() int {
	return xxx_messageInfo_ContactAccept_Reply.Size(m)
}

func (m *ContactAccept_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactAccept_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ContactAccept_Reply proto.InternalMessageInfo

type Interact struct {
}

func (m *Interact) Reset()         { *m = Interact{} }
func (m *Interact) String() string { return proto.CompactTextString(m) }
func (*Interact) ProtoMessage()    {}
func (*Interact) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{37}
}

func (m *Interact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interact.Unmarshal(m, b)
}

func (m *Interact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interact.Marshal(b, m, deterministic)
}

func (m *Interact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interact.Merge(m, src)
}

func (m *Interact) XXX_Size() int {
	return xxx_messageInfo_Interact.Size(m)
}

func (m *Interact) XXX_DiscardUnknown() {
	xxx_messageInfo_Interact.DiscardUnknown(m)
}

var xxx_messageInfo_Interact proto.InternalMessageInfo

type Interact_Request struct {
	Type                  AppMessage_Type `protobuf:"varint,1,opt,name=type,proto3,enum=berty.messenger.v1.AppMessage_Type" json:"type,omitempty"`
	Payload               []byte          `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	ConversationPublicKey string          `protobuf:"bytes,3,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
	MediaCids             []string        `protobuf:"bytes,4,rep,name=media_cids,json=mediaCids,proto3" json:"media_cids,omitempty"`
}

func (m *Interact_Request) Reset()         { *m = Interact_Request{} }
func (m *Interact_Request) String() string { return proto.CompactTextString(m) }
func (*Interact_Request) ProtoMessage()    {}
func (*Interact_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{37, 0}
}

func (m *Interact_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interact_Request.Unmarshal(m, b)
}

func (m *Interact_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interact_Request.Marshal(b, m, deterministic)
}

func (m *Interact_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interact_Request.Merge(m, src)
}

func (m *Interact_Request) XXX_Size() int {
	return xxx_messageInfo_Interact_Request.Size(m)
}

func (m *Interact_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Interact_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Interact_Request proto.InternalMessageInfo

func (m *Interact_Request) GetType() AppMessage_Type {
	if m != nil {
		return m.Type
	}
	return AppMessage_Undefined
}

func (m *Interact_Request) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Interact_Request) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

func (m *Interact_Request) GetMediaCids() []string {
	if m != nil {
		return m.MediaCids
	}
	return nil
}

type Interact_Reply struct {
}

func (m *Interact_Reply) Reset()         { *m = Interact_Reply{} }
func (m *Interact_Reply) String() string { return proto.CompactTextString(m) }
func (*Interact_Reply) ProtoMessage()    {}
func (*Interact_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{37, 1}
}

func (m *Interact_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interact_Reply.Unmarshal(m, b)
}

func (m *Interact_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interact_Reply.Marshal(b, m, deterministic)
}

func (m *Interact_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interact_Reply.Merge(m, src)
}

func (m *Interact_Reply) XXX_Size() int {
	return xxx_messageInfo_Interact_Reply.Size(m)
}

func (m *Interact_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Interact_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Interact_Reply proto.InternalMessageInfo

type ReplicationServiceRegisterGroup struct {
}

func (m *ReplicationServiceRegisterGroup) Reset()         { *m = ReplicationServiceRegisterGroup{} }
func (m *ReplicationServiceRegisterGroup) String() string { return proto.CompactTextString(m) }
func (*ReplicationServiceRegisterGroup) ProtoMessage()    {}
func (*ReplicationServiceRegisterGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{38}
}

func (m *ReplicationServiceRegisterGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationServiceRegisterGroup.Unmarshal(m, b)
}

func (m *ReplicationServiceRegisterGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationServiceRegisterGroup.Marshal(b, m, deterministic)
}

func (m *ReplicationServiceRegisterGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationServiceRegisterGroup.Merge(m, src)
}

func (m *ReplicationServiceRegisterGroup) XXX_Size() int {
	return xxx_messageInfo_ReplicationServiceRegisterGroup.Size(m)
}

func (m *ReplicationServiceRegisterGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationServiceRegisterGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationServiceRegisterGroup proto.InternalMessageInfo

type ReplicationServiceRegisterGroup_Request struct {
	TokenID               string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ConversationPublicKey string `protobuf:"bytes,2,opt,name=conversation_public_key,json=conversationPublicKey,proto3" json:"conversation_public_key,omitempty"`
}

func (m *ReplicationServiceRegisterGroup_Request) Reset() {
	*m = ReplicationServiceRegisterGroup_Request{}
}
func (m *ReplicationServiceRegisterGroup_Request) String() string { return proto.CompactTextString(m) }
func (*ReplicationServiceRegisterGroup_Request) ProtoMessage()    {}
func (*ReplicationServiceRegisterGroup_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{38, 0}
}

func (m *ReplicationServiceRegisterGroup_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Request.Unmarshal(m, b)
}

func (m *ReplicationServiceRegisterGroup_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Request.Marshal(b, m, deterministic)
}

func (m *ReplicationServiceRegisterGroup_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationServiceRegisterGroup_Request.Merge(m, src)
}

func (m *ReplicationServiceRegisterGroup_Request) XXX_Size() int {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Request.Size(m)
}

func (m *ReplicationServiceRegisterGroup_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationServiceRegisterGroup_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationServiceRegisterGroup_Request proto.InternalMessageInfo

func (m *ReplicationServiceRegisterGroup_Request) GetTokenID() string {
	if m != nil {
		return m.TokenID
	}
	return ""
}

func (m *ReplicationServiceRegisterGroup_Request) GetConversationPublicKey() string {
	if m != nil {
		return m.ConversationPublicKey
	}
	return ""
}

type ReplicationServiceRegisterGroup_Reply struct {
}

func (m *ReplicationServiceRegisterGroup_Reply) Reset()         { *m = ReplicationServiceRegisterGroup_Reply{} }
func (m *ReplicationServiceRegisterGroup_Reply) String() string { return proto.CompactTextString(m) }
func (*ReplicationServiceRegisterGroup_Reply) ProtoMessage()    {}
func (*ReplicationServiceRegisterGroup_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{38, 1}
}

func (m *ReplicationServiceRegisterGroup_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Reply.Unmarshal(m, b)
}

func (m *ReplicationServiceRegisterGroup_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Reply.Marshal(b, m, deterministic)
}

func (m *ReplicationServiceRegisterGroup_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationServiceRegisterGroup_Reply.Merge(m, src)
}

func (m *ReplicationServiceRegisterGroup_Reply) XXX_Size() int {
	return xxx_messageInfo_ReplicationServiceRegisterGroup_Reply.Size(m)
}

func (m *ReplicationServiceRegisterGroup_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationServiceRegisterGroup_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationServiceRegisterGroup_Reply proto.InternalMessageInfo

type ReplicationSetAutoEnable struct {
}

func (m *ReplicationSetAutoEnable) Reset()         { *m = ReplicationSetAutoEnable{} }
func (m *ReplicationSetAutoEnable) String() string { return proto.CompactTextString(m) }
func (*ReplicationSetAutoEnable) ProtoMessage()    {}
func (*ReplicationSetAutoEnable) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{39}
}

func (m *ReplicationSetAutoEnable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationSetAutoEnable.Unmarshal(m, b)
}

func (m *ReplicationSetAutoEnable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationSetAutoEnable.Marshal(b, m, deterministic)
}

func (m *ReplicationSetAutoEnable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationSetAutoEnable.Merge(m, src)
}

func (m *ReplicationSetAutoEnable) XXX_Size() int {
	return xxx_messageInfo_ReplicationSetAutoEnable.Size(m)
}

func (m *ReplicationSetAutoEnable) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationSetAutoEnable.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationSetAutoEnable proto.InternalMessageInfo

type ReplicationSetAutoEnable_Request struct {
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (m *ReplicationSetAutoEnable_Request) Reset()         { *m = ReplicationSetAutoEnable_Request{} }
func (m *ReplicationSetAutoEnable_Request) String() string { return proto.CompactTextString(m) }
func (*ReplicationSetAutoEnable_Request) ProtoMessage()    {}
func (*ReplicationSetAutoEnable_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{39, 0}
}

func (m *ReplicationSetAutoEnable_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationSetAutoEnable_Request.Unmarshal(m, b)
}

func (m *ReplicationSetAutoEnable_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationSetAutoEnable_Request.Marshal(b, m, deterministic)
}

func (m *ReplicationSetAutoEnable_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationSetAutoEnable_Request.Merge(m, src)
}

func (m *ReplicationSetAutoEnable_Request) XXX_Size() int {
	return xxx_messageInfo_ReplicationSetAutoEnable_Request.Size(m)
}

func (m *ReplicationSetAutoEnable_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationSetAutoEnable_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationSetAutoEnable_Request proto.InternalMessageInfo

func (m *ReplicationSetAutoEnable_Request) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type ReplicationSetAutoEnable_Reply struct {
}

func (m *ReplicationSetAutoEnable_Reply) Reset()         { *m = ReplicationSetAutoEnable_Reply{} }
func (m *ReplicationSetAutoEnable_Reply) String() string { return proto.CompactTextString(m) }
func (*ReplicationSetAutoEnable_Reply) ProtoMessage()    {}
func (*ReplicationSetAutoEnable_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{39, 1}
}

func (m *ReplicationSetAutoEnable_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationSetAutoEnable_Reply.Unmarshal(m, b)
}

func (m *ReplicationSetAutoEnable_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationSetAutoEnable_Reply.Marshal(b, m, deterministic)
}

func (m *ReplicationSetAutoEnable_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationSetAutoEnable_Reply.Merge(m, src)
}

func (m *ReplicationSetAutoEnable_Reply) XXX_Size() int {
	return xxx_messageInfo_ReplicationSetAutoEnable_Reply.Size(m)
}

func (m *ReplicationSetAutoEnable_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationSetAutoEnable_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationSetAutoEnable_Reply proto.InternalMessageInfo

type BannerQuote struct {
}

func (m *BannerQuote) Reset()         { *m = BannerQuote{} }
func (m *BannerQuote) String() string { return proto.CompactTextString(m) }
func (*BannerQuote) ProtoMessage()    {}
func (*BannerQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{40}
}

func (m *BannerQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BannerQuote.Unmarshal(m, b)
}

func (m *BannerQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BannerQuote.Marshal(b, m, deterministic)
}

func (m *BannerQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BannerQuote.Merge(m, src)
}

func (m *BannerQuote) XXX_Size() int {
	return xxx_messageInfo_BannerQuote.Size(m)
}

func (m *BannerQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_BannerQuote.DiscardUnknown(m)
}

var xxx_messageInfo_BannerQuote proto.InternalMessageInfo

type BannerQuote_Request struct {
	Random bool `protobuf:"varint,1,opt,name=random,proto3" json:"random,omitempty"`
}

func (m *BannerQuote_Request) Reset()         { *m = BannerQuote_Request{} }
func (m *BannerQuote_Request) String() string { return proto.CompactTextString(m) }
func (*BannerQuote_Request) ProtoMessage()    {}
func (*BannerQuote_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{40, 0}
}

func (m *BannerQuote_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BannerQuote_Request.Unmarshal(m, b)
}

func (m *BannerQuote_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BannerQuote_Request.Marshal(b, m, deterministic)
}

func (m *BannerQuote_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BannerQuote_Request.Merge(m, src)
}

func (m *BannerQuote_Request) XXX_Size() int {
	return xxx_messageInfo_BannerQuote_Request.Size(m)
}

func (m *BannerQuote_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_BannerQuote_Request.DiscardUnknown(m)
}

var xxx_messageInfo_BannerQuote_Request proto.InternalMessageInfo

func (m *BannerQuote_Request) GetRandom() bool {
	if m != nil {
		return m.Random
	}
	return false
}

type BannerQuote_Reply struct {
	Quote  string `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
}

func (m *BannerQuote_Reply) Reset()         { *m = BannerQuote_Reply{} }
func (m *BannerQuote_Reply) String() string { return proto.CompactTextString(m) }
func (*BannerQuote_Reply) ProtoMessage()    {}
func (*BannerQuote_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{40, 1}
}

func (m *BannerQuote_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BannerQuote_Reply.Unmarshal(m, b)
}

func (m *BannerQuote_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BannerQuote_Reply.Marshal(b, m, deterministic)
}

func (m *BannerQuote_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BannerQuote_Reply.Merge(m, src)
}

func (m *BannerQuote_Reply) XXX_Size() int {
	return xxx_messageInfo_BannerQuote_Reply.Size(m)
}

func (m *BannerQuote_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_BannerQuote_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_BannerQuote_Reply proto.InternalMessageInfo

func (m *BannerQuote_Reply) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

func (m *BannerQuote_Reply) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type GetUsername struct {
}

func (m *GetUsername) Reset()         { *m = GetUsername{} }
func (m *GetUsername) String() string { return proto.CompactTextString(m) }
func (*GetUsername) ProtoMessage()    {}
func (*GetUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{41}
}

func (m *GetUsername) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsername.Unmarshal(m, b)
}

func (m *GetUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsername.Marshal(b, m, deterministic)
}

func (m *GetUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsername.Merge(m, src)
}

func (m *GetUsername) XXX_Size() int {
	return xxx_messageInfo_GetUsername.Size(m)
}

func (m *GetUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsername.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsername proto.InternalMessageInfo

type GetUsername_Request struct {
}

func (m *GetUsername_Request) Reset()         { *m = GetUsername_Request{} }
func (m *GetUsername_Request) String() string { return proto.CompactTextString(m) }
func (*GetUsername_Request) ProtoMessage()    {}
func (*GetUsername_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{41, 0}
}

func (m *GetUsername_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsername_Request.Unmarshal(m, b)
}

func (m *GetUsername_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsername_Request.Marshal(b, m, deterministic)
}

func (m *GetUsername_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsername_Request.Merge(m, src)
}

func (m *GetUsername_Request) XXX_Size() int {
	return xxx_messageInfo_GetUsername_Request.Size(m)
}

func (m *GetUsername_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsername_Request.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsername_Request proto.InternalMessageInfo

type GetUsername_Reply struct {
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (m *GetUsername_Reply) Reset()         { *m = GetUsername_Reply{} }
func (m *GetUsername_Reply) String() string { return proto.CompactTextString(m) }
func (*GetUsername_Reply) ProtoMessage()    {}
func (*GetUsername_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{41, 1}
}

func (m *GetUsername_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsername_Reply.Unmarshal(m, b)
}

func (m *GetUsername_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsername_Reply.Marshal(b, m, deterministic)
}

func (m *GetUsername_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsername_Reply.Merge(m, src)
}

func (m *GetUsername_Reply) XXX_Size() int {
	return xxx_messageInfo_GetUsername_Reply.Size(m)
}

func (m *GetUsername_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsername_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsername_Reply proto.InternalMessageInfo

func (m *GetUsername_Reply) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type InstanceExportData struct {
}

func (m *InstanceExportData) Reset()         { *m = InstanceExportData{} }
func (m *InstanceExportData) String() string { return proto.CompactTextString(m) }
func (*InstanceExportData) ProtoMessage()    {}
func (*InstanceExportData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{42}
}

func (m *InstanceExportData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceExportData.Unmarshal(m, b)
}

func (m *InstanceExportData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceExportData.Marshal(b, m, deterministic)
}

func (m *InstanceExportData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceExportData.Merge(m, src)
}

func (m *InstanceExportData) XXX_Size() int {
	return xxx_messageInfo_InstanceExportData.Size(m)
}

func (m *InstanceExportData) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceExportData.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceExportData proto.InternalMessageInfo

type InstanceExportData_Request struct {
}

func (m *InstanceExportData_Request) Reset()         { *m = InstanceExportData_Request{} }
func (m *InstanceExportData_Request) String() string { return proto.CompactTextString(m) }
func (*InstanceExportData_Request) ProtoMessage()    {}
func (*InstanceExportData_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{42, 0}
}

func (m *InstanceExportData_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceExportData_Request.Unmarshal(m, b)
}

func (m *InstanceExportData_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceExportData_Request.Marshal(b, m, deterministic)
}

func (m *InstanceExportData_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceExportData_Request.Merge(m, src)
}

func (m *InstanceExportData_Request) XXX_Size() int {
	return xxx_messageInfo_InstanceExportData_Request.Size(m)
}

func (m *InstanceExportData_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceExportData_Request.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceExportData_Request proto.InternalMessageInfo

type InstanceExportData_Reply struct {
	ExportedData []byte `protobuf:"bytes,1,opt,name=exported_data,json=exportedData,proto3" json:"exported_data,omitempty"`
}

func (m *InstanceExportData_Reply) Reset()         { *m = InstanceExportData_Reply{} }
func (m *InstanceExportData_Reply) String() string { return proto.CompactTextString(m) }
func (*InstanceExportData_Reply) ProtoMessage()    {}
func (*InstanceExportData_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{42, 1}
}

func (m *InstanceExportData_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceExportData_Reply.Unmarshal(m, b)
}

func (m *InstanceExportData_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceExportData_Reply.Marshal(b, m, deterministic)
}

func (m *InstanceExportData_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceExportData_Reply.Merge(m, src)
}

func (m *InstanceExportData_Reply) XXX_Size() int {
	return xxx_messageInfo_InstanceExportData_Reply.Size(m)
}

func (m *InstanceExportData_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceExportData_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceExportData_Reply proto.InternalMessageInfo

func (m *InstanceExportData_Reply) GetExportedData() []byte {
	if m != nil {
		return m.ExportedData
	}
	return nil
}

type LocalDatabaseState struct {
	PublicKey               string                    `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	DisplayName             string                    `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ReplicateFlag           bool                      `protobuf:"varint,3,opt,name=replicate_flag,json=replicateFlag,proto3" json:"replicate_flag,omitempty"`
	LocalConversationsState []*LocalConversationState `protobuf:"bytes,4,rep,name=local_conversations_state,json=localConversationsState,proto3" json:"local_conversations_state,omitempty"`
	AccountLink             string                    `protobuf:"bytes,5,opt,name=account_link,json=accountLink,proto3" json:"account_link,omitempty"`
}

func (m *LocalDatabaseState) Reset()         { *m = LocalDatabaseState{} }
func (m *LocalDatabaseState) String() string { return proto.CompactTextString(m) }
func (*LocalDatabaseState) ProtoMessage()    {}
func (*LocalDatabaseState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{43}
}

func (m *LocalDatabaseState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalDatabaseState.Unmarshal(m, b)
}

func (m *LocalDatabaseState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalDatabaseState.Marshal(b, m, deterministic)
}

func (m *LocalDatabaseState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalDatabaseState.Merge(m, src)
}

func (m *LocalDatabaseState) XXX_Size() int {
	return xxx_messageInfo_LocalDatabaseState.Size(m)
}

func (m *LocalDatabaseState) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalDatabaseState.DiscardUnknown(m)
}

var xxx_messageInfo_LocalDatabaseState proto.InternalMessageInfo

func (m *LocalDatabaseState) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *LocalDatabaseState) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LocalDatabaseState) GetReplicateFlag() bool {
	if m != nil {
		return m.ReplicateFlag
	}
	return false
}

func (m *LocalDatabaseState) GetLocalConversationsState() []*LocalConversationState {
	if m != nil {
		return m.LocalConversationsState
	}
	return nil
}

func (m *LocalDatabaseState) GetAccountLink() string {
	if m != nil {
		return m.AccountLink
	}
	return ""
}

type LocalConversationState struct {
	PublicKey   string            `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	UnreadCount int32             `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	IsOpen      bool              `protobuf:"varint,3,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	Type        Conversation_Type `protobuf:"varint,4,opt,name=type,proto3,enum=berty.messenger.v1.Conversation_Type" json:"type,omitempty"`
}

func (m *LocalConversationState) Reset()         { *m = LocalConversationState{} }
func (m *LocalConversationState) String() string { return proto.CompactTextString(m) }
func (*LocalConversationState) ProtoMessage()    {}
func (*LocalConversationState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{44}
}

func (m *LocalConversationState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalConversationState.Unmarshal(m, b)
}

func (m *LocalConversationState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalConversationState.Marshal(b, m, deterministic)
}

func (m *LocalConversationState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalConversationState.Merge(m, src)
}

func (m *LocalConversationState) XXX_Size() int {
	return xxx_messageInfo_LocalConversationState.Size(m)
}

func (m *LocalConversationState) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalConversationState.DiscardUnknown(m)
}

var xxx_messageInfo_LocalConversationState proto.InternalMessageInfo

func (m *LocalConversationState) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *LocalConversationState) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *LocalConversationState) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *LocalConversationState) GetType() Conversation_Type {
	if m != nil {
		return m.Type
	}
	return Conversation_Undefined
}

type MediaPrepare struct {
}

func (m *MediaPrepare) Reset()         { *m = MediaPrepare{} }
func (m *MediaPrepare) String() string { return proto.CompactTextString(m) }
func (*MediaPrepare) ProtoMessage()    {}
func (*MediaPrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{45}
}

func (m *MediaPrepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaPrepare.Unmarshal(m, b)
}

func (m *MediaPrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaPrepare.Marshal(b, m, deterministic)
}

func (m *MediaPrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaPrepare.Merge(m, src)
}

func (m *MediaPrepare) XXX_Size() int {
	return xxx_messageInfo_MediaPrepare.Size(m)
}

func (m *MediaPrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaPrepare.DiscardUnknown(m)
}

var xxx_messageInfo_MediaPrepare proto.InternalMessageInfo

type MediaPrepare_Request struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Info  *Media `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Uri   string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (m *MediaPrepare_Request) Reset()         { *m = MediaPrepare_Request{} }
func (m *MediaPrepare_Request) String() string { return proto.CompactTextString(m) }
func (*MediaPrepare_Request) ProtoMessage()    {}
func (*MediaPrepare_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{45, 0}
}

func (m *MediaPrepare_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaPrepare_Request.Unmarshal(m, b)
}

func (m *MediaPrepare_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaPrepare_Request.Marshal(b, m, deterministic)
}

func (m *MediaPrepare_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaPrepare_Request.Merge(m, src)
}

func (m *MediaPrepare_Request) XXX_Size() int {
	return xxx_messageInfo_MediaPrepare_Request.Size(m)
}

func (m *MediaPrepare_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaPrepare_Request.DiscardUnknown(m)
}

var xxx_messageInfo_MediaPrepare_Request proto.InternalMessageInfo

func (m *MediaPrepare_Request) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *MediaPrepare_Request) GetInfo() *Media {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MediaPrepare_Request) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type MediaPrepare_Reply struct {
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (m *MediaPrepare_Reply) Reset()         { *m = MediaPrepare_Reply{} }
func (m *MediaPrepare_Reply) String() string { return proto.CompactTextString(m) }
func (*MediaPrepare_Reply) ProtoMessage()    {}
func (*MediaPrepare_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{45, 1}
}

func (m *MediaPrepare_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaPrepare_Reply.Unmarshal(m, b)
}

func (m *MediaPrepare_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaPrepare_Reply.Marshal(b, m, deterministic)
}

func (m *MediaPrepare_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaPrepare_Reply.Merge(m, src)
}

func (m *MediaPrepare_Reply) XXX_Size() int {
	return xxx_messageInfo_MediaPrepare_Reply.Size(m)
}

func (m *MediaPrepare_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaPrepare_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_MediaPrepare_Reply proto.InternalMessageInfo

func (m *MediaPrepare_Reply) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type MediaRetrieve struct {
}

func (m *MediaRetrieve) Reset()         { *m = MediaRetrieve{} }
func (m *MediaRetrieve) String() string { return proto.CompactTextString(m) }
func (*MediaRetrieve) ProtoMessage()    {}
func (*MediaRetrieve) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{46}
}

func (m *MediaRetrieve) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaRetrieve.Unmarshal(m, b)
}

func (m *MediaRetrieve) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaRetrieve.Marshal(b, m, deterministic)
}

func (m *MediaRetrieve) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaRetrieve.Merge(m, src)
}

func (m *MediaRetrieve) XXX_Size() int {
	return xxx_messageInfo_MediaRetrieve.Size(m)
}

func (m *MediaRetrieve) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaRetrieve.DiscardUnknown(m)
}

var xxx_messageInfo_MediaRetrieve proto.InternalMessageInfo

type MediaRetrieve_Request struct {
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (m *MediaRetrieve_Request) Reset()         { *m = MediaRetrieve_Request{} }
func (m *MediaRetrieve_Request) String() string { return proto.CompactTextString(m) }
func (*MediaRetrieve_Request) ProtoMessage()    {}
func (*MediaRetrieve_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{46, 0}
}

func (m *MediaRetrieve_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaRetrieve_Request.Unmarshal(m, b)
}

func (m *MediaRetrieve_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaRetrieve_Request.Marshal(b, m, deterministic)
}

func (m *MediaRetrieve_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaRetrieve_Request.Merge(m, src)
}

func (m *MediaRetrieve_Request) XXX_Size() int {
	return xxx_messageInfo_MediaRetrieve_Request.Size(m)
}

func (m *MediaRetrieve_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaRetrieve_Request.DiscardUnknown(m)
}

var xxx_messageInfo_MediaRetrieve_Request proto.InternalMessageInfo

func (m *MediaRetrieve_Request) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type MediaRetrieve_Reply struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Info  *Media `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *MediaRetrieve_Reply) Reset()         { *m = MediaRetrieve_Reply{} }
func (m *MediaRetrieve_Reply) String() string { return proto.CompactTextString(m) }
func (*MediaRetrieve_Reply) ProtoMessage()    {}
func (*MediaRetrieve_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0eab5f5532ffdd8b, []int{46, 1}
}

func (m *MediaRetrieve_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaRetrieve_Reply.Unmarshal(m, b)
}

func (m *MediaRetrieve_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaRetrieve_Reply.Marshal(b, m, deterministic)
}

func (m *MediaRetrieve_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaRetrieve_Reply.Merge(m, src)
}

func (m *MediaRetrieve_Reply) XXX_Size() int {
	return xxx_messageInfo_MediaRetrieve_Reply.Size(m)
}

func (m *MediaRetrieve_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaRetrieve_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_MediaRetrieve_Reply proto.InternalMessageInfo

func (m *MediaRetrieve_Reply) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *MediaRetrieve_Reply) GetInfo() *Media {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("berty.messenger.v1.BertyLink_Kind", BertyLink_Kind_name, BertyLink_Kind_value)
	proto.RegisterEnum("berty.messenger.v1.AppMessage_Type", AppMessage_Type_name, AppMessage_Type_value)
	proto.RegisterEnum("berty.messenger.v1.Media_State", Media_State_name, Media_State_value)
	proto.RegisterEnum("berty.messenger.v1.Contact_State", Contact_State_name, Contact_State_value)
	proto.RegisterEnum("berty.messenger.v1.Conversation_Type", Conversation_Type_name, Conversation_Type_value)
	proto.RegisterEnum("berty.messenger.v1.StreamEvent_Type", StreamEvent_Type_name, StreamEvent_Type_value)
	proto.RegisterEnum("berty.messenger.v1.StreamEvent_Notified_Type", StreamEvent_Notified_Type_name, StreamEvent_Notified_Type_value)
	proto.RegisterType((*ConversationOpen)(nil), "berty.messenger.v1.ConversationOpen")
	proto.RegisterType((*ConversationOpen_Request)(nil), "berty.messenger.v1.ConversationOpen.Request")
	proto.RegisterType((*ConversationOpen_Reply)(nil), "berty.messenger.v1.ConversationOpen.Reply")
	proto.RegisterType((*ConversationClose)(nil), "berty.messenger.v1.ConversationClose")
	proto.RegisterType((*ConversationClose_Request)(nil), "berty.messenger.v1.ConversationClose.Request")
	proto.RegisterType((*ConversationClose_Reply)(nil), "berty.messenger.v1.ConversationClose.Reply")
	proto.RegisterType((*EchoTest)(nil), "berty.messenger.v1.EchoTest")
	proto.RegisterType((*EchoTest_Request)(nil), "berty.messenger.v1.EchoTest.Request")
	proto.RegisterType((*EchoTest_Reply)(nil), "berty.messenger.v1.EchoTest.Reply")
	proto.RegisterType((*EchoDuplexTest)(nil), "berty.messenger.v1.EchoDuplexTest")
	proto.RegisterType((*EchoDuplexTest_Request)(nil), "berty.messenger.v1.EchoDuplexTest.Request")
	proto.RegisterType((*EchoDuplexTest_Reply)(nil), "berty.messenger.v1.EchoDuplexTest.Reply")
	proto.RegisterType((*InstanceShareableBertyID)(nil), "berty.messenger.v1.InstanceShareableBertyID")
	proto.RegisterType((*InstanceShareableBertyID_Request)(nil), "berty.messenger.v1.InstanceShareableBertyID.Request")
	proto.RegisterType((*InstanceShareableBertyID_Reply)(nil), "berty.messenger.v1.InstanceShareableBertyID.Reply")
	proto.RegisterType((*ShareableBertyGroup)(nil), "berty.messenger.v1.ShareableBertyGroup")
	proto.RegisterType((*ShareableBertyGroup_Request)(nil), "berty.messenger.v1.ShareableBertyGroup.Request")
	proto.RegisterType((*ShareableBertyGroup_Reply)(nil), "berty.messenger.v1.ShareableBertyGroup.Reply")
	proto.RegisterType((*DevShareInstanceBertyID)(nil), "berty.messenger.v1.DevShareInstanceBertyID")
	proto.RegisterType((*DevShareInstanceBertyID_Request)(nil), "berty.messenger.v1.DevShareInstanceBertyID.Request")
	proto.RegisterType((*DevShareInstanceBertyID_Reply)(nil), "berty.messenger.v1.DevShareInstanceBertyID.Reply")
	proto.RegisterType((*ParseDeepLink)(nil), "berty.messenger.v1.ParseDeepLink")
	proto.RegisterType((*ParseDeepLink_Request)(nil), "berty.messenger.v1.ParseDeepLink.Request")
	proto.RegisterType((*ParseDeepLink_Reply)(nil), "berty.messenger.v1.ParseDeepLink.Reply")
	proto.RegisterType((*BertyLink)(nil), "berty.messenger.v1.BertyLink")
	proto.RegisterType((*BertyLink_Encrypted)(nil), "berty.messenger.v1.BertyLink.Encrypted")
	proto.RegisterType((*SendContactRequest)(nil), "berty.messenger.v1.SendContactRequest")
	proto.RegisterType((*SendContactRequest_Request)(nil), "berty.messenger.v1.SendContactRequest.Request")
	proto.RegisterType((*SendContactRequest_Reply)(nil), "berty.messenger.v1.SendContactRequest.Reply")
	proto.RegisterType((*SendAck)(nil), "berty.messenger.v1.SendAck")
	proto.RegisterType((*SendAck_Request)(nil), "berty.messenger.v1.SendAck.Request")
	proto.RegisterType((*SendAck_Reply)(nil), "berty.messenger.v1.SendAck.Reply")
	proto.RegisterType((*SendMessage)(nil), "berty.messenger.v1.SendMessage")
	proto.RegisterType((*SendMessage_Request)(nil), "berty.messenger.v1.SendMessage.Request")
	proto.RegisterType((*SendMessage_Reply)(nil), "berty.messenger.v1.SendMessage.Reply")
	proto.RegisterType((*SendReplyOptions)(nil), "berty.messenger.v1.SendReplyOptions")
	proto.RegisterType((*SendReplyOptions_Request)(nil), "berty.messenger.v1.SendReplyOptions.Request")
	proto.RegisterType((*SendReplyOptions_Reply)(nil), "berty.messenger.v1.SendReplyOptions.Reply")
	proto.RegisterType((*BertyID)(nil), "berty.messenger.v1.BertyID")
	proto.RegisterType((*BertyGroup)(nil), "berty.messenger.v1.BertyGroup")
	proto.RegisterType((*AppMessage)(nil), "berty.messenger.v1.AppMessage")
	proto.RegisterType((*AppMessage_UserMessage)(nil), "berty.messenger.v1.AppMessage.UserMessage")
	proto.RegisterType((*AppMessage_UserReaction)(nil), "berty.messenger.v1.AppMessage.UserReaction")
	proto.RegisterType((*AppMessage_GroupInvitation)(nil), "berty.messenger.v1.AppMessage.GroupInvitation")
	proto.RegisterType((*AppMessage_SetGroupInfo)(nil), "berty.messenger.v1.AppMessage.SetGroupInfo")
	proto.RegisterType((*AppMessage_SetUserInfo)(nil), "berty.messenger.v1.AppMessage.SetUserInfo")
	proto.RegisterType((*AppMessage_Acknowledge)(nil), "berty.messenger.v1.AppMessage.Acknowledge")
	proto.RegisterType((*AppMessage_ReplyOptions)(nil), "berty.messenger.v1.AppMessage.ReplyOptions")
	proto.RegisterType((*AppMessage_MonitorMetadata)(nil), "berty.messenger.v1.AppMessage.MonitorMetadata")
	proto.RegisterType((*ReplyOption)(nil), "berty.messenger.v1.ReplyOption")
	proto.RegisterType((*SystemInfo)(nil), "berty.messenger.v1.SystemInfo")
	proto.RegisterType((*SystemInfo_Request)(nil), "berty.messenger.v1.SystemInfo.Request")
	proto.RegisterType((*SystemInfo_Reply)(nil), "berty.messenger.v1.SystemInfo.Reply")
	proto.RegisterType((*SystemInfo_Messenger)(nil), "berty.messenger.v1.SystemInfo.Messenger")
	proto.RegisterType((*SystemInfo_DB)(nil), "berty.messenger.v1.SystemInfo.DB")
	proto.RegisterType((*ConversationJoin)(nil), "berty.messenger.v1.ConversationJoin")
	proto.RegisterType((*ConversationJoin_Request)(nil), "berty.messenger.v1.ConversationJoin.Request")
	proto.RegisterType((*ConversationJoin_Reply)(nil), "berty.messenger.v1.ConversationJoin.Reply")
	proto.RegisterType((*Account)(nil), "berty.messenger.v1.Account")
	proto.RegisterType((*ServiceToken)(nil), "berty.messenger.v1.ServiceToken")
	proto.RegisterType((*Interaction)(nil), "berty.messenger.v1.Interaction")
	proto.RegisterType((*Media)(nil), "berty.messenger.v1.Media")
	proto.RegisterType((*Contact)(nil), "berty.messenger.v1.Contact")
	proto.RegisterType((*Conversation)(nil), "berty.messenger.v1.Conversation")
	proto.RegisterType((*ConversationReplicationInfo)(nil), "berty.messenger.v1.ConversationReplicationInfo")
	proto.RegisterType((*Member)(nil), "berty.messenger.v1.Member")
	proto.RegisterType((*Device)(nil), "berty.messenger.v1.Device")
	proto.RegisterType((*ContactMetadata)(nil), "berty.messenger.v1.ContactMetadata")
	proto.RegisterType((*StreamEvent)(nil), "berty.messenger.v1.StreamEvent")
	proto.RegisterType((*StreamEvent_ConversationUpdated)(nil), "berty.messenger.v1.StreamEvent.ConversationUpdated")
	proto.RegisterType((*StreamEvent_ConversationDeleted)(nil), "berty.messenger.v1.StreamEvent.ConversationDeleted")
	proto.RegisterType((*StreamEvent_InteractionUpdated)(nil), "berty.messenger.v1.StreamEvent.InteractionUpdated")
	proto.RegisterType((*StreamEvent_InteractionDeleted)(nil), "berty.messenger.v1.StreamEvent.InteractionDeleted")
	proto.RegisterType((*StreamEvent_ContactUpdated)(nil), "berty.messenger.v1.StreamEvent.ContactUpdated")
	proto.RegisterType((*StreamEvent_AccountUpdated)(nil), "berty.messenger.v1.StreamEvent.AccountUpdated")
	proto.RegisterType((*StreamEvent_MemberUpdated)(nil), "berty.messenger.v1.StreamEvent.MemberUpdated")
	proto.RegisterType((*StreamEvent_DeviceUpdated)(nil), "berty.messenger.v1.StreamEvent.DeviceUpdated")
	proto.RegisterType((*StreamEvent_ListEnded)(nil), "berty.messenger.v1.StreamEvent.ListEnded")
	proto.RegisterType((*StreamEvent_MediaUpdated)(nil), "berty.messenger.v1.StreamEvent.MediaUpdated")
	proto.RegisterType((*StreamEvent_Notified)(nil), "berty.messenger.v1.StreamEvent.Notified")
	proto.RegisterType((*StreamEvent_Notified_Basic)(nil), "berty.messenger.v1.StreamEvent.Notified.Basic")
	proto.RegisterType((*StreamEvent_Notified_MessageReceived)(nil), "berty.messenger.v1.StreamEvent.Notified.MessageReceived")
	proto.RegisterType((*StreamEvent_Notified_ContactRequestSent)(nil), "berty.messenger.v1.StreamEvent.Notified.ContactRequestSent")
	proto.RegisterType((*StreamEvent_Notified_ContactRequestReceived)(nil), "berty.messenger.v1.StreamEvent.Notified.ContactRequestReceived")
	proto.RegisterType((*ConversationStream)(nil), "berty.messenger.v1.ConversationStream")
	proto.RegisterType((*ConversationStream_Request)(nil), "berty.messenger.v1.ConversationStream.Request")
	proto.RegisterType((*ConversationStream_Reply)(nil), "berty.messenger.v1.ConversationStream.Reply")
	proto.RegisterType((*ConversationCreate)(nil), "berty.messenger.v1.ConversationCreate")
	proto.RegisterType((*ConversationCreate_Request)(nil), "berty.messenger.v1.ConversationCreate.Request")
	proto.RegisterType((*ConversationCreate_Reply)(nil), "berty.messenger.v1.ConversationCreate.Reply")
	proto.RegisterType((*AccountGet)(nil), "berty.messenger.v1.AccountGet")
	proto.RegisterType((*AccountGet_Request)(nil), "berty.messenger.v1.AccountGet.Request")
	proto.RegisterType((*AccountGet_Reply)(nil), "berty.messenger.v1.AccountGet.Reply")
	proto.RegisterType((*EventStream)(nil), "berty.messenger.v1.EventStream")
	proto.RegisterType((*EventStream_Request)(nil), "berty.messenger.v1.EventStream.Request")
	proto.RegisterType((*EventStream_Reply)(nil), "berty.messenger.v1.EventStream.Reply")
	proto.RegisterType((*AccountUpdate)(nil), "berty.messenger.v1.AccountUpdate")
	proto.RegisterType((*AccountUpdate_Request)(nil), "berty.messenger.v1.AccountUpdate.Request")
	proto.RegisterType((*AccountUpdate_Reply)(nil), "berty.messenger.v1.AccountUpdate.Reply")
	proto.RegisterType((*ContactRequest)(nil), "berty.messenger.v1.ContactRequest")
	proto.RegisterType((*ContactRequest_Request)(nil), "berty.messenger.v1.ContactRequest.Request")
	proto.RegisterType((*ContactRequest_Reply)(nil), "berty.messenger.v1.ContactRequest.Reply")
	proto.RegisterType((*ContactAccept)(nil), "berty.messenger.v1.ContactAccept")
	proto.RegisterType((*ContactAccept_Request)(nil), "berty.messenger.v1.ContactAccept.Request")
	proto.RegisterType((*ContactAccept_Reply)(nil), "berty.messenger.v1.ContactAccept.Reply")
	proto.RegisterType((*Interact)(nil), "berty.messenger.v1.Interact")
	proto.RegisterType((*Interact_Request)(nil), "berty.messenger.v1.Interact.Request")
	proto.RegisterType((*Interact_Reply)(nil), "berty.messenger.v1.Interact.Reply")
	proto.RegisterType((*ReplicationServiceRegisterGroup)(nil), "berty.messenger.v1.ReplicationServiceRegisterGroup")
	proto.RegisterType((*ReplicationServiceRegisterGroup_Request)(nil), "berty.messenger.v1.ReplicationServiceRegisterGroup.Request")
	proto.RegisterType((*ReplicationServiceRegisterGroup_Reply)(nil), "berty.messenger.v1.ReplicationServiceRegisterGroup.Reply")
	proto.RegisterType((*ReplicationSetAutoEnable)(nil), "berty.messenger.v1.ReplicationSetAutoEnable")
	proto.RegisterType((*ReplicationSetAutoEnable_Request)(nil), "berty.messenger.v1.ReplicationSetAutoEnable.Request")
	proto.RegisterType((*ReplicationSetAutoEnable_Reply)(nil), "berty.messenger.v1.ReplicationSetAutoEnable.Reply")
	proto.RegisterType((*BannerQuote)(nil), "berty.messenger.v1.BannerQuote")
	proto.RegisterType((*BannerQuote_Request)(nil), "berty.messenger.v1.BannerQuote.Request")
	proto.RegisterType((*BannerQuote_Reply)(nil), "berty.messenger.v1.BannerQuote.Reply")
	proto.RegisterType((*GetUsername)(nil), "berty.messenger.v1.GetUsername")
	proto.RegisterType((*GetUsername_Request)(nil), "berty.messenger.v1.GetUsername.Request")
	proto.RegisterType((*GetUsername_Reply)(nil), "berty.messenger.v1.GetUsername.Reply")
	proto.RegisterType((*InstanceExportData)(nil), "berty.messenger.v1.InstanceExportData")
	proto.RegisterType((*InstanceExportData_Request)(nil), "berty.messenger.v1.InstanceExportData.Request")
	proto.RegisterType((*InstanceExportData_Reply)(nil), "berty.messenger.v1.InstanceExportData.Reply")
	proto.RegisterType((*LocalDatabaseState)(nil), "berty.messenger.v1.LocalDatabaseState")
	proto.RegisterType((*LocalConversationState)(nil), "berty.messenger.v1.LocalConversationState")
	proto.RegisterType((*MediaPrepare)(nil), "berty.messenger.v1.MediaPrepare")
	proto.RegisterType((*MediaPrepare_Request)(nil), "berty.messenger.v1.MediaPrepare.Request")
	proto.RegisterType((*MediaPrepare_Reply)(nil), "berty.messenger.v1.MediaPrepare.Reply")
	proto.RegisterType((*MediaRetrieve)(nil), "berty.messenger.v1.MediaRetrieve")
	proto.RegisterType((*MediaRetrieve_Request)(nil), "berty.messenger.v1.MediaRetrieve.Request")
	proto.RegisterType((*MediaRetrieve_Reply)(nil), "berty.messenger.v1.MediaRetrieve.Reply")
}

func init() { proto.RegisterFile("messengertypes.proto", fileDescriptor_0eab5f5532ffdd8b) }

var fileDescriptor_0eab5f5532ffdd8b = []byte{
	// 4558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3c, 0x4d, 0x6f, 0x1b, 0x49,
	0x76, 0xd3, 0xfc, 0x10, 0xc9, 0x47, 0x4a, 0x6a, 0x95, 0x65, 0x99, 0x6e, 0xad, 0xcd, 0x71, 0x7b,
	0x3c, 0xa3, 0xf1, 0xd8, 0xf2, 0x5a, 0xe3, 0xf1, 0xc4, 0xf6, 0x6e, 0x06, 0xa2, 0xe4, 0xf5, 0x28,
	0xb6, 0x6c, 0x6d, 0xcb, 0x9a, 0x59, 0xcc, 0x22, 0x61, 0x9a, 0xdd, 0x25, 0xba, 0x57, 0x64, 0x37,
	0xa7, 0xbb, 0x29, 0x99, 0x8b, 0x5c, 0x36, 0x1f, 0x48, 0x90, 0x45, 0x82, 0x01, 0x92, 0x00, 0xc9,
	0x2d, 0x39, 0x04, 0x08, 0x12, 0x24, 0x40, 0x10, 0x20, 0xa7, 0xfc, 0x80, 0xe4, 0x96, 0x5c, 0x82,
	0x9c, 0x78, 0xd0, 0x00, 0x39, 0xe4, 0xe8, 0x6b, 0x10, 0x20, 0xa8, 0xaf, 0xee, 0x6a, 0xb2, 0xf9,
	0x61, 0xd9, 0x1b, 0xe4, 0x64, 0xd6, 0xab, 0xf7, 0x5e, 0xbd, 0xaa, 0xf7, 0x5d, 0x5d, 0x32, 0x2c,
	0x77, 0x70, 0x10, 0x60, 0xb7, 0x85, 0xfd, 0xb0, 0xdf, 0xc5, 0xc1, 0x7a, 0xd7, 0xf7, 0x42, 0x0f,
	0xa1, 0x26, 0x19, 0xaf, 0x47, 0x73, 0xeb, 0xc7, 0xb7, 0xb5, 0xe5, 0x96, 0xd7, 0xf2, 0xe8, 0xf4,
	0x2d, 0xf2, 0x8b, 0x61, 0x6a, 0xe7, 0xe8, 0x3f, 0x96, 0xd7, 0x96, 0xc8, 0xf5, 0xa7, 0xa0, 0x6e,
	0x79, 0xee, 0x31, 0xf6, 0x03, 0x33, 0x74, 0x3c, 0xf7, 0x59, 0x17, 0xbb, 0xda, 0x6d, 0x28, 0x18,
	0xf8, 0xeb, 0x1e, 0x0e, 0x42, 0xf4, 0x3e, 0x14, 0x5b, 0xbe, 0xd7, 0xeb, 0x36, 0xba, 0x47, 0x55,
	0xe5, 0x5d, 0x65, 0xad, 0x54, 0x2f, 0x9f, 0x0e, 0x6a, 0x85, 0x47, 0x04, 0xb6, 0xf7, 0xd8, 0x28,
	0xd0, 0xc9, 0xbd, 0x23, 0xad, 0x00, 0x79, 0x03, 0x77, 0xdb, 0x7d, 0xfd, 0x19, 0x2c, 0xc9, 0xfc,
	0xb6, 0xda, 0x5e, 0x80, 0xdf, 0x88, 0xe1, 0xcf, 0x14, 0x28, 0x3e, 0xb4, 0x5e, 0x78, 0xcf, 0x71,
	0x10, 0x6a, 0x3f, 0x8a, 0x19, 0x2d, 0x43, 0xde, 0xc6, 0x6d, 0xb3, 0x4f, 0xb9, 0xe4, 0x0c, 0x36,
	0x40, 0x08, 0x72, 0xd8, 0x7a, 0xe1, 0x55, 0x33, 0x84, 0xb5, 0x41, 0x7f, 0xa3, 0xab, 0x30, 0x1f,
	0xfa, 0x4e, 0xab, 0x85, 0xfd, 0x06, 0xf6, 0x7d, 0xcf, 0xaf, 0x66, 0xdf, 0x55, 0xd6, 0x8a, 0x46,
	0x85, 0x03, 0x1f, 0x12, 0x98, 0xb6, 0xca, 0xd7, 0x8b, 0x38, 0x28, 0x31, 0x07, 0xfd, 0x6b, 0x58,
	0x20, 0x22, 0x6c, 0xf7, 0xba, 0x6d, 0xfc, 0x92, 0x0a, 0x52, 0x8f, 0x05, 0xf9, 0xc5, 0x2c, 0xf9,
	0xc7, 0x19, 0xa8, 0xee, 0xb8, 0x41, 0x68, 0xba, 0x16, 0xde, 0x7f, 0x61, 0xfa, 0xd8, 0x6c, 0xb6,
	0x71, 0x9d, 0xa8, 0x7a, 0x67, 0x5b, 0x6b, 0x26, 0x8e, 0xc1, 0xc7, 0x01, 0x0e, 0x29, 0x71, 0xd1,
	0x60, 0x03, 0x74, 0x05, 0x2a, 0xb6, 0x13, 0x74, 0xdb, 0x66, 0xbf, 0xe1, 0x9a, 0x1d, 0xcc, 0x65,
	0x2b, 0x73, 0xd8, 0x53, 0xb3, 0x83, 0xd1, 0x65, 0x80, 0xae, 0x19, 0x04, 0xdd, 0x17, 0xbe, 0x19,
	0x60, 0x2a, 0x5f, 0xc5, 0x90, 0x20, 0xda, 0x1f, 0x29, 0x42, 0xbc, 0xdb, 0x90, 0x6b, 0x3b, 0x2e,
	0x53, 0x57, 0x79, 0xe3, 0xd2, 0xfa, 0xa8, 0xc1, 0xad, 0x53, 0xc1, 0x9e, 0x38, 0xee, 0x91, 0x41,
	0x51, 0xd1, 0x06, 0x54, 0x1c, 0x37, 0xc4, 0xbe, 0x6b, 0xb6, 0x1b, 0x3d, 0xbf, 0xcd, 0xd6, 0xaf,
	0x2f, 0x9e, 0x0e, 0x6a, 0xe5, 0x1d, 0x0e, 0x3f, 0x30, 0x9e, 0x18, 0x65, 0x81, 0x74, 0xe0, 0xb7,
	0xd1, 0x55, 0x28, 0x9c, 0xe0, 0x26, 0x45, 0xcf, 0x52, 0x74, 0x38, 0x1d, 0xd4, 0xe6, 0xbe, 0xc4,
	0x4d, 0x82, 0x39, 0x77, 0x82, 0x9b, 0x07, 0x7e, 0x5b, 0xff, 0x1f, 0x05, 0xce, 0x25, 0x8f, 0x83,
	0x5a, 0x8e, 0xb6, 0x37, 0xde, 0xc2, 0x2a, 0xe9, 0x16, 0x86, 0x2e, 0x01, 0x30, 0x3c, 0xe9, 0x84,
	0x4a, 0x14, 0x42, 0xce, 0xe7, 0xff, 0xe9, 0xfe, 0x0f, 0xe1, 0xc2, 0x36, 0x3e, 0xa6, 0x27, 0x20,
	0xac, 0x43, 0x18, 0x45, 0xfd, 0xcd, 0x8d, 0x22, 0xf6, 0xba, 0xdf, 0x57, 0x60, 0x7e, 0xcf, 0xf4,
	0x03, 0xbc, 0x8d, 0x71, 0x97, 0x6c, 0x4c, 0xfb, 0x7e, 0xc2, 0xe2, 0xa3, 0x03, 0x29, 0xf1, 0x1d,
	0x27, 0xcd, 0x29, 0x33, 0x62, 0x4e, 0xf7, 0xcf, 0x7e, 0x9a, 0xfa, 0x7f, 0xce, 0x41, 0x29, 0x82,
	0xa1, 0xbb, 0x90, 0x3b, 0x72, 0x5c, 0x9b, 0x32, 0x58, 0xd8, 0xd0, 0x27, 0x32, 0x58, 0x7f, 0xec,
	0xb8, 0xb6, 0x41, 0xf1, 0xd1, 0x16, 0x14, 0x29, 0x6a, 0xc3, 0xb1, 0xa9, 0x7c, 0xe5, 0x8d, 0xd5,
	0xb1, 0xb4, 0x3b, 0xdb, 0xcc, 0x68, 0xf8, 0xc0, 0x28, 0x50, 0xc4, 0x1d, 0x1b, 0x7d, 0x06, 0x65,
	0xc6, 0x84, 0x1a, 0x0a, 0x55, 0x54, 0x79, 0xe3, 0xf2, 0x58, 0x3e, 0xd4, 0xe8, 0x0c, 0x68, 0x46,
	0xbf, 0xd1, 0x43, 0x28, 0x61, 0xd7, 0xf2, 0xfb, 0xdd, 0x10, 0xdb, 0xd5, 0x1c, 0x25, 0xff, 0x60,
	0xf2, 0x16, 0x1e, 0x0a, 0x74, 0x23, 0xa6, 0xd4, 0xfe, 0x3b, 0x0b, 0xa5, 0x68, 0xe2, 0xcc, 0x47,
	0xb2, 0x0c, 0x79, 0xd7, 0x73, 0x2d, 0xa1, 0x2f, 0x36, 0x18, 0xb1, 0x93, 0xec, 0x68, 0xf0, 0xd0,
	0xa0, 0x68, 0xbd, 0xc0, 0xd6, 0x51, 0xd0, 0xeb, 0xd0, 0x4d, 0x54, 0x8c, 0x68, 0x8c, 0xb6, 0xe0,
	0xb2, 0xe5, 0xb9, 0xa1, 0x69, 0x85, 0x8d, 0x6e, 0xaf, 0xd9, 0x76, 0xac, 0x86, 0x8f, 0x5d, 0x1b,
	0xff, 0xf4, 0xd8, 0xeb, 0x05, 0x8d, 0x00, 0x63, 0xbb, 0x0a, 0x94, 0x62, 0x95, 0x63, 0xed, 0x51,
	0x24, 0x23, 0xc2, 0xd9, 0xc7, 0xd8, 0x46, 0x75, 0x40, 0x82, 0x89, 0x69, 0x59, 0x5e, 0xcf, 0x0d,
	0x89, 0x3b, 0x97, 0xa9, 0x3b, 0x2f, 0x9f, 0x0e, 0x6a, 0x24, 0x69, 0x91, 0xd9, 0x4d, 0x36, 0xb9,
	0xf7, 0xd8, 0x50, 0xad, 0x24, 0xe4, 0x08, 0xad, 0x81, 0xca, 0x03, 0x01, 0x13, 0xe3, 0x08, 0xf7,
	0xab, 0xcb, 0x74, 0xe9, 0x05, 0x16, 0x03, 0x28, 0xf8, 0x31, 0xee, 0x93, 0x1d, 0x33, 0xcc, 0x00,
	0x5b, 0x3e, 0x0e, 0xab, 0xe7, 0x29, 0x56, 0x99, 0xc2, 0xf6, 0x29, 0x28, 0x66, 0xc6, 0x50, 0x1a,
	0x81, 0xd3, 0xaa, 0xae, 0x48, 0xcc, 0x18, 0xda, 0xbe, 0xd3, 0x42, 0x0f, 0x44, 0x5c, 0x21, 0x69,
	0xb6, 0x7a, 0x81, 0xaa, 0xe4, 0x3b, 0x5c, 0x25, 0x22, 0x03, 0x13, 0x8d, 0x50, 0x7b, 0x78, 0xde,
	0xef, 0x62, 0x1e, 0x75, 0xc8, 0x4f, 0xf4, 0x1e, 0x2c, 0xf0, 0x65, 0x9c, 0x96, 0x4b, 0x04, 0xaf,
	0x56, 0xe9, 0x22, 0x4c, 0xbe, 0x7d, 0xa7, 0xe5, 0xee, 0xf5, 0x9a, 0xfa, 0x17, 0x90, 0x23, 0x5a,
	0x44, 0x8b, 0x50, 0x3e, 0x70, 0x8f, 0x5c, 0xef, 0xc4, 0x25, 0x43, 0xf5, 0x1d, 0x74, 0x01, 0xce,
	0xf1, 0x83, 0xd9, 0x71, 0x8f, 0x9d, 0x10, 0x7f, 0x71, 0x9b, 0x4e, 0x28, 0x04, 0x93, 0xae, 0xc7,
	0x01, 0x19, 0x74, 0x0e, 0x16, 0x23, 0xfb, 0xe1, 0xc0, 0xac, 0xfe, 0xb7, 0x0a, 0xa0, 0x7d, 0xec,
	0xda, 0x9c, 0x07, 0xf7, 0x77, 0xed, 0x0f, 0x94, 0xd8, 0xf7, 0x65, 0x2f, 0x52, 0xce, 0xea, 0x45,
	0x1a, 0x14, 0x3b, 0x38, 0x34, 0x6d, 0x33, 0x34, 0xb9, 0xe9, 0x45, 0x63, 0xa2, 0x0b, 0xef, 0xc4,
	0x6d, 0x44, 0xf3, 0x2c, 0x33, 0x95, 0xbd, 0x13, 0x77, 0x97, 0x83, 0xe2, 0x28, 0x15, 0x40, 0x81,
	0x88, 0xbb, 0x69, 0x1d, 0x69, 0x8d, 0xd7, 0x4f, 0x00, 0x37, 0x00, 0x88, 0xcc, 0x66, 0x0b, 0x8b,
	0x90, 0x50, 0xa9, 0xcf, 0x9f, 0x0e, 0x6a, 0xa5, 0x5d, 0x06, 0xdd, 0xd9, 0x36, 0x4a, 0x1c, 0x61,
	0xc7, 0x8e, 0x17, 0xb5, 0xa0, 0x4c, 0x16, 0xe5, 0x48, 0xda, 0xe3, 0xd7, 0x5f, 0xb8, 0x0a, 0x05,
	0xce, 0x97, 0xc7, 0x60, 0x31, 0x8c, 0x17, 0xf9, 0x13, 0x05, 0x54, 0xb2, 0x0a, 0x1d, 0x3d, 0xeb,
	0x92, 0x52, 0x2a, 0xd0, 0x5e, 0xbe, 0xfe, 0x52, 0x0f, 0xa1, 0xe0, 0x31, 0x6a, 0x1e, 0xf3, 0x3e,
	0x4a, 0xd3, 0xd6, 0x66, 0xb7, 0xcb, 0xb7, 0xb3, 0x2e, 0x2f, 0x68, 0x08, 0xda, 0x58, 0xae, 0x6f,
	0x14, 0x10, 0xea, 0x44, 0x77, 0x60, 0x65, 0x8c, 0x83, 0x53, 0x89, 0x8c, 0xe5, 0x6e, 0x9a, 0x67,
	0xdf, 0x00, 0x90, 0x3c, 0x5a, 0x3a, 0xf5, 0xd8, 0x95, 0x4b, 0x66, 0xe4, 0xc3, 0xd3, 0x63, 0x91,
	0xde, 0x00, 0x88, 0x63, 0x2d, 0x5a, 0x87, 0x3c, 0x0b, 0xcd, 0xcc, 0x38, 0xab, 0xe3, 0x1c, 0xcf,
	0x60, 0x68, 0x33, 0x24, 0x45, 0xfd, 0xe7, 0x05, 0x80, 0xf8, 0x84, 0xd0, 0xa7, 0x90, 0xa3, 0x9e,
	0xcd, 0x82, 0xed, 0xd5, 0x29, 0xe7, 0x49, 0x1d, 0x9c, 0x12, 0x10, 0xb5, 0x77, 0xcd, 0x7e, 0xdb,
	0x33, 0xb9, 0xb1, 0x19, 0x62, 0x88, 0x3e, 0x84, 0x52, 0x80, 0xdd, 0xb0, 0x61, 0x9b, 0x21, 0xdb,
	0x62, 0xb6, 0x5e, 0xf9, 0xaf, 0x41, 0xad, 0x48, 0x80, 0xdb, 0x66, 0x88, 0x8d, 0xe8, 0x17, 0xba,
	0x0d, 0x73, 0x1d, 0x6c, 0x3b, 0x66, 0x50, 0xcd, 0xbd, 0x9b, 0x5d, 0x2b, 0x6f, 0x5c, 0x4c, 0x5b,
	0x7f, 0x97, 0x60, 0x18, 0x1c, 0x51, 0xbb, 0x02, 0xe5, 0x83, 0x00, 0xfb, 0x42, 0x7e, 0x04, 0xb9,
	0xa6, 0x67, 0xf7, 0x45, 0xf6, 0x26, 0xbf, 0xb5, 0xef, 0x41, 0x85, 0xa0, 0x18, 0xd8, 0xb4, 0x88,
	0xc2, 0xd1, 0x0a, 0xcc, 0x85, 0xa6, 0xdf, 0xc2, 0x21, 0x3f, 0x70, 0x3e, 0x22, 0x09, 0x03, 0x77,
	0xbc, 0x9f, 0x38, 0xfc, 0x98, 0xd8, 0x40, 0xbb, 0x06, 0x8b, 0xf4, 0x4c, 0x69, 0xcc, 0xa1, 0x65,
	0x7f, 0x54, 0x22, 0x64, 0xe2, 0x12, 0x41, 0xdb, 0x83, 0xca, 0x3e, 0x0e, 0x39, 0xe6, 0xa1, 0x37,
	0x72, 0xf4, 0xca, 0x68, 0x9e, 0xb9, 0x04, 0x60, 0x1e, 0x9b, 0xa1, 0xe9, 0x37, 0x2c, 0xee, 0xa2,
	0x25, 0xa3, 0xc4, 0x20, 0x5b, 0x8e, 0xad, 0xfd, 0x1a, 0x71, 0xc5, 0x90, 0x48, 0x3e, 0x2b, 0xc3,
	0x1b, 0xa3, 0x0c, 0xb9, 0xf5, 0x31, 0xa6, 0xc4, 0xe7, 0x63, 0xfe, 0xd7, 0xa0, 0xbc, 0x69, 0x91,
	0xf8, 0xda, 0xc6, 0x76, 0x0b, 0x4b, 0xa7, 0x92, 0x91, 0x4f, 0x45, 0xdb, 0x81, 0x8a, 0xec, 0x36,
	0xe8, 0x5e, 0xec, 0x74, 0x0a, 0x55, 0x52, 0x2d, 0x4d, 0x49, 0x12, 0x49, 0xec, 0x68, 0x07, 0xb0,
	0xb8, 0xeb, 0xb9, 0x4e, 0xe8, 0xf9, 0x22, 0xda, 0xa1, 0x3a, 0xe4, 0xf1, 0x31, 0x76, 0x43, 0x6e,
	0xd1, 0x37, 0x52, 0x2c, 0x9a, 0x93, 0xd0, 0xa3, 0x5d, 0x7f, 0x48, 0x90, 0x39, 0xc4, 0x60, 0xa4,
	0xfa, 0x3f, 0x2b, 0x90, 0xa3, 0xf9, 0x65, 0x1e, 0x4a, 0x07, 0xae, 0x8d, 0x0f, 0x1d, 0x17, 0x93,
	0x7c, 0x71, 0x0e, 0x16, 0x09, 0x58, 0x32, 0x0f, 0x55, 0x41, 0xcb, 0xa0, 0x0a, 0xa0, 0x30, 0x08,
	0x35, 0x43, 0x52, 0x0b, 0x81, 0x0e, 0x29, 0x5a, 0xcd, 0x0a, 0x74, 0x59, 0xb5, 0x6a, 0x4e, 0x70,
	0x96, 0xd4, 0xa3, 0xe6, 0x05, 0x50, 0x3a, 0x53, 0x75, 0x4e, 0xd0, 0xcb, 0x27, 0xa8, 0x16, 0xc4,
	0x72, 0x43, 0x87, 0xa1, 0xda, 0xfa, 0x26, 0x94, 0x25, 0x54, 0xe2, 0x54, 0x5c, 0xbf, 0x5c, 0xdd,
	0x62, 0x38, 0xec, 0x6e, 0xa5, 0xc8, 0xdd, 0xf4, 0xbf, 0xc9, 0x03, 0xec, 0xf7, 0x83, 0x10, 0x77,
	0x88, 0x5c, 0x5a, 0x29, 0x0a, 0xab, 0xda, 0x37, 0x51, 0xd1, 0xff, 0x19, 0x14, 0xc5, 0x09, 0xf3,
	0x83, 0xbf, 0x9a, 0x72, 0xf0, 0x31, 0x17, 0xa6, 0x4e, 0x23, 0x22, 0x42, 0x3f, 0x80, 0x52, 0xa4,
	0x6e, 0x1e, 0x7b, 0xd7, 0xd2, 0xcc, 0x40, 0x62, 0xb1, 0x2b, 0xe0, 0x46, 0x4c, 0xaa, 0xfd, 0xbb,
	0x02, 0xa5, 0x68, 0x02, 0x7d, 0x06, 0x85, 0xae, 0xef, 0x59, 0x38, 0x08, 0xb8, 0x54, 0xd7, 0x26,
	0x4b, 0xb5, 0xc7, 0x90, 0x0d, 0x41, 0x45, 0x3c, 0xf8, 0xc4, 0xf4, 0x69, 0x3a, 0xc8, 0x12, 0x0f,
	0xa6, 0x03, 0xf4, 0x29, 0x54, 0x05, 0x83, 0x86, 0xe3, 0x36, 0x02, 0xb3, 0x83, 0x1b, 0x62, 0x1d,
	0xd6, 0xba, 0x9e, 0x17, 0xf3, 0x3b, 0xee, 0xbe, 0xd9, 0xc1, 0x9c, 0x2f, 0xba, 0x07, 0x19, 0xbb,
	0xc9, 0xeb, 0xd8, 0x2b, 0x53, 0xb6, 0xb7, 0x5d, 0xaf, 0xcf, 0x9d, 0x0e, 0x6a, 0x99, 0xed, 0xba,
	0x91, 0xb1, 0x9b, 0xda, 0x5f, 0x66, 0x20, 0xb3, 0x5d, 0x27, 0xb5, 0x00, 0x0f, 0xf7, 0x6c, 0x4b,
	0x59, 0x23, 0x1a, 0xd3, 0x32, 0x93, 0x95, 0x22, 0x2c, 0x7d, 0x65, 0x8d, 0x68, 0x8c, 0xde, 0x83,
	0x79, 0x4b, 0xba, 0x68, 0x60, 0x72, 0x66, 0x8d, 0x24, 0x10, 0xe9, 0xbc, 0x11, 0x63, 0x66, 0x1c,
	0x50, 0x49, 0xb3, 0x46, 0x02, 0xc6, 0xd2, 0x71, 0xa7, 0x89, 0xfd, 0xa0, 0x9a, 0xa7, 0xd3, 0x62,
	0x48, 0x8d, 0x0b, 0x1f, 0x3b, 0x16, 0x0e, 0xaa, 0x73, 0x6c, 0x86, 0x0f, 0xd1, 0x35, 0x58, 0x08,
	0xb0, 0x4f, 0x7e, 0x37, 0x42, 0xef, 0x08, 0xbb, 0x41, 0xb5, 0xc0, 0x96, 0xe7, 0xd0, 0xe7, 0x14,
	0x88, 0xea, 0x70, 0x49, 0x96, 0xa7, 0xe1, 0xe3, 0x6e, 0xdb, 0xb1, 0xd8, 0x6f, 0xc7, 0x3d, 0xf4,
	0xaa, 0x45, 0x4a, 0xb5, 0x2a, 0x23, 0x19, 0x31, 0x0e, 0x39, 0x36, 0xfd, 0xab, 0xe4, 0x0d, 0xcd,
	0xaf, 0x78, 0x8e, 0xfb, 0xa6, 0xcd, 0x58, 0x9c, 0xce, 0xb3, 0x50, 0xe0, 0x79, 0x17, 0xdd, 0x01,
	0x90, 0x0a, 0x65, 0x76, 0x37, 0x73, 0xfe, 0xd5, 0xa0, 0xb6, 0xd4, 0xf2, 0xfc, 0xce, 0x7d, 0xbd,
	0xeb, 0x3b, 0x1d, 0xd3, 0xef, 0x3f, 0xc6, 0x7d, 0xdd, 0x28, 0x75, 0xe5, 0xd2, 0x79, 0xda, 0x4d,
	0xc3, 0xe7, 0x89, 0x98, 0x5b, 0xa0, 0x8c, 0x3f, 0x4c, 0xc4, 0xdc, 0x57, 0x83, 0x5a, 0x95, 0xad,
	0x62, 0x79, 0xed, 0x5e, 0xc7, 0xbd, 0x1f, 0xe3, 0xeb, 0x52, 0x3c, 0x8e, 0xf6, 0x9a, 0x95, 0xf6,
	0xfa, 0x62, 0x44, 0x13, 0x79, 0x1a, 0x73, 0xdf, 0x4d, 0xb5, 0x46, 0x49, 0x3b, 0xf5, 0xda, 0xab,
	0x41, 0x6d, 0x95, 0x2d, 0x7b, 0xe8, 0xf9, 0xd8, 0x69, 0xb9, 0x8f, 0x71, 0xff, 0x7e, 0x54, 0x86,
	0xe8, 0xc3, 0xca, 0xb4, 0x41, 0x17, 0xfa, 0xc3, 0x0d, 0x17, 0x9f, 0xb0, 0x1e, 0x30, 0x68, 0x98,
	0xbd, 0xd0, 0xeb, 0x98, 0xa1, 0x63, 0x99, 0xed, 0x76, 0x9f, 0x1a, 0x4a, 0xb1, 0x7e, 0xe1, 0xd5,
	0xa0, 0x76, 0x8e, 0xf1, 0xb6, 0xf1, 0xa1, 0xd9, 0x6b, 0x87, 0xf7, 0x43, 0xbf, 0x87, 0x75, 0xa3,
	0x16, 0xb1, 0x78, 0x8a, 0x4f, 0x68, 0xc0, 0x0c, 0x36, 0x65, 0x7a, 0xfd, 0xaf, 0x32, 0x24, 0x4d,
	0xc6, 0xeb, 0x0e, 0x15, 0x4c, 0x8a, 0x94, 0xb2, 0xd2, 0x0a, 0xa6, 0x07, 0x50, 0xa4, 0xc7, 0xd0,
	0x88, 0xd2, 0xdb, 0xbb, 0xa4, 0x30, 0xa4, 0xac, 0xe8, 0x41, 0xa7, 0xa8, 0xb3, 0x40, 0x29, 0x76,
	0x6c, 0xf4, 0x08, 0x2a, 0xd1, 0x59, 0x92, 0x12, 0x87, 0xdd, 0x43, 0xbc, 0x77, 0x3a, 0xa8, 0x95,
	0x85, 0x48, 0xfd, 0x2e, 0x4e, 0x67, 0x52, 0x0e, 0x62, 0x0c, 0xb4, 0x0d, 0xc8, 0xec, 0x85, 0x2f,
	0xb0, 0x1b, 0x0a, 0x6b, 0xef, 0xf9, 0x6d, 0xea, 0x7c, 0xa5, 0xfa, 0xf9, 0xd3, 0x41, 0x6d, 0x69,
	0x33, 0x31, 0x7b, 0x60, 0x3c, 0x31, 0x96, 0x92, 0x04, 0x07, 0x7e, 0x9b, 0x98, 0x31, 0x7e, 0xd9,
	0x75, 0x7c, 0x0a, 0xe0, 0xbe, 0x29, 0x41, 0xf4, 0xd3, 0x3c, 0xb0, 0xeb, 0x14, 0x5e, 0xb5, 0xdc,
	0x83, 0xac, 0xc5, 0xdb, 0x92, 0x52, 0xfd, 0x83, 0xd3, 0x41, 0x2d, 0xcb, 0x6c, 0xeb, 0x3b, 0xc3,
	0xd2, 0x3e, 0xe0, 0x66, 0x46, 0xed, 0x8b, 0xd0, 0xa0, 0x1d, 0x5e, 0xd4, 0x65, 0x66, 0x2e, 0xea,
	0xea, 0xea, 0xab, 0x41, 0xad, 0xc2, 0x38, 0x3b, 0xae, 0x8d, 0x5f, 0xea, 0xbc, 0xcc, 0xbb, 0x0e,
	0x4b, 0x2c, 0x7e, 0xc8, 0x7d, 0x27, 0xb5, 0x7a, 0x63, 0x91, 0x4d, 0xc4, 0x8d, 0xe7, 0x75, 0x58,
	0x62, 0x11, 0x45, 0xc6, 0xad, 0x30, 0x5c, 0x36, 0x11, 0xe3, 0xba, 0xa4, 0xf2, 0x23, 0xe4, 0x34,
	0x68, 0x94, 0x37, 0xb4, 0xf4, 0xca, 0x8f, 0x60, 0xd4, 0xef, 0xbf, 0x1a, 0xd4, 0xee, 0x8e, 0x98,
	0x76, 0xc4, 0xeb, 0x81, 0x8f, 0x0f, 0xb1, 0x8f, 0x5d, 0x0b, 0x07, 0xf7, 0x77, 0x93, 0x22, 0xe9,
	0x06, 0x5f, 0x05, 0x7d, 0x0e, 0x17, 0x12, 0xb1, 0x4b, 0x92, 0x90, 0xd9, 0xc5, 0xe8, 0x01, 0x9c,
	0x97, 0x09, 0x62, 0xc9, 0xb7, 0xa1, 0x22, 0x4f, 0xf0, 0x74, 0x91, 0xea, 0xa0, 0x72, 0xa4, 0x33,
	0x12, 0x54, 0x72, 0x3e, 0xcf, 0x27, 0xcb, 0xe7, 0x0b, 0x50, 0x70, 0x82, 0x46, 0xc7, 0x71, 0x31,
	0xf3, 0x3e, 0x63, 0xce, 0x09, 0x76, 0x1d, 0x17, 0xa3, 0x55, 0xb9, 0xae, 0x2e, 0xb1, 0x04, 0x12,
	0x55, 0xd2, 0x3a, 0x54, 0xcc, 0xb8, 0x10, 0x61, 0xb7, 0x12, 0x45, 0x23, 0x01, 0x43, 0x4f, 0x01,
	0x58, 0x8d, 0x47, 0x43, 0xd7, 0x3c, 0xdd, 0xf6, 0x2d, 0xe2, 0x7b, 0xcf, 0x29, 0x94, 0x99, 0xd7,
	0x65, 0xe9, 0x0c, 0x84, 0x65, 0xc5, 0x54, 0xba, 0x51, 0x62, 0x03, 0x12, 0xc0, 0xe2, 0xea, 0x7d,
	0x71, 0xc6, 0xea, 0x5d, 0x7f, 0x95, 0x85, 0x3c, 0x85, 0xbc, 0x89, 0x79, 0xaf, 0x42, 0xa9, 0xe3,
	0x74, 0xb8, 0x57, 0xb3, 0x10, 0x5d, 0x24, 0x00, 0xea, 0xac, 0x1a, 0x14, 0x0f, 0x9d, 0x36, 0x96,
	0xfa, 0xab, 0x68, 0x3c, 0x12, 0xde, 0x73, 0xa3, 0xe1, 0xbd, 0x09, 0x8b, 0x52, 0x3a, 0xa5, 0x07,
	0x65, 0x53, 0x11, 0xef, 0x9d, 0x0e, 0x6a, 0x0b, 0x92, 0x7f, 0x32, 0x69, 0xaf, 0xa6, 0x9c, 0xd6,
	0x10, 0xbd, 0x6e, 0x2c, 0x48, 0x10, 0x72, 0x6e, 0x9f, 0x40, 0x3e, 0x08, 0x89, 0x12, 0x5b, 0xd4,
	0x3f, 0x6b, 0x63, 0x8f, 0x6d, 0x7d, 0x9f, 0xa0, 0x19, 0x0c, 0x5b, 0xff, 0x47, 0x05, 0xf2, 0x14,
	0x80, 0x54, 0xa8, 0xd0, 0x1f, 0xfc, 0xba, 0x44, 0x7d, 0x07, 0x55, 0x61, 0x99, 0x42, 0x9e, 0xe2,
	0x63, 0xec, 0x6f, 0x7b, 0x27, 0x2e, 0x31, 0x25, 0x6c, 0xab, 0x0a, 0xfa, 0x0e, 0x54, 0xe9, 0xcc,
	0x9e, 0xe9, 0x87, 0x0e, 0x89, 0xc9, 0xd2, 0x2c, 0xbd, 0x38, 0xa1, 0xb3, 0x12, 0x30, 0x1b, 0xb1,
	0xdf, 0x71, 0xb7, 0x4c, 0xeb, 0x05, 0x56, 0x73, 0x68, 0x05, 0x10, 0x87, 0x1c, 0x9b, 0x6d, 0xc7,
	0xde, 0xf2, 0xfb, 0xdd, 0x90, 0x94, 0xc0, 0x4b, 0x30, 0xcf, 0x98, 0xfb, 0xb8, 0x6b, 0xfa, 0xd8,
	0x56, 0xed, 0x08, 0xb4, 0x19, 0x86, 0x84, 0xd8, 0x56, 0xb1, 0xfe, 0x87, 0x79, 0x28, 0xf0, 0x4b,
	0x98, 0x33, 0xe6, 0xe5, 0xbb, 0xe3, 0xbd, 0x97, 0xe9, 0x7f, 0x46, 0x5f, 0xcd, 0x9e, 0xc9, 0x57,
	0x3f, 0x15, 0xfa, 0xca, 0x51, 0x7d, 0x5d, 0x19, 0x43, 0x4e, 0xf6, 0x97, 0xd0, 0xd8, 0x88, 0xbd,
	0xe5, 0xa7, 0x95, 0x13, 0xa5, 0x37, 0x28, 0x27, 0xae, 0x40, 0xc5, 0xf2, 0xb1, 0x19, 0x62, 0x9b,
	0x45, 0x08, 0x56, 0xc2, 0x95, 0x39, 0x8c, 0x06, 0x89, 0x44, 0x04, 0x29, 0x0e, 0x45, 0x90, 0x1f,
	0xcb, 0xe5, 0x61, 0x76, 0x5c, 0x48, 0xde, 0xa6, 0x28, 0xf5, 0x6b, 0xaf, 0x06, 0xb5, 0x2b, 0x23,
	0x21, 0x79, 0x24, 0xfa, 0x46, 0x15, 0xe6, 0x2a, 0x94, 0x48, 0x85, 0xc8, 0x56, 0x06, 0xb6, 0x32,
	0x01, 0x90, 0x95, 0x75, 0x4f, 0xd8, 0xf5, 0x68, 0x3f, 0xb7, 0xe3, 0x5a, 0x5e, 0xc7, 0x71, 0x5b,
	0xbc, 0x3e, 0x54, 0x15, 0xb4, 0x0a, 0x17, 0x9e, 0xf5, 0xc2, 0x96, 0x17, 0x03, 0x1f, 0xba, 0x5f,
	0xf7, 0x70, 0x8f, 0x9a, 0xf3, 0x05, 0x38, 0x37, 0x34, 0xb9, 0x8f, 0xdd, 0x50, 0xcd, 0xa2, 0x0a,
	0x14, 0x37, 0x2d, 0x0b, 0x77, 0x43, 0x6c, 0xab, 0x39, 0xfd, 0x2f, 0x8a, 0x50, 0x91, 0xf5, 0x7d,
	0x46, 0xab, 0xbc, 0x97, 0x48, 0xb3, 0xd7, 0xa6, 0x59, 0x95, 0x7c, 0x7b, 0xc2, 0x82, 0xbc, 0xd7,
	0xc5, 0x2e, 0xef, 0x48, 0xe6, 0x9c, 0xe0, 0x59, 0x17, 0xbb, 0xb3, 0x84, 0xa8, 0xa4, 0xc9, 0x2c,
	0xbd, 0x85, 0x0a, 0x34, 0x2f, 0x55, 0xa0, 0x57, 0xa0, 0xd2, 0x73, 0x7d, 0x6c, 0xda, 0x0d, 0x5a,
	0x84, 0xd1, 0x1c, 0x94, 0x37, 0xca, 0x0c, 0xb6, 0x45, 0x6b, 0xeb, 0x1a, 0x94, 0xdb, 0x66, 0x10,
	0x36, 0x7a, 0x5d, 0xc9, 0xd0, 0x80, 0x80, 0x0e, 0x28, 0x04, 0xdd, 0x88, 0xef, 0xbb, 0xa5, 0x63,
	0x2d, 0xd2, 0x55, 0xd4, 0xc4, 0x45, 0x39, 0x39, 0xc6, 0x4f, 0xa0, 0xc0, 0x61, 0xd4, 0xfe, 0xc7,
	0xdc, 0xc1, 0x8a, 0x5b, 0x5c, 0x81, 0x8b, 0xee, 0xc4, 0x8d, 0x0e, 0x8c, 0xb7, 0x57, 0x66, 0x92,
	0x71, 0x13, 0x74, 0x0f, 0x2e, 0x8a, 0xfa, 0x73, 0xb4, 0xae, 0x29, 0x53, 0x09, 0x57, 0x38, 0xc2,
	0x90, 0x35, 0xa3, 0x4f, 0xe0, 0x42, 0xdb, 0xb3, 0xcc, 0x76, 0x63, 0x5c, 0x91, 0xb3, 0x4c, 0xa7,
	0xb7, 0x87, 0x2a, 0x9d, 0x61, 0xbf, 0x9c, 0x1f, 0xf5, 0xcb, 0x26, 0x2c, 0x91, 0x42, 0xba, 0xdf,
	0xe0, 0x17, 0x27, 0x54, 0xb1, 0x0b, 0x54, 0xb1, 0x77, 0x4f, 0x07, 0xb5, 0x45, 0xf9, 0x36, 0x81,
	0xa9, 0xb7, 0x96, 0x50, 0xef, 0x08, 0xb1, 0x6e, 0x2c, 0xfa, 0x32, 0x8d, 0x63, 0xa3, 0x2f, 0x60,
	0x3e, 0x81, 0x56, 0x5d, 0xa4, 0x67, 0x9d, 0x9a, 0x7c, 0xa4, 0x34, 0x57, 0x57, 0x4f, 0x07, 0xb5,
	0xc4, 0x85, 0x90, 0x51, 0x91, 0x59, 0xa3, 0xdf, 0x55, 0x40, 0x1d, 0x69, 0x04, 0x55, 0xaa, 0x90,
	0x5b, 0x53, 0xe3, 0x6c, 0xb2, 0x39, 0xac, 0x7f, 0xf4, 0x6a, 0x50, 0xfb, 0x60, 0x24, 0xaa, 0x6c,
	0xa5, 0x85, 0x76, 0xbe, 0x43, 0xb9, 0xb5, 0x7c, 0x92, 0x7e, 0x2b, 0xb4, 0x08, 0x65, 0xde, 0x5b,
	0x90, 0x59, 0xf6, 0xf5, 0x80, 0x1b, 0x13, 0x05, 0xd0, 0x24, 0xb8, 0xdb, 0x6b, 0x87, 0x0e, 0x53,
	0x38, 0x05, 0x66, 0xf5, 0xbf, 0xcf, 0xc0, 0xea, 0x04, 0x59, 0xdf, 0xa4, 0x7e, 0x39, 0x6b, 0x36,
	0x4b, 0xad, 0xc5, 0xb3, 0xe9, 0xb5, 0xf8, 0xdb, 0xe9, 0x59, 0x6e, 0x02, 0x92, 0x75, 0x4b, 0x9a,
	0x22, 0xec, 0xf3, 0x70, 0xb1, 0x24, 0xcd, 0xec, 0xd3, 0x09, 0xfd, 0xb7, 0x72, 0x30, 0xc7, 0x0e,
	0xf1, 0xff, 0xaa, 0xff, 0x9e, 0x7b, 0x83, 0xe8, 0xb7, 0x3b, 0xad, 0x25, 0x18, 0x23, 0xef, 0x18,
	0xed, 0x9c, 0x83, 0x3c, 0xa9, 0xdb, 0x59, 0x69, 0x5e, 0x34, 0x72, 0x4e, 0xb0, 0x4b, 0xaf, 0x7c,
	0x9d, 0xa0, 0x41, 0x7d, 0xdd, 0x63, 0xad, 0x4e, 0xd1, 0x28, 0x39, 0xc1, 0x16, 0x03, 0x24, 0xd3,
	0x62, 0x21, 0x99, 0x16, 0xdf, 0x52, 0xa3, 0xd1, 0x8d, 0xd3, 0x7a, 0x7e, 0x6a, 0x5a, 0x4f, 0xef,
	0xb4, 0x86, 0x02, 0xa1, 0xdc, 0x6f, 0xa5, 0xe4, 0x7a, 0xfd, 0x37, 0x60, 0x8e, 0xb1, 0x3b, 0xa3,
	0x11, 0x7c, 0x2f, 0xcd, 0xcc, 0x33, 0x63, 0x9a, 0xb4, 0x61, 0xc3, 0xd7, 0xef, 0xc0, 0x22, 0xf7,
	0xee, 0x5d, 0xe9, 0x23, 0xdc, 0x94, 0x9b, 0x74, 0xfd, 0xaf, 0xe7, 0xa1, 0xbc, 0x1f, 0xfa, 0xd8,
	0xec, 0xd0, 0x0b, 0x67, 0xf4, 0x4b, 0x89, 0xcf, 0x22, 0xef, 0xa5, 0xde, 0xbe, 0xc4, 0xe8, 0xb3,
	0x7d, 0x17, 0x39, 0x0f, 0x73, 0x4e, 0xd0, 0x70, 0xf1, 0x09, 0x4f, 0xf9, 0x79, 0x27, 0x78, 0x8a,
	0x4f, 0xb4, 0x1f, 0xd3, 0xaf, 0x9c, 0x91, 0xc2, 0x58, 0x0a, 0xb5, 0x47, 0xb4, 0xaf, 0x9c, 0x45,
	0xfb, 0xda, 0x9d, 0x24, 0xf3, 0x6d, 0xdc, 0xc6, 0x84, 0xf9, 0xa5, 0x51, 0xc5, 0x48, 0x1a, 0xd0,
	0xbe, 0x04, 0x24, 0xa5, 0x00, 0x21, 0xd1, 0x26, 0x94, 0xa5, 0x46, 0x86, 0x0b, 0x34, 0x2d, 0x7f,
	0x18, 0x32, 0x8d, 0x76, 0x2b, 0xc1, 0x58, 0x48, 0x73, 0x51, 0x0e, 0xa5, 0x05, 0x1e, 0x4a, 0x69,
	0xa8, 0xd4, 0x1e, 0xc1, 0x02, 0xd7, 0xa6, 0x90, 0x42, 0xaa, 0x16, 0x94, 0xd9, 0xab, 0x05, 0xc2,
	0x88, 0x67, 0x01, 0x89, 0x11, 0x4f, 0xf4, 0x93, 0x18, 0x71, 0x22, 0x43, 0xe0, 0x6a, 0x5b, 0x30,
	0xcf, 0xfc, 0x41, 0xf0, 0xd9, 0x88, 0x6e, 0x32, 0x94, 0x69, 0x37, 0x19, 0xe2, 0x36, 0x82, 0x30,
	0x61, 0x2e, 0x22, 0x31, 0x61, 0xee, 0x33, 0x89, 0x09, 0x23, 0x31, 0x38, 0xa6, 0x56, 0x86, 0xd2,
	0x13, 0x87, 0x94, 0xbf, 0x36, 0xb6, 0xb5, 0xcf, 0xa0, 0x42, 0x5b, 0x46, 0xc1, 0xf0, 0x16, 0xe4,
	0x69, 0xcb, 0xcd, 0xf9, 0x4d, 0x68, 0xcd, 0x19, 0x9e, 0xf6, 0x3b, 0x79, 0x28, 0x3e, 0xf5, 0x42,
	0xe7, 0xd0, 0xa1, 0xaa, 0x96, 0xcd, 0xff, 0xe6, 0x34, 0xf3, 0x17, 0x74, 0xb2, 0x1f, 0x2c, 0x43,
	0x3e, 0x74, 0xc2, 0xb6, 0x68, 0xc2, 0xd9, 0x20, 0xfa, 0x5c, 0x97, 0x8b, 0x3f, 0xd7, 0x8d, 0xbf,
	0x0a, 0xd1, 0x0a, 0x90, 0xaf, 0x9b, 0x81, 0x63, 0x69, 0xff, 0xa6, 0xc0, 0x22, 0xbf, 0xae, 0x32,
	0xb0, 0x85, 0x9d, 0xe3, 0xb7, 0x62, 0x8e, 0x23, 0x3e, 0x96, 0x39, 0x53, 0x84, 0x95, 0x2c, 0x32,
	0xfb, 0x1a, 0x16, 0xf9, 0x18, 0x50, 0xf2, 0x65, 0x02, 0x69, 0x55, 0xce, 0xca, 0xec, 0x19, 0xac,
	0x24, 0x99, 0x45, 0xc7, 0x74, 0x36, 0x86, 0xfa, 0x09, 0x2f, 0xa6, 0xca, 0x50, 0x88, 0x6f, 0x19,
	0xe6, 0xa1, 0x44, 0x2f, 0x0b, 0x89, 0x4e, 0x54, 0x25, 0xfa, 0xaa, 0x95, 0x54, 0x8c, 0x9a, 0x41,
	0x1a, 0xac, 0x90, 0x89, 0xd1, 0xed, 0xa9, 0x59, 0x74, 0x19, 0xb4, 0xd1, 0xb9, 0x88, 0x36, 0xa7,
	0xff, 0x79, 0x26, 0xbd, 0x8c, 0x5b, 0x82, 0x79, 0x02, 0x8e, 0x2c, 0x9e, 0xb5, 0x82, 0x9c, 0xd5,
	0x70, 0xf4, 0x54, 0x33, 0x69, 0x93, 0x3c, 0xde, 0xa8, 0x59, 0x21, 0xe0, 0x68, 0x90, 0x53, 0x73,
	0x29, 0x73, 0x82, 0x2e, 0x8f, 0x56, 0x00, 0x49, 0xc2, 0x0b, 0x9a, 0x39, 0x01, 0x4f, 0x46, 0x18,
	0xb5, 0x80, 0xce, 0xc3, 0x12, 0x3b, 0x21, 0x29, 0x60, 0xa8, 0x45, 0x01, 0x4e, 0x84, 0x00, 0xb5,
	0x84, 0x54, 0xa8, 0x10, 0xb0, 0xf0, 0x26, 0x15, 0xc4, 0xd7, 0x44, 0xd9, 0xb3, 0xd5, 0xb2, 0xfe,
	0xa7, 0x0a, 0x35, 0x9d, 0x68, 0x5f, 0xcc, 0x15, 0xb5, 0x8f, 0x13, 0x4f, 0xe6, 0xe2, 0xc8, 0x96,
	0x33, 0xd8, 0x80, 0x38, 0x5f, 0x57, 0x3c, 0xd3, 0xc8, 0x19, 0xf4, 0xb7, 0xb6, 0x2b, 0x3e, 0x11,
	0xbe, 0x95, 0x7c, 0x33, 0x22, 0x1a, 0x2d, 0x74, 0xb0, 0xf6, 0x55, 0x2c, 0xda, 0x4c, 0x9f, 0xb5,
	0x45, 0xfb, 0x18, 0x34, 0x42, 0xaf, 0xe1, 0xd0, 0xc7, 0x3f, 0xfc, 0x13, 0x9f, 0x68, 0x1f, 0x83,
	0xe7, 0x1e, 0x7b, 0x14, 0xa4, 0xbd, 0x2f, 0x76, 0x30, 0x39, 0xa9, 0xe9, 0x5f, 0x02, 0x70, 0xfd,
	0x3c, 0xc2, 0xa1, 0xfc, 0x99, 0xf4, 0x97, 0x05, 0x83, 0xb3, 0x65, 0x04, 0xfd, 0x37, 0x15, 0x28,
	0xd3, 0x38, 0xf8, 0x26, 0x7a, 0x90, 0x84, 0x48, 0x7c, 0x20, 0xaf, 0x4d, 0x89, 0xbd, 0xe2, 0x9b,
	0xf8, 0x37, 0x0a, 0xcc, 0x27, 0xcc, 0x4f, 0x3b, 0x7e, 0xad, 0x33, 0xff, 0x3c, 0xe5, 0x29, 0xc1,
	0x99, 0xca, 0xea, 0xf8, 0x73, 0xdc, 0x8f, 0xa2, 0xdc, 0x2d, 0x4e, 0xfa, 0x6d, 0x7d, 0xe8, 0xab,
	0xc3, 0x7c, 0xfc, 0x62, 0x0e, 0x77, 0x43, 0x6d, 0x2d, 0x66, 0x3c, 0xa5, 0xb4, 0x89, 0x78, 0xfc,
	0x8b, 0x02, 0x45, 0xe1, 0xe3, 0xda, 0x3f, 0x48, 0x6f, 0xc2, 0x7e, 0x01, 0x2f, 0x62, 0xee, 0x4e,
	0xe9, 0x34, 0xc6, 0xb5, 0x14, 0x97, 0x00, 0x68, 0x72, 0x26, 0x67, 0xcc, 0x9e, 0xc8, 0x94, 0x8c,
	0x12, 0x85, 0x6c, 0x39, 0x76, 0x90, 0x78, 0x5f, 0x55, 0x33, 0x92, 0xdd, 0x18, 0x29, 0x14, 0x70,
	0xcb, 0x09, 0x42, 0xcc, 0x1e, 0x52, 0x68, 0x4e, 0xe2, 0xb9, 0x55, 0xf4, 0x55, 0x4d, 0x7a, 0xb5,
	0xce, 0xbf, 0xaa, 0xc5, 0x1f, 0xd0, 0xce, 0xd8, 0xa7, 0xc6, 0x72, 0x7d, 0x0e, 0xd5, 0x84, 0x58,
	0xe1, 0x66, 0x2f, 0xf4, 0x1e, 0xba, 0x66, 0xb3, 0x8d, 0xb5, 0xab, 0xb1, 0x3c, 0x55, 0x28, 0x60,
	0x0a, 0xb4, 0xf9, 0x13, 0x5f, 0x31, 0x8c, 0x39, 0xb5, 0xa0, 0x5c, 0x37, 0x5d, 0x17, 0xfb, 0x3f,
	0xec, 0x79, 0x21, 0xd6, 0xae, 0xc4, 0xc4, 0x2b, 0x30, 0xe7, 0x9b, 0xae, 0xed, 0x75, 0x38, 0x2d,
	0x1f, 0x69, 0x9f, 0x08, 0x87, 0x5a, 0x86, 0xfc, 0xd7, 0x84, 0x88, 0xdb, 0x02, 0x1b, 0x10, 0x32,
	0xd2, 0xee, 0x7a, 0xbe, 0x78, 0xfd, 0xc2, 0x46, 0xfa, 0xf7, 0xa1, 0xfc, 0x88, 0xbd, 0xf2, 0x20,
	0x9e, 0x22, 0x87, 0x89, 0xab, 0x82, 0xa1, 0x06, 0xc5, 0x1e, 0x9f, 0xe7, 0x3c, 0xa3, 0xb1, 0xbe,
	0x4b, 0x0a, 0x5c, 0xf6, 0x92, 0xf9, 0xe1, 0xcb, 0xae, 0xe7, 0x87, 0xdb, 0x66, 0x68, 0xca, 0x5c,
	0x6e, 0x08, 0x2e, 0x57, 0x61, 0x1e, 0x53, 0x0c, 0x76, 0x2f, 0x64, 0xf2, 0x67, 0x66, 0x15, 0x01,
	0x24, 0x84, 0xfa, 0xef, 0x65, 0x00, 0x3d, 0xa1, 0x97, 0x4a, 0x66, 0x68, 0x36, 0xcd, 0x00, 0xb3,
	0x7b, 0xd2, 0xc9, 0x36, 0x3e, 0x4b, 0x17, 0x7d, 0x0d, 0x16, 0xe2, 0xaf, 0xbf, 0x87, 0x6d, 0xb3,
	0xc5, 0x7b, 0x92, 0xf9, 0x08, 0xfa, 0x83, 0xb6, 0xd9, 0x42, 0x87, 0x70, 0x91, 0x5d, 0x79, 0x25,
	0xde, 0x21, 0x34, 0xc4, 0x6d, 0x38, 0x69, 0x27, 0xaf, 0xa7, 0x39, 0x08, 0x95, 0x39, 0x99, 0xa2,
	0xcc, 0x10, 0x1b, 0xec, 0xfe, 0x4c, 0x86, 0x07, 0xfb, 0xe2, 0xa2, 0x5c, 0xdc, 0xca, 0x49, 0x17,
	0x92, 0x65, 0x0e, 0x7b, 0xe2, 0xb8, 0x47, 0xfa, 0xdf, 0x29, 0xb0, 0x92, 0xce, 0x76, 0x86, 0xe3,
	0x48, 0xdc, 0x68, 0x66, 0x46, 0x6f, 0x34, 0xc7, 0x5e, 0xc7, 0x8a, 0x2b, 0xde, 0xdc, 0x6b, 0x5f,
	0xf1, 0xea, 0x3f, 0x57, 0x78, 0x49, 0xce, 0x3f, 0x8e, 0x68, 0xbf, 0x9e, 0xc8, 0x0b, 0xcd, 0xb6,
	0x67, 0xf1, 0xd7, 0x8e, 0x06, 0x1b, 0xa0, 0x9b, 0x90, 0xa3, 0xb7, 0x67, 0x99, 0x69, 0x25, 0x3b,
	0x45, 0x43, 0x2a, 0x64, 0x7b, 0xbe, 0xc3, 0x23, 0x08, 0xf9, 0xa9, 0x5d, 0x14, 0xc6, 0xa5, 0x4a,
	0x1d, 0x15, 0x6d, 0xa4, 0xf4, 0x9f, 0x92, 0xb6, 0x85, 0xd0, 0xe2, 0xd0, 0x77, 0xf0, 0x31, 0xd6,
	0x56, 0x63, 0x69, 0x46, 0xb0, 0xb5, 0x27, 0x92, 0xf3, 0xbc, 0xb1, 0xa0, 0x1b, 0xff, 0x74, 0x11,
	0xd4, 0xe8, 0xd1, 0x0f, 0x0f, 0x4e, 0xe8, 0xb7, 0x95, 0xf1, 0x7f, 0x12, 0x82, 0xee, 0xa4, 0x97,
	0xf1, 0xe9, 0xd8, 0xeb, 0xc2, 0xb7, 0x36, 0x5e, 0x93, 0x8a, 0x6c, 0xb0, 0x97, 0xfa, 0x17, 0x18,
	0x28, 0xf5, 0xea, 0x32, 0x05, 0x31, 0x5a, 0xfb, 0xe6, 0xec, 0x04, 0x64, 0xd9, 0x9f, 0x29, 0x63,
	0xff, 0xf4, 0x01, 0x7d, 0x3c, 0xa6, 0xf7, 0x4b, 0x43, 0x8e, 0xd6, 0xbf, 0xfd, 0x7a, 0x44, 0x44,
	0x06, 0x6b, 0xe8, 0x8f, 0x22, 0xd0, 0x87, 0x69, 0x3c, 0x12, 0x28, 0xd1, 0x72, 0x1f, 0xcc, 0x82,
	0x4a, 0x16, 0xf1, 0xd3, 0xde, 0x60, 0xa3, 0xf5, 0xf4, 0xe7, 0x2c, 0xc3, 0x78, 0xd1, 0x72, 0x37,
	0x66, 0xc6, 0x27, 0x6b, 0xfe, 0x6a, 0xe2, 0x4d, 0x33, 0xfa, 0x60, 0x1c, 0x71, 0xfc, 0x4a, 0x98,
	0xad, 0x72, 0x6d, 0x3a, 0x22, 0x61, 0xdf, 0x1e, 0x7d, 0xcc, 0x8c, 0xc6, 0x0a, 0x28, 0x63, 0x45,
	0x0b, 0x5d, 0x9f, 0x11, 0x9b, 0xac, 0xf6, 0xc3, 0xe8, 0x55, 0x38, 0xba, 0x3a, 0x8e, 0x6c, 0xd3,
	0x8a, 0x35, 0x73, 0x65, 0x32, 0x12, 0x61, 0xf9, 0x95, 0xfc, 0x60, 0x10, 0xbd, 0x3f, 0xe5, 0xa1,
	0x9b, 0x60, 0xfc, 0xde, 0x54, 0x3c, 0xc2, 0xfb, 0x8b, 0xf8, 0xef, 0xdb, 0x50, 0x2a, 0x85, 0x98,
	0x8d, 0xf8, 0xea, 0x53, 0xb0, 0xba, 0xed, 0xfe, 0x77, 0x15, 0xf4, 0x93, 0xe1, 0x3f, 0x5a, 0x43,
	0xd7, 0xc7, 0xd1, 0xc5, 0x38, 0xd1, 0x1a, 0x6b, 0x33, 0xe1, 0x76, 0xdb, 0xfd, 0x35, 0xe5, 0xbb,
	0x0a, 0x0a, 0xd3, 0xda, 0xab, 0x74, 0x9b, 0x1d, 0xc5, 0x9b, 0x6c, 0xb3, 0xa9, 0xf8, 0x6c, 0x87,
	0x8d, 0x44, 0x17, 0x91, 0x6e, 0xb5, 0x12, 0xc2, 0x64, 0xab, 0x4d, 0x22, 0xb2, 0x05, 0xfc, 0xb4,
	0xd6, 0x6c, 0xfa, 0xb6, 0x18, 0xde, 0xec, 0xdb, 0x8a, 0xf0, 0xb9, 0xaf, 0x0c, 0x3f, 0xf7, 0x43,
	0x53, 0x39, 0x10, 0xac, 0xc9, 0xbe, 0x92, 0x82, 0xcd, 0x0d, 0x3b, 0x6e, 0xf1, 0xd2, 0x0d, 0x3b,
	0x9e, 0x9f, 0x6c, 0xd8, 0x09, 0x3c, 0x1e, 0x2d, 0x13, 0xfd, 0x55, 0x7a, 0xb4, 0x4c, 0xa0, 0x4c,
	0x8e, 0x96, 0xc3, 0xa8, 0x64, 0x91, 0xc3, 0xe1, 0x96, 0x09, 0x5d, 0x9f, 0x74, 0x5b, 0x33, 0x14,
	0x25, 0xd7, 0x66, 0xc2, 0xe5, 0x9b, 0x49, 0x34, 0x50, 0xe9, 0x9b, 0x49, 0xa0, 0x4c, 0xde, 0xcc,
	0x30, 0x2a, 0x59, 0xe4, 0x79, 0xdc, 0x60, 0xa5, 0x87, 0x02, 0x31, 0x3b, 0x39, 0x14, 0x48, 0x58,
	0x29, 0x16, 0x45, 0xab, 0xb4, 0xa9, 0x16, 0x45, 0xb0, 0x66, 0xb7, 0x28, 0x8e, 0x4d, 0x56, 0xf3,
	0x52, 0xfe, 0x00, 0x18, 0xdd, 0x9c, 0xea, 0x02, 0x04, 0x2d, 0x5a, 0xef, 0xa3, 0x59, 0xd1, 0xf9,
	0x82, 0xbc, 0x42, 0x0a, 0x68, 0x3f, 0xf6, 0xc4, 0x09, 0x42, 0x94, 0xf6, 0x4a, 0x7e, 0x04, 0x6b,
	0x64, 0x7f, 0xd3, 0xb0, 0x59, 0x54, 0xf8, 0xb3, 0xe9, 0xbd, 0x23, 0x7a, 0x30, 0xee, 0xc5, 0xff,
	0x04, 0xa2, 0x48, 0x9c, 0x7b, 0x67, 0x23, 0x26, 0x87, 0x41, 0x6a, 0xc4, 0x71, 0x0d, 0x64, 0x7a,
	0x8d, 0x38, 0x0e, 0x7b, 0x72, 0x8d, 0x38, 0x81, 0x8a, 0xd7, 0x13, 0x52, 0xf3, 0x99, 0x1e, 0x99,
	0x25, 0x84, 0xc9, 0x91, 0x39, 0x89, 0xc8, 0xd9, 0x4b, 0x2d, 0x67, 0x3a, 0x7b, 0x09, 0x61, 0x32,
	0xfb, 0x24, 0x22, 0x61, 0x1f, 0xa6, 0xb5, 0xa4, 0xe9, 0x61, 0x7f, 0x14, 0x6f, 0x72, 0xd8, 0x4f,
	0xc5, 0x67, 0x66, 0xd5, 0x4c, 0x36, 0x3f, 0x68, 0x6d, 0x6c, 0x93, 0xc0, 0x31, 0xa2, 0x95, 0xde,
	0x9f, 0x01, 0x93, 0x66, 0x6a, 0x84, 0x87, 0x7a, 0x9a, 0xf4, 0x28, 0x96, 0x40, 0x99, 0x1c, 0xc5,
	0x86, 0x51, 0xe9, 0x56, 0xea, 0x77, 0xbe, 0xf9, 0xf6, 0xf2, 0x3b, 0xff, 0xfa, 0xed, 0xe5, 0x77,
	0xfe, 0xe3, 0xdb, 0xcb, 0xef, 0x7c, 0xf5, 0x3e, 0xa3, 0x0b, 0xb1, 0xf5, 0xe2, 0x16, 0xfd, 0x79,
	0xab, 0xe5, 0xdd, 0xea, 0x1e, 0xb5, 0x6e, 0x25, 0xff, 0x3f, 0x83, 0xe6, 0x1c, 0x75, 0xbf, 0x8f,
	0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xd9, 0xbf, 0x85, 0xe8, 0x40, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConn
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessengerServiceClient is the client API for MessengerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessengerServiceClient interface {
	// InstanceShareableBertyID returns a Berty ID that can be shared as a string, QR code or deep link.
	InstanceShareableBertyID(ctx context.Context, in *InstanceShareableBertyID_Request, opts ...grpc.CallOption) (*InstanceShareableBertyID_Reply, error)
	// ShareableBertyGroup returns a Berty Group that can be shared as a string, QR code or deep link.
	ShareableBertyGroup(ctx context.Context, in *ShareableBertyGroup_Request, opts ...grpc.CallOption) (*ShareableBertyGroup_Reply, error)
	// DevShareInstanceBertyID shares your Berty ID on a dev channel.
	// TODO: remove for public.
	DevShareInstanceBertyID(ctx context.Context, in *DevShareInstanceBertyID_Request, opts ...grpc.CallOption) (*DevShareInstanceBertyID_Reply, error)
	// ParseDeepLink parses a link in the form of berty://xxx or https://berty.tech/id# and returns a structure
	// that can be used to display information.
	// This action is read-only.
	ParseDeepLink(ctx context.Context, in *ParseDeepLink_Request, opts ...grpc.CallOption) (*ParseDeepLink_Reply, error)
	// SendContactRequest takes the payload received from ParseDeepLink and send a contact request using the Berty Protocol.
	SendContactRequest(ctx context.Context, in *SendContactRequest_Request, opts ...grpc.CallOption) (*SendContactRequest_Reply, error)
	// SendMessage sends a message to a group.
	SendMessage(ctx context.Context, in *SendMessage_Request, opts ...grpc.CallOption) (*SendMessage_Reply, error)
	// SendReplyOptions sends a list of prefilled response options to a group.
	SendReplyOptions(ctx context.Context, in *SendReplyOptions_Request, opts ...grpc.CallOption) (*SendReplyOptions_Reply, error)
	// SendAck sends an acknowledge payload for given message id.
	SendAck(ctx context.Context, in *SendAck_Request, opts ...grpc.CallOption) (*SendAck_Reply, error)
	// SystemInfo returns runtime information.
	SystemInfo(ctx context.Context, in *SystemInfo_Request, opts ...grpc.CallOption) (*SystemInfo_Reply, error)
	// Use to test stream.
	EchoTest(ctx context.Context, in *EchoTest_Request, opts ...grpc.CallOption) (MessengerService_EchoTestClient, error)
	// Use to test duplex stream.
	EchoDuplexTest(ctx context.Context, opts ...grpc.CallOption) (MessengerService_EchoDuplexTestClient, error)
	ConversationStream(ctx context.Context, in *ConversationStream_Request, opts ...grpc.CallOption) (MessengerService_ConversationStreamClient, error)
	EventStream(ctx context.Context, in *EventStream_Request, opts ...grpc.CallOption) (MessengerService_EventStreamClient, error)
	ConversationCreate(ctx context.Context, in *ConversationCreate_Request, opts ...grpc.CallOption) (*ConversationCreate_Reply, error)
	ConversationJoin(ctx context.Context, in *ConversationJoin_Request, opts ...grpc.CallOption) (*ConversationJoin_Reply, error)
	AccountGet(ctx context.Context, in *AccountGet_Request, opts ...grpc.CallOption) (*AccountGet_Reply, error)
	AccountUpdate(ctx context.Context, in *AccountUpdate_Request, opts ...grpc.CallOption) (*AccountUpdate_Reply, error)
	ContactRequest(ctx context.Context, in *ContactRequest_Request, opts ...grpc.CallOption) (*ContactRequest_Reply, error)
	ContactAccept(ctx context.Context, in *ContactAccept_Request, opts ...grpc.CallOption) (*ContactAccept_Reply, error)
	Interact(ctx context.Context, in *Interact_Request, opts ...grpc.CallOption) (*Interact_Reply, error)
	ConversationOpen(ctx context.Context, in *ConversationOpen_Request, opts ...grpc.CallOption) (*ConversationOpen_Reply, error)
	ConversationClose(ctx context.Context, in *ConversationClose_Request, opts ...grpc.CallOption) (*ConversationClose_Reply, error)
	// ServicesTokenList Retrieves the list of service server tokens
	ServicesTokenList(ctx context.Context, in *protocoltypes.ServicesTokenList_Request, opts ...grpc.CallOption) (MessengerService_ServicesTokenListClient, error)
	// ReplicationServiceRegisterGroup Asks a replication service to distribute a group contents
	ReplicationServiceRegisterGroup(ctx context.Context, in *ReplicationServiceRegisterGroup_Request, opts ...grpc.CallOption) (*ReplicationServiceRegisterGroup_Reply, error)
	// ReplicationSetAutoEnable Sets whether new groups should be replicated automatically or not
	ReplicationSetAutoEnable(ctx context.Context, in *ReplicationSetAutoEnable_Request, opts ...grpc.CallOption) (*ReplicationSetAutoEnable_Reply, error)
	// BannerQuote returns the quote of the day.
	BannerQuote(ctx context.Context, in *BannerQuote_Request, opts ...grpc.CallOption) (*BannerQuote_Reply, error)
	// GetUsername returns the name of the device/user using Android/iOS/universal API
	GetUsername(ctx context.Context, in *GetUsername_Request, opts ...grpc.CallOption) (*GetUsername_Reply, error)
	// InstanceExportData exports instance data
	InstanceExportData(ctx context.Context, in *InstanceExportData_Request, opts ...grpc.CallOption) (MessengerService_InstanceExportDataClient, error)
	// MediaPrepare allows to upload a file and returns a cid to attach to messages
	MediaPrepare(ctx context.Context, opts ...grpc.CallOption) (MessengerService_MediaPrepareClient, error)
	// MediaRetrieve allows to download a file attached to a message
	MediaRetrieve(ctx context.Context, in *MediaRetrieve_Request, opts ...grpc.CallOption) (MessengerService_MediaRetrieveClient, error)
}

type messengerServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessengerServiceClient(cc *grpc.ClientConn) MessengerServiceClient {
	return &messengerServiceClient{cc}
}

func (c *messengerServiceClient) InstanceShareableBertyID(ctx context.Context, in *InstanceShareableBertyID_Request, opts ...grpc.CallOption) (*InstanceShareableBertyID_Reply, error) {
	out := new(InstanceShareableBertyID_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/InstanceShareableBertyID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ShareableBertyGroup(ctx context.Context, in *ShareableBertyGroup_Request, opts ...grpc.CallOption) (*ShareableBertyGroup_Reply, error) {
	out := new(ShareableBertyGroup_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ShareableBertyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) DevShareInstanceBertyID(ctx context.Context, in *DevShareInstanceBertyID_Request, opts ...grpc.CallOption) (*DevShareInstanceBertyID_Reply, error) {
	out := new(DevShareInstanceBertyID_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/DevShareInstanceBertyID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ParseDeepLink(ctx context.Context, in *ParseDeepLink_Request, opts ...grpc.CallOption) (*ParseDeepLink_Reply, error) {
	out := new(ParseDeepLink_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ParseDeepLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) SendContactRequest(ctx context.Context, in *SendContactRequest_Request, opts ...grpc.CallOption) (*SendContactRequest_Reply, error) {
	out := new(SendContactRequest_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/SendContactRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) SendMessage(ctx context.Context, in *SendMessage_Request, opts ...grpc.CallOption) (*SendMessage_Reply, error) {
	out := new(SendMessage_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) SendReplyOptions(ctx context.Context, in *SendReplyOptions_Request, opts ...grpc.CallOption) (*SendReplyOptions_Reply, error) {
	out := new(SendReplyOptions_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/SendReplyOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) SendAck(ctx context.Context, in *SendAck_Request, opts ...grpc.CallOption) (*SendAck_Reply, error) {
	out := new(SendAck_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/SendAck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) SystemInfo(ctx context.Context, in *SystemInfo_Request, opts ...grpc.CallOption) (*SystemInfo_Reply, error) {
	out := new(SystemInfo_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/SystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) EchoTest(ctx context.Context, in *EchoTest_Request, opts ...grpc.CallOption) (MessengerService_EchoTestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[0], "/berty.messenger.v1.MessengerService/EchoTest", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceEchoTestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_EchoTestClient interface {
	Recv() (*EchoTest_Reply, error)
	grpc.ClientStream
}

type messengerServiceEchoTestClient struct {
	grpc.ClientStream
}

func (x *messengerServiceEchoTestClient) Recv() (*EchoTest_Reply, error) {
	m := new(EchoTest_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) EchoDuplexTest(ctx context.Context, opts ...grpc.CallOption) (MessengerService_EchoDuplexTestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[1], "/berty.messenger.v1.MessengerService/EchoDuplexTest", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceEchoDuplexTestClient{stream}
	return x, nil
}

type MessengerService_EchoDuplexTestClient interface {
	Send(*EchoDuplexTest_Request) error
	Recv() (*EchoDuplexTest_Reply, error)
	grpc.ClientStream
}

type messengerServiceEchoDuplexTestClient struct {
	grpc.ClientStream
}

func (x *messengerServiceEchoDuplexTestClient) Send(m *EchoDuplexTest_Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messengerServiceEchoDuplexTestClient) Recv() (*EchoDuplexTest_Reply, error) {
	m := new(EchoDuplexTest_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) ConversationStream(ctx context.Context, in *ConversationStream_Request, opts ...grpc.CallOption) (MessengerService_ConversationStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[2], "/berty.messenger.v1.MessengerService/ConversationStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceConversationStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_ConversationStreamClient interface {
	Recv() (*ConversationStream_Reply, error)
	grpc.ClientStream
}

type messengerServiceConversationStreamClient struct {
	grpc.ClientStream
}

func (x *messengerServiceConversationStreamClient) Recv() (*ConversationStream_Reply, error) {
	m := new(ConversationStream_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) EventStream(ctx context.Context, in *EventStream_Request, opts ...grpc.CallOption) (MessengerService_EventStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[3], "/berty.messenger.v1.MessengerService/EventStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceEventStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_EventStreamClient interface {
	Recv() (*EventStream_Reply, error)
	grpc.ClientStream
}

type messengerServiceEventStreamClient struct {
	grpc.ClientStream
}

func (x *messengerServiceEventStreamClient) Recv() (*EventStream_Reply, error) {
	m := new(EventStream_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) ConversationCreate(ctx context.Context, in *ConversationCreate_Request, opts ...grpc.CallOption) (*ConversationCreate_Reply, error) {
	out := new(ConversationCreate_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ConversationCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ConversationJoin(ctx context.Context, in *ConversationJoin_Request, opts ...grpc.CallOption) (*ConversationJoin_Reply, error) {
	out := new(ConversationJoin_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ConversationJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) AccountGet(ctx context.Context, in *AccountGet_Request, opts ...grpc.CallOption) (*AccountGet_Reply, error) {
	out := new(AccountGet_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/AccountGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) AccountUpdate(ctx context.Context, in *AccountUpdate_Request, opts ...grpc.CallOption) (*AccountUpdate_Reply, error) {
	out := new(AccountUpdate_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/AccountUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ContactRequest(ctx context.Context, in *ContactRequest_Request, opts ...grpc.CallOption) (*ContactRequest_Reply, error) {
	out := new(ContactRequest_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ContactRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ContactAccept(ctx context.Context, in *ContactAccept_Request, opts ...grpc.CallOption) (*ContactAccept_Reply, error) {
	out := new(ContactAccept_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ContactAccept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) Interact(ctx context.Context, in *Interact_Request, opts ...grpc.CallOption) (*Interact_Reply, error) {
	out := new(Interact_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/Interact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ConversationOpen(ctx context.Context, in *ConversationOpen_Request, opts ...grpc.CallOption) (*ConversationOpen_Reply, error) {
	out := new(ConversationOpen_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ConversationOpen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ConversationClose(ctx context.Context, in *ConversationClose_Request, opts ...grpc.CallOption) (*ConversationClose_Reply, error) {
	out := new(ConversationClose_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ConversationClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ServicesTokenList(ctx context.Context, in *protocoltypes.ServicesTokenList_Request, opts ...grpc.CallOption) (MessengerService_ServicesTokenListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[4], "/berty.messenger.v1.MessengerService/ServicesTokenList", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceServicesTokenListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_ServicesTokenListClient interface {
	Recv() (*protocoltypes.ServicesTokenList_Reply, error)
	grpc.ClientStream
}

type messengerServiceServicesTokenListClient struct {
	grpc.ClientStream
}

func (x *messengerServiceServicesTokenListClient) Recv() (*protocoltypes.ServicesTokenList_Reply, error) {
	m := new(protocoltypes.ServicesTokenList_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) ReplicationServiceRegisterGroup(ctx context.Context, in *ReplicationServiceRegisterGroup_Request, opts ...grpc.CallOption) (*ReplicationServiceRegisterGroup_Reply, error) {
	out := new(ReplicationServiceRegisterGroup_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ReplicationServiceRegisterGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) ReplicationSetAutoEnable(ctx context.Context, in *ReplicationSetAutoEnable_Request, opts ...grpc.CallOption) (*ReplicationSetAutoEnable_Reply, error) {
	out := new(ReplicationSetAutoEnable_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/ReplicationSetAutoEnable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) BannerQuote(ctx context.Context, in *BannerQuote_Request, opts ...grpc.CallOption) (*BannerQuote_Reply, error) {
	out := new(BannerQuote_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/BannerQuote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) GetUsername(ctx context.Context, in *GetUsername_Request, opts ...grpc.CallOption) (*GetUsername_Reply, error) {
	out := new(GetUsername_Reply)
	err := c.cc.Invoke(ctx, "/berty.messenger.v1.MessengerService/GetUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messengerServiceClient) InstanceExportData(ctx context.Context, in *InstanceExportData_Request, opts ...grpc.CallOption) (MessengerService_InstanceExportDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[5], "/berty.messenger.v1.MessengerService/InstanceExportData", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceInstanceExportDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_InstanceExportDataClient interface {
	Recv() (*InstanceExportData_Reply, error)
	grpc.ClientStream
}

type messengerServiceInstanceExportDataClient struct {
	grpc.ClientStream
}

func (x *messengerServiceInstanceExportDataClient) Recv() (*InstanceExportData_Reply, error) {
	m := new(InstanceExportData_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) MediaPrepare(ctx context.Context, opts ...grpc.CallOption) (MessengerService_MediaPrepareClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[6], "/berty.messenger.v1.MessengerService/MediaPrepare", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceMediaPrepareClient{stream}
	return x, nil
}

type MessengerService_MediaPrepareClient interface {
	Send(*MediaPrepare_Request) error
	CloseAndRecv() (*MediaPrepare_Reply, error)
	grpc.ClientStream
}

type messengerServiceMediaPrepareClient struct {
	grpc.ClientStream
}

func (x *messengerServiceMediaPrepareClient) Send(m *MediaPrepare_Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messengerServiceMediaPrepareClient) CloseAndRecv() (*MediaPrepare_Reply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(MediaPrepare_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messengerServiceClient) MediaRetrieve(ctx context.Context, in *MediaRetrieve_Request, opts ...grpc.CallOption) (MessengerService_MediaRetrieveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessengerService_serviceDesc.Streams[7], "/berty.messenger.v1.MessengerService/MediaRetrieve", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerServiceMediaRetrieveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessengerService_MediaRetrieveClient interface {
	Recv() (*MediaRetrieve_Reply, error)
	grpc.ClientStream
}

type messengerServiceMediaRetrieveClient struct {
	grpc.ClientStream
}

func (x *messengerServiceMediaRetrieveClient) Recv() (*MediaRetrieve_Reply, error) {
	m := new(MediaRetrieve_Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessengerServiceServer is the server API for MessengerService service.
type MessengerServiceServer interface {
	// InstanceShareableBertyID returns a Berty ID that can be shared as a string, QR code or deep link.
	InstanceShareableBertyID(context.Context, *InstanceShareableBertyID_Request) (*InstanceShareableBertyID_Reply, error)
	// ShareableBertyGroup returns a Berty Group that can be shared as a string, QR code or deep link.
	ShareableBertyGroup(context.Context, *ShareableBertyGroup_Request) (*ShareableBertyGroup_Reply, error)
	// DevShareInstanceBertyID shares your Berty ID on a dev channel.
	// TODO: remove for public.
	DevShareInstanceBertyID(context.Context, *DevShareInstanceBertyID_Request) (*DevShareInstanceBertyID_Reply, error)
	// ParseDeepLink parses a link in the form of berty://xxx or https://berty.tech/id# and returns a structure
	// that can be used to display information.
	// This action is read-only.
	ParseDeepLink(context.Context, *ParseDeepLink_Request) (*ParseDeepLink_Reply, error)
	// SendContactRequest takes the payload received from ParseDeepLink and send a contact request using the Berty Protocol.
	SendContactRequest(context.Context, *SendContactRequest_Request) (*SendContactRequest_Reply, error)
	// SendMessage sends a message to a group.
	SendMessage(context.Context, *SendMessage_Request) (*SendMessage_Reply, error)
	// SendReplyOptions sends a list of prefilled response options to a group.
	SendReplyOptions(context.Context, *SendReplyOptions_Request) (*SendReplyOptions_Reply, error)
	// SendAck sends an acknowledge payload for given message id.
	SendAck(context.Context, *SendAck_Request) (*SendAck_Reply, error)
	// SystemInfo returns runtime information.
	SystemInfo(context.Context, *SystemInfo_Request) (*SystemInfo_Reply, error)
	// Use to test stream.
	EchoTest(*EchoTest_Request, MessengerService_EchoTestServer) error
	// Use to test duplex stream.
	EchoDuplexTest(MessengerService_EchoDuplexTestServer) error
	ConversationStream(*ConversationStream_Request, MessengerService_ConversationStreamServer) error
	EventStream(*EventStream_Request, MessengerService_EventStreamServer) error
	ConversationCreate(context.Context, *ConversationCreate_Request) (*ConversationCreate_Reply, error)
	ConversationJoin(context.Context, *ConversationJoin_Request) (*ConversationJoin_Reply, error)
	AccountGet(context.Context, *AccountGet_Request) (*AccountGet_Reply, error)
	AccountUpdate(context.Context, *AccountUpdate_Request) (*AccountUpdate_Reply, error)
	ContactRequest(context.Context, *ContactRequest_Request) (*ContactRequest_Reply, error)
	ContactAccept(context.Context, *ContactAccept_Request) (*ContactAccept_Reply, error)
	Interact(context.Context, *Interact_Request) (*Interact_Reply, error)
	ConversationOpen(context.Context, *ConversationOpen_Request) (*ConversationOpen_Reply, error)
	ConversationClose(context.Context, *ConversationClose_Request) (*ConversationClose_Reply, error)
	// ServicesTokenList Retrieves the list of service server tokens
	ServicesTokenList(*protocoltypes.ServicesTokenList_Request, MessengerService_ServicesTokenListServer) error
	// ReplicationServiceRegisterGroup Asks a replication service to distribute a group contents
	ReplicationServiceRegisterGroup(context.Context, *ReplicationServiceRegisterGroup_Request) (*ReplicationServiceRegisterGroup_Reply, error)
	// ReplicationSetAutoEnable Sets whether new groups should be replicated automatically or not
	ReplicationSetAutoEnable(context.Context, *ReplicationSetAutoEnable_Request) (*ReplicationSetAutoEnable_Reply, error)
	// BannerQuote returns the quote of the day.
	BannerQuote(context.Context, *BannerQuote_Request) (*BannerQuote_Reply, error)
	// GetUsername returns the name of the device/user using Android/iOS/universal API
	GetUsername(context.Context, *GetUsername_Request) (*GetUsername_Reply, error)
	// InstanceExportData exports instance data
	InstanceExportData(*InstanceExportData_Request, MessengerService_InstanceExportDataServer) error
	// MediaPrepare allows to upload a file and returns a cid to attach to messages
	MediaPrepare(MessengerService_MediaPrepareServer) error
	// MediaRetrieve allows to download a file attached to a message
	MediaRetrieve(*MediaRetrieve_Request, MessengerService_MediaRetrieveServer) error
}

// UnimplementedMessengerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessengerServiceServer struct {
}

func (*UnimplementedMessengerServiceServer) InstanceShareableBertyID(ctx context.Context, req *InstanceShareableBertyID_Request) (*InstanceShareableBertyID_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstanceShareableBertyID not implemented")
}

func (*UnimplementedMessengerServiceServer) ShareableBertyGroup(ctx context.Context, req *ShareableBertyGroup_Request) (*ShareableBertyGroup_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareableBertyGroup not implemented")
}

func (*UnimplementedMessengerServiceServer) DevShareInstanceBertyID(ctx context.Context, req *DevShareInstanceBertyID_Request) (*DevShareInstanceBertyID_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DevShareInstanceBertyID not implemented")
}

func (*UnimplementedMessengerServiceServer) ParseDeepLink(ctx context.Context, req *ParseDeepLink_Request) (*ParseDeepLink_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseDeepLink not implemented")
}

func (*UnimplementedMessengerServiceServer) SendContactRequest(ctx context.Context, req *SendContactRequest_Request) (*SendContactRequest_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendContactRequest not implemented")
}

func (*UnimplementedMessengerServiceServer) SendMessage(ctx context.Context, req *SendMessage_Request) (*SendMessage_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func (*UnimplementedMessengerServiceServer) SendReplyOptions(ctx context.Context, req *SendReplyOptions_Request) (*SendReplyOptions_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendReplyOptions not implemented")
}

func (*UnimplementedMessengerServiceServer) SendAck(ctx context.Context, req *SendAck_Request) (*SendAck_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendAck not implemented")
}

func (*UnimplementedMessengerServiceServer) SystemInfo(ctx context.Context, req *SystemInfo_Request) (*SystemInfo_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemInfo not implemented")
}

func (*UnimplementedMessengerServiceServer) EchoTest(req *EchoTest_Request, srv MessengerService_EchoTestServer) error {
	return status.Errorf(codes.Unimplemented, "method EchoTest not implemented")
}

func (*UnimplementedMessengerServiceServer) EchoDuplexTest(srv MessengerService_EchoDuplexTestServer) error {
	return status.Errorf(codes.Unimplemented, "method EchoDuplexTest not implemented")
}

func (*UnimplementedMessengerServiceServer) ConversationStream(req *ConversationStream_Request, srv MessengerService_ConversationStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ConversationStream not implemented")
}

func (*UnimplementedMessengerServiceServer) EventStream(req *EventStream_Request, srv MessengerService_EventStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method EventStream not implemented")
}

func (*UnimplementedMessengerServiceServer) ConversationCreate(ctx context.Context, req *ConversationCreate_Request) (*ConversationCreate_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConversationCreate not implemented")
}

func (*UnimplementedMessengerServiceServer) ConversationJoin(ctx context.Context, req *ConversationJoin_Request) (*ConversationJoin_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConversationJoin not implemented")
}

func (*UnimplementedMessengerServiceServer) AccountGet(ctx context.Context, req *AccountGet_Request) (*AccountGet_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGet not implemented")
}

func (*UnimplementedMessengerServiceServer) AccountUpdate(ctx context.Context, req *AccountUpdate_Request) (*AccountUpdate_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdate not implemented")
}

func (*UnimplementedMessengerServiceServer) ContactRequest(ctx context.Context, req *ContactRequest_Request) (*ContactRequest_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactRequest not implemented")
}

func (*UnimplementedMessengerServiceServer) ContactAccept(ctx context.Context, req *ContactAccept_Request) (*ContactAccept_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactAccept not implemented")
}

func (*UnimplementedMessengerServiceServer) Interact(ctx context.Context, req *Interact_Request) (*Interact_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Interact not implemented")
}

func (*UnimplementedMessengerServiceServer) ConversationOpen(ctx context.Context, req *ConversationOpen_Request) (*ConversationOpen_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConversationOpen not implemented")
}

func (*UnimplementedMessengerServiceServer) ConversationClose(ctx context.Context, req *ConversationClose_Request) (*ConversationClose_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConversationClose not implemented")
}

func (*UnimplementedMessengerServiceServer) ServicesTokenList(req *protocoltypes.ServicesTokenList_Request, srv MessengerService_ServicesTokenListServer) error {
	return status.Errorf(codes.Unimplemented, "method ServicesTokenList not implemented")
}

func (*UnimplementedMessengerServiceServer) ReplicationServiceRegisterGroup(ctx context.Context, req *ReplicationServiceRegisterGroup_Request) (*ReplicationServiceRegisterGroup_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicationServiceRegisterGroup not implemented")
}

func (*UnimplementedMessengerServiceServer) ReplicationSetAutoEnable(ctx context.Context, req *ReplicationSetAutoEnable_Request) (*ReplicationSetAutoEnable_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicationSetAutoEnable not implemented")
}

func (*UnimplementedMessengerServiceServer) BannerQuote(ctx context.Context, req *BannerQuote_Request) (*BannerQuote_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BannerQuote not implemented")
}

func (*UnimplementedMessengerServiceServer) GetUsername(ctx context.Context, req *GetUsername_Request) (*GetUsername_Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsername not implemented")
}

func (*UnimplementedMessengerServiceServer) InstanceExportData(req *InstanceExportData_Request, srv MessengerService_InstanceExportDataServer) error {
	return status.Errorf(codes.Unimplemented, "method InstanceExportData not implemented")
}

func (*UnimplementedMessengerServiceServer) MediaPrepare(srv MessengerService_MediaPrepareServer) error {
	return status.Errorf(codes.Unimplemented, "method MediaPrepare not implemented")
}

func (*UnimplementedMessengerServiceServer) MediaRetrieve(req *MediaRetrieve_Request, srv MessengerService_MediaRetrieveServer) error {
	return status.Errorf(codes.Unimplemented, "method MediaRetrieve not implemented")
}

func RegisterMessengerServiceServer(s *grpc.Server, srv MessengerServiceServer) {
	s.RegisterService(&_MessengerService_serviceDesc, srv)
}

func _MessengerService_InstanceShareableBertyID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceShareableBertyID_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).InstanceShareableBertyID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/InstanceShareableBertyID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).InstanceShareableBertyID(ctx, req.(*InstanceShareableBertyID_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ShareableBertyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareableBertyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ShareableBertyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ShareableBertyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ShareableBertyGroup(ctx, req.(*ShareableBertyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_DevShareInstanceBertyID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevShareInstanceBertyID_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).DevShareInstanceBertyID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/DevShareInstanceBertyID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).DevShareInstanceBertyID(ctx, req.(*DevShareInstanceBertyID_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ParseDeepLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseDeepLink_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ParseDeepLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ParseDeepLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ParseDeepLink(ctx, req.(*ParseDeepLink_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_SendContactRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendContactRequest_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).SendContactRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/SendContactRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).SendContactRequest(ctx, req.(*SendContactRequest_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessage_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).SendMessage(ctx, req.(*SendMessage_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_SendReplyOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendReplyOptions_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).SendReplyOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/SendReplyOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).SendReplyOptions(ctx, req.(*SendReplyOptions_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_SendAck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendAck_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).SendAck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/SendAck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).SendAck(ctx, req.(*SendAck_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_SystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemInfo_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).SystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/SystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).SystemInfo(ctx, req.(*SystemInfo_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_EchoTest_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EchoTest_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).EchoTest(m, &messengerServiceEchoTestServer{stream})
}

type MessengerService_EchoTestServer interface {
	Send(*EchoTest_Reply) error
	grpc.ServerStream
}

type messengerServiceEchoTestServer struct {
	grpc.ServerStream
}

func (x *messengerServiceEchoTestServer) Send(m *EchoTest_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MessengerService_EchoDuplexTest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessengerServiceServer).EchoDuplexTest(&messengerServiceEchoDuplexTestServer{stream})
}

type MessengerService_EchoDuplexTestServer interface {
	Send(*EchoDuplexTest_Reply) error
	Recv() (*EchoDuplexTest_Request, error)
	grpc.ServerStream
}

type messengerServiceEchoDuplexTestServer struct {
	grpc.ServerStream
}

func (x *messengerServiceEchoDuplexTestServer) Send(m *EchoDuplexTest_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messengerServiceEchoDuplexTestServer) Recv() (*EchoDuplexTest_Request, error) {
	m := new(EchoDuplexTest_Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MessengerService_ConversationStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConversationStream_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).ConversationStream(m, &messengerServiceConversationStreamServer{stream})
}

type MessengerService_ConversationStreamServer interface {
	Send(*ConversationStream_Reply) error
	grpc.ServerStream
}

type messengerServiceConversationStreamServer struct {
	grpc.ServerStream
}

func (x *messengerServiceConversationStreamServer) Send(m *ConversationStream_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MessengerService_EventStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventStream_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).EventStream(m, &messengerServiceEventStreamServer{stream})
}

type MessengerService_EventStreamServer interface {
	Send(*EventStream_Reply) error
	grpc.ServerStream
}

type messengerServiceEventStreamServer struct {
	grpc.ServerStream
}

func (x *messengerServiceEventStreamServer) Send(m *EventStream_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MessengerService_ConversationCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversationCreate_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ConversationCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ConversationCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ConversationCreate(ctx, req.(*ConversationCreate_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ConversationJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversationJoin_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ConversationJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ConversationJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ConversationJoin(ctx, req.(*ConversationJoin_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_AccountGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountGet_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).AccountGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/AccountGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).AccountGet(ctx, req.(*AccountGet_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_AccountUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountUpdate_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).AccountUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/AccountUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).AccountUpdate(ctx, req.(*AccountUpdate_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ContactRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRequest_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ContactRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ContactRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ContactRequest(ctx, req.(*ContactRequest_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ContactAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactAccept_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ContactAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ContactAccept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ContactAccept(ctx, req.(*ContactAccept_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_Interact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Interact_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).Interact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/Interact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).Interact(ctx, req.(*Interact_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ConversationOpen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversationOpen_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ConversationOpen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ConversationOpen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ConversationOpen(ctx, req.(*ConversationOpen_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ConversationClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversationClose_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ConversationClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ConversationClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ConversationClose(ctx, req.(*ConversationClose_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ServicesTokenList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(protocoltypes.ServicesTokenList_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).ServicesTokenList(m, &messengerServiceServicesTokenListServer{stream})
}

type MessengerService_ServicesTokenListServer interface {
	Send(*protocoltypes.ServicesTokenList_Reply) error
	grpc.ServerStream
}

type messengerServiceServicesTokenListServer struct {
	grpc.ServerStream
}

func (x *messengerServiceServicesTokenListServer) Send(m *protocoltypes.ServicesTokenList_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MessengerService_ReplicationServiceRegisterGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicationServiceRegisterGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ReplicationServiceRegisterGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ReplicationServiceRegisterGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ReplicationServiceRegisterGroup(ctx, req.(*ReplicationServiceRegisterGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_ReplicationSetAutoEnable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicationSetAutoEnable_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).ReplicationSetAutoEnable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/ReplicationSetAutoEnable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).ReplicationSetAutoEnable(ctx, req.(*ReplicationSetAutoEnable_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_BannerQuote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BannerQuote_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).BannerQuote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/BannerQuote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).BannerQuote(ctx, req.(*BannerQuote_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_GetUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsername_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessengerServiceServer).GetUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berty.messenger.v1.MessengerService/GetUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessengerServiceServer).GetUsername(ctx, req.(*GetUsername_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessengerService_InstanceExportData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InstanceExportData_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).InstanceExportData(m, &messengerServiceInstanceExportDataServer{stream})
}

type MessengerService_InstanceExportDataServer interface {
	Send(*InstanceExportData_Reply) error
	grpc.ServerStream
}

type messengerServiceInstanceExportDataServer struct {
	grpc.ServerStream
}

func (x *messengerServiceInstanceExportDataServer) Send(m *InstanceExportData_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MessengerService_MediaPrepare_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessengerServiceServer).MediaPrepare(&messengerServiceMediaPrepareServer{stream})
}

type MessengerService_MediaPrepareServer interface {
	SendAndClose(*MediaPrepare_Reply) error
	Recv() (*MediaPrepare_Request, error)
	grpc.ServerStream
}

type messengerServiceMediaPrepareServer struct {
	grpc.ServerStream
}

func (x *messengerServiceMediaPrepareServer) SendAndClose(m *MediaPrepare_Reply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messengerServiceMediaPrepareServer) Recv() (*MediaPrepare_Request, error) {
	m := new(MediaPrepare_Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MessengerService_MediaRetrieve_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MediaRetrieve_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessengerServiceServer).MediaRetrieve(m, &messengerServiceMediaRetrieveServer{stream})
}

type MessengerService_MediaRetrieveServer interface {
	Send(*MediaRetrieve_Reply) error
	grpc.ServerStream
}

type messengerServiceMediaRetrieveServer struct {
	grpc.ServerStream
}

func (x *messengerServiceMediaRetrieveServer) Send(m *MediaRetrieve_Reply) error {
	return x.ServerStream.SendMsg(m)
}

var _MessengerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "berty.messenger.v1.MessengerService",
	HandlerType: (*MessengerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InstanceShareableBertyID",
			Handler:    _MessengerService_InstanceShareableBertyID_Handler,
		},
		{
			MethodName: "ShareableBertyGroup",
			Handler:    _MessengerService_ShareableBertyGroup_Handler,
		},
		{
			MethodName: "DevShareInstanceBertyID",
			Handler:    _MessengerService_DevShareInstanceBertyID_Handler,
		},
		{
			MethodName: "ParseDeepLink",
			Handler:    _MessengerService_ParseDeepLink_Handler,
		},
		{
			MethodName: "SendContactRequest",
			Handler:    _MessengerService_SendContactRequest_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _MessengerService_SendMessage_Handler,
		},
		{
			MethodName: "SendReplyOptions",
			Handler:    _MessengerService_SendReplyOptions_Handler,
		},
		{
			MethodName: "SendAck",
			Handler:    _MessengerService_SendAck_Handler,
		},
		{
			MethodName: "SystemInfo",
			Handler:    _MessengerService_SystemInfo_Handler,
		},
		{
			MethodName: "ConversationCreate",
			Handler:    _MessengerService_ConversationCreate_Handler,
		},
		{
			MethodName: "ConversationJoin",
			Handler:    _MessengerService_ConversationJoin_Handler,
		},
		{
			MethodName: "AccountGet",
			Handler:    _MessengerService_AccountGet_Handler,
		},
		{
			MethodName: "AccountUpdate",
			Handler:    _MessengerService_AccountUpdate_Handler,
		},
		{
			MethodName: "ContactRequest",
			Handler:    _MessengerService_ContactRequest_Handler,
		},
		{
			MethodName: "ContactAccept",
			Handler:    _MessengerService_ContactAccept_Handler,
		},
		{
			MethodName: "Interact",
			Handler:    _MessengerService_Interact_Handler,
		},
		{
			MethodName: "ConversationOpen",
			Handler:    _MessengerService_ConversationOpen_Handler,
		},
		{
			MethodName: "ConversationClose",
			Handler:    _MessengerService_ConversationClose_Handler,
		},
		{
			MethodName: "ReplicationServiceRegisterGroup",
			Handler:    _MessengerService_ReplicationServiceRegisterGroup_Handler,
		},
		{
			MethodName: "ReplicationSetAutoEnable",
			Handler:    _MessengerService_ReplicationSetAutoEnable_Handler,
		},
		{
			MethodName: "BannerQuote",
			Handler:    _MessengerService_BannerQuote_Handler,
		},
		{
			MethodName: "GetUsername",
			Handler:    _MessengerService_GetUsername_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EchoTest",
			Handler:       _MessengerService_EchoTest_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EchoDuplexTest",
			Handler:       _MessengerService_EchoDuplexTest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ConversationStream",
			Handler:       _MessengerService_ConversationStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventStream",
			Handler:       _MessengerService_EventStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ServicesTokenList",
			Handler:       _MessengerService_ServicesTokenList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "InstanceExportData",
			Handler:       _MessengerService_InstanceExportData_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MediaPrepare",
			Handler:       _MessengerService_MediaPrepare_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "MediaRetrieve",
			Handler:       _MessengerService_MediaRetrieve_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "messengertypes.proto",
}
